;;; Function definitions for W32API. 

;;; Genereated by a modified version of C1CC ( http://www.repo.or.cz/w/c1cc.git )
;;; from windows.h provided in the w32api package of MINGW32 ( http://www.mingw.org ). 

;;; Generator maintained by CrLF0710 < crlf0710 at gmail.com >. 
;;; Generated on 15:27:38, 7/09/2012. 

;;; DO NOT EDIT THIS FILE DIRECTLY. 

(in-package #:cl-w32api)

(defcfun ("__mingw_get_crt_info" %%mingw-get-crt-info) :pointer )
(defcfun ("_except_handler" %except-handler) :int  (|_ExceptionRecord| :pointer) (|_EstablisherFrame| :pointer) (|_ContextRecord| :pointer) (|_DispatcherContext| :pointer))
(defcfun ("_exception_code" %exception-code) :unsigned-long )
(defcfun ("_exception_info" %exception-info) :pointer )
(defcfun ("_abnormal_termination" %abnormal-termination) :int )
(defcfun ("__CppXcptFilter" %%cppxcptfilter) :int  (|_ExceptionNum| :unsigned-long) (|_ExceptionPtr| :pointer))
(defcfun ("_XcptFilter" %xcptfilter) :int  (|_ExceptionNum| :unsigned-long) (|_ExceptionPtr| :pointer))
(defcfun ("__updatetlocinfo" %%updatetlocinfo) |pthreadlocinfo| )
(defcfun ("__updatetmbcinfo" %%updatetmbcinfo) |pthreadmbcinfo| )
(defcfun ("_isctype" %isctype) :int  (_c :int) (|_Type| :int))
(defcfun ("_isctype_l" %isctype-l) :int  (_c :int) (|_Type| :int) (|_Locale| |_locale_t|))
(defcfun ("isalpha" isalpha) :int  (_c :int))
(defcfun ("_isalpha_l" %isalpha-l) :int  (_c :int) (|_Locale| |_locale_t|))
(defcfun ("isupper" isupper) :int  (_c :int))
(defcfun ("_isupper_l" %isupper-l) :int  (_c :int) (|_Locale| |_locale_t|))
(defcfun ("islower" islower) :int  (_c :int))
(defcfun ("_islower_l" %islower-l) :int  (_c :int) (|_Locale| |_locale_t|))
(defcfun ("isdigit" isdigit) :int  (_c :int))
(defcfun ("_isdigit_l" %isdigit-l) :int  (_c :int) (|_Locale| |_locale_t|))
(defcfun ("isxdigit" isxdigit) :int  (_c :int))
(defcfun ("_isxdigit_l" %isxdigit-l) :int  (_c :int) (|_Locale| |_locale_t|))
(defcfun ("isspace" isspace) :int  (_c :int))
(defcfun ("_isspace_l" %isspace-l) :int  (_c :int) (|_Locale| |_locale_t|))
(defcfun ("ispunct" ispunct) :int  (_c :int))
(defcfun ("_ispunct_l" %ispunct-l) :int  (_c :int) (|_Locale| |_locale_t|))
(defcfun ("isalnum" isalnum) :int  (_c :int))
(defcfun ("_isalnum_l" %isalnum-l) :int  (_c :int) (|_Locale| |_locale_t|))
(defcfun ("isprint" isprint) :int  (_c :int))
(defcfun ("_isprint_l" %isprint-l) :int  (_c :int) (|_Locale| |_locale_t|))
(defcfun ("isgraph" isgraph) :int  (_c :int))
(defcfun ("_isgraph_l" %isgraph-l) :int  (_c :int) (|_Locale| |_locale_t|))
(defcfun ("iscntrl" iscntrl) :int  (_c :int))
(defcfun ("_iscntrl_l" %iscntrl-l) :int  (_c :int) (|_Locale| |_locale_t|))
(defcfun ("toupper" toupper) :int  (_c :int))
(defcfun ("tolower" tolower) :int  (_c :int))
(defcfun ("_tolower" %tolower) :int  (_c :int))
(defcfun ("_tolower_l" %tolower-l) :int  (_c :int) (|_Locale| |_locale_t|))
(defcfun ("_toupper" %toupper) :int  (_c :int))
(defcfun ("_toupper_l" %toupper-l) :int  (_c :int) (|_Locale| |_locale_t|))
(defcfun ("__isascii" %%isascii) :int  (_c :int))
(defcfun ("__toascii" %%toascii) :int  (_c :int))
(defcfun ("__iscsymf" %%iscsymf) :int  (_c :int))
(defcfun ("__iscsym" %%iscsym) :int  (_c :int))
(defcfun ("isblank" isblank) :int  (_c :int))
(defcfun ("iswalpha" iswalpha) :int  (_c |wint_t|))
(defcfun ("_iswalpha_l" %iswalpha-l) :int  (_c |wint_t|) (|_Locale| |_locale_t|))
(defcfun ("iswupper" iswupper) :int  (_c |wint_t|))
(defcfun ("_iswupper_l" %iswupper-l) :int  (_c |wint_t|) (|_Locale| |_locale_t|))
(defcfun ("iswlower" iswlower) :int  (_c |wint_t|))
(defcfun ("_iswlower_l" %iswlower-l) :int  (_c |wint_t|) (|_Locale| |_locale_t|))
(defcfun ("iswdigit" iswdigit) :int  (_c |wint_t|))
(defcfun ("_iswdigit_l" %iswdigit-l) :int  (_c |wint_t|) (|_Locale| |_locale_t|))
(defcfun ("iswxdigit" iswxdigit) :int  (_c |wint_t|))
(defcfun ("_iswxdigit_l" %iswxdigit-l) :int  (_c |wint_t|) (|_Locale| |_locale_t|))
(defcfun ("iswspace" iswspace) :int  (_c |wint_t|))
(defcfun ("_iswspace_l" %iswspace-l) :int  (_c |wint_t|) (|_Locale| |_locale_t|))
(defcfun ("iswpunct" iswpunct) :int  (_c |wint_t|))
(defcfun ("_iswpunct_l" %iswpunct-l) :int  (_c |wint_t|) (|_Locale| |_locale_t|))
(defcfun ("iswalnum" iswalnum) :int  (_c |wint_t|))
(defcfun ("_iswalnum_l" %iswalnum-l) :int  (_c |wint_t|) (|_Locale| |_locale_t|))
(defcfun ("iswprint" iswprint) :int  (_c |wint_t|))
(defcfun ("_iswprint_l" %iswprint-l) :int  (_c |wint_t|) (|_Locale| |_locale_t|))
(defcfun ("iswgraph" iswgraph) :int  (_c |wint_t|))
(defcfun ("_iswgraph_l" %iswgraph-l) :int  (_c |wint_t|) (|_Locale| |_locale_t|))
(defcfun ("iswcntrl" iswcntrl) :int  (_c |wint_t|))
(defcfun ("_iswcntrl_l" %iswcntrl-l) :int  (_c |wint_t|) (|_Locale| |_locale_t|))
(defcfun ("iswascii" iswascii) :int  (_c |wint_t|))
(defcfun ("isleadbyte" isleadbyte) :int  (_c :int))
(defcfun ("_isleadbyte_l" %isleadbyte-l) :int  (_c :int) (|_Locale| |_locale_t|))
(defcfun ("towupper" towupper) |wint_t|  (_c |wint_t|))
(defcfun ("_towupper_l" %towupper-l) |wint_t|  (_c |wint_t|) (|_Locale| |_locale_t|))
(defcfun ("towlower" towlower) |wint_t|  (_c |wint_t|))
(defcfun ("_towlower_l" %towlower-l) |wint_t|  (_c |wint_t|) (|_Locale| |_locale_t|))
(defcfun ("iswctype" iswctype) :int  (_c |wint_t|) (|_Type| |wctype_t|))
(defcfun ("_iswctype_l" %iswctype-l) :int  (_c |wint_t|) (|_Type| |wctype_t|) (|_Locale| |_locale_t|))
(defcfun ("__iswcsymf" %%iswcsymf) :int  (_c |wint_t|))
(defcfun ("_iswcsymf_l" %iswcsymf-l) :int  (_c |wint_t|) (|_Locale| |_locale_t|))
(defcfun ("__iswcsym" %%iswcsym) :int  (_c |wint_t|))
(defcfun ("_iswcsym_l" %iswcsym-l) :int  (_c |wint_t|) (|_Locale| |_locale_t|))
(defcfun ("is_wctype" is-wctype) :int  (_c |wint_t|) (|_Type| |wctype_t|))
(defcfun ("iswblank" iswblank) :int  (_c |wint_t|))
(defcfun ("_rotl" %rotl) :unsigned-int  (|Value| :unsigned-int) (|Shift| :int))
(defcfun ("_rotr" %rotr) :unsigned-int  (|Value| :unsigned-int) (|Shift| :int))
(defcfun ("_rotl64" %rotl64) :unsigned-long-long  (|Value| :unsigned-long-long) (|Shift| :int))
(defcfun ("_rotr64" %rotr64) :unsigned-long-long  (|Value| :unsigned-long-long) (|Shift| :int))
(defcfun ("_memccpy" %memccpy) :pointer  (|_Dst| :pointer) (|_Src| :pointer) (|_Val| :int) (|_MaxCount| |size_t|))
(defcfun ("memchr" memchr) :pointer  (|_Buf| :pointer) (|_Val| :int) (|_MaxCount| |size_t|))
(defcfun ("_memicmp" %memicmp) :int  (|_Buf1| :pointer) (|_Buf2| :pointer) (|_Size| |size_t|))
(defcfun ("_memicmp_l" %memicmp-l) :int  (|_Buf1| :pointer) (|_Buf2| :pointer) (|_Size| |size_t|) (|_Locale| |_locale_t|))
(defcfun ("memcmp" memcmp) :int  (|_Buf1| :pointer) (|_Buf2| :pointer) (|_Size| |size_t|))
(defcfun ("memcpy" memcpy) :pointer  (|_Dst| :pointer) (|_Src| :pointer) (|_Size| |size_t|))
(defcfun ("memset" memset) :pointer  (|_Dst| :pointer) (|_Val| :int) (|_Size| |size_t|))
(defcfun ("memccpy" memccpy) :pointer  (|_Dst| :pointer) (|_Src| :pointer) (|_Val| :int) (|_Size| |size_t|))
(defcfun ("memicmp" memicmp) :int  (|_Buf1| :pointer) (|_Buf2| :pointer) (|_Size| |size_t|))
(defcfun ("_strset" %strset) :pointer  (|_Str| :pointer) (|_Val| :int))
(defcfun ("strcpy" strcpy) :pointer  (|_Dest| :pointer) (|_Source| :pointer))
(defcfun ("strcat" strcat) :pointer  (|_Dest| :pointer) (|_Source| :pointer))
(defcfun ("strcmp" strcmp) :int  (|_Str1| :pointer) (|_Str2| :pointer))
(defcfun ("strlen" strlen) |size_t|  (|_Str| :pointer))
(defcfun ("memmove" memmove) :pointer  (|_Dst| :pointer) (|_Src| :pointer) (|_Size| |size_t|))
(defcfun ("_strdup" %strdup) :pointer  (|_Src| :pointer))
(defcfun ("strchr" strchr) :pointer  (|_Str| :pointer) (|_Val| :int))
(defcfun ("_stricmp" %stricmp) :int  (|_Str1| :pointer) (|_Str2| :pointer))
(defcfun ("_strcmpi" %strcmpi) :int  (|_Str1| :pointer) (|_Str2| :pointer))
(defcfun ("_stricmp_l" %stricmp-l) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_Locale| |_locale_t|))
(defcfun ("strcoll" strcoll) :int  (|_Str1| :pointer) (|_Str2| :pointer))
(defcfun ("_strcoll_l" %strcoll-l) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_Locale| |_locale_t|))
(defcfun ("_stricoll" %stricoll) :int  (|_Str1| :pointer) (|_Str2| :pointer))
(defcfun ("_stricoll_l" %stricoll-l) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_Locale| |_locale_t|))
(defcfun ("_strncoll" %strncoll) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_MaxCount| |size_t|))
(defcfun ("_strncoll_l" %strncoll-l) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_MaxCount| |size_t|) (|_Locale| |_locale_t|))
(defcfun ("_strnicoll" %strnicoll) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_MaxCount| |size_t|))
(defcfun ("_strnicoll_l" %strnicoll-l) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_MaxCount| |size_t|) (|_Locale| |_locale_t|))
(defcfun ("strcspn" strcspn) |size_t|  (|_Str| :pointer) (|_Control| :pointer))
(defcfun ("_strerror" %strerror) :pointer  (|_ErrMsg| :pointer))
(defcfun ("strerror" strerror) :pointer  (arg0 :int))
(defcfun ("_strlwr" %strlwr) :pointer  (|_String| :pointer))
(defcfun ("strlwr_l" strlwr-l) :pointer  (|_String| :pointer) (|_Locale| |_locale_t|))
(defcfun ("strncat" strncat) :pointer  (|_Dest| :pointer) (|_Source| :pointer) (|_Count| |size_t|))
(defcfun ("strncmp" strncmp) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_MaxCount| |size_t|))
(defcfun ("_strnicmp" %strnicmp) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_MaxCount| |size_t|))
(defcfun ("_strnicmp_l" %strnicmp-l) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_MaxCount| |size_t|) (|_Locale| |_locale_t|))
(defcfun ("strncpy" strncpy) :pointer  (|_Dest| :pointer) (|_Source| :pointer) (|_Count| |size_t|))
(defcfun ("_strnset" %strnset) :pointer  (|_Str| :pointer) (|_Val| :int) (|_MaxCount| |size_t|))
(defcfun ("strpbrk" strpbrk) :pointer  (|_Str| :pointer) (|_Control| :pointer))
(defcfun ("strrchr" strrchr) :pointer  (|_Str| :pointer) (|_Ch| :int))
(defcfun ("_strrev" %strrev) :pointer  (|_Str| :pointer))
(defcfun ("strspn" strspn) |size_t|  (|_Str| :pointer) (|_Control| :pointer))
(defcfun ("strstr" strstr) :pointer  (|_Str| :pointer) (|_SubStr| :pointer))
(defcfun ("strtok" strtok) :pointer  (|_Str| :pointer) (|_Delim| :pointer))
(defcfun ("_strupr" %strupr) :pointer  (|_String| :pointer))
(defcfun ("_strupr_l" %strupr-l) :pointer  (|_String| :pointer) (|_Locale| |_locale_t|))
(defcfun ("strxfrm" strxfrm) |size_t|  (|_Dst| :pointer) (|_Src| :pointer) (|_MaxCount| |size_t|))
(defcfun ("_strxfrm_l" %strxfrm-l) |size_t|  (|_Dst| :pointer) (|_Src| :pointer) (|_MaxCount| |size_t|) (|_Locale| |_locale_t|))
(defcfun ("strdup" strdup) :pointer  (|_Src| :pointer))
(defcfun ("strcmpi" strcmpi) :int  (|_Str1| :pointer) (|_Str2| :pointer))
(defcfun ("stricmp" stricmp) :int  (|_Str1| :pointer) (|_Str2| :pointer))
(defcfun ("strlwr" strlwr) :pointer  (|_Str| :pointer))
(defcfun ("strnicmp" strnicmp) :int  (|_Str1| :pointer) (|_Str| :pointer) (|_MaxCount| |size_t|))
(defcfun ("strncasecmp" strncasecmp) :int  (arg0 :pointer) (arg1 :pointer) (arg2 |size_t|))
(defcfun ("strcasecmp" strcasecmp) :int  (arg0 :pointer) (arg1 :pointer))
(defcfun ("strnset" strnset) :pointer  (|_Str| :pointer) (|_Val| :int) (|_MaxCount| |size_t|))
(defcfun ("strrev" strrev) :pointer  (|_Str| :pointer))
(defcfun ("strset" strset) :pointer  (|_Str| :pointer) (|_Val| :int))
(defcfun ("strupr" strupr) :pointer  (|_Str| :pointer))
(defcfun ("_wcsdup" %wcsdup) :pointer  (|_Str| :pointer))
(defcfun ("wcscat" wcscat) :pointer  (|_Dest| :pointer) (|_Source| :pointer))
(defcfun ("wcschr" wcschr) :pointer  (|_Str| :pointer) (|_Ch| |wchar_t|))
(defcfun ("wcscmp" wcscmp) :int  (|_Str1| :pointer) (|_Str2| :pointer))
(defcfun ("wcscpy" wcscpy) :pointer  (|_Dest| :pointer) (|_Source| :pointer))
(defcfun ("wcscspn" wcscspn) |size_t|  (|_Str| :pointer) (|_Control| :pointer))
(defcfun ("wcslen" wcslen) |size_t|  (|_Str| :pointer))
(defcfun ("wcsnlen" wcsnlen) |size_t|  (|_Src| :pointer) (|_MaxCount| |size_t|))
(defcfun ("wcsncat" wcsncat) :pointer  (|_Dest| :pointer) (|_Source| :pointer) (|_Count| |size_t|))
(defcfun ("wcsncmp" wcsncmp) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_MaxCount| |size_t|))
(defcfun ("wcsncpy" wcsncpy) :pointer  (|_Dest| :pointer) (|_Source| :pointer) (|_Count| |size_t|))
(defcfun ("wcspbrk" wcspbrk) :pointer  (|_Str| :pointer) (|_Control| :pointer))
(defcfun ("wcsrchr" wcsrchr) :pointer  (|_Str| :pointer) (|_Ch| |wchar_t|))
(defcfun ("wcsspn" wcsspn) |size_t|  (|_Str| :pointer) (|_Control| :pointer))
(defcfun ("wcsstr" wcsstr) :pointer  (|_Str| :pointer) (|_SubStr| :pointer))
(defcfun ("wcstok" wcstok) :pointer  (|_Str| :pointer) (|_Delim| :pointer))
(defcfun ("_wcserror" %wcserror) :pointer  (|_ErrNum| :int))
(defcfun ("__wcserror" %%wcserror) :pointer  (|_Str| :pointer))
(defcfun ("_wcsicmp" %wcsicmp) :int  (|_Str1| :pointer) (|_Str2| :pointer))
(defcfun ("_wcsicmp_l" %wcsicmp-l) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_Locale| |_locale_t|))
(defcfun ("_wcsnicmp" %wcsnicmp) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_MaxCount| |size_t|))
(defcfun ("_wcsnicmp_l" %wcsnicmp-l) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_MaxCount| |size_t|) (|_Locale| |_locale_t|))
(defcfun ("_wcsnset" %wcsnset) :pointer  (|_Str| :pointer) (|_Val| |wchar_t|) (|_MaxCount| |size_t|))
(defcfun ("_wcsrev" %wcsrev) :pointer  (|_Str| :pointer))
(defcfun ("_wcsset" %wcsset) :pointer  (|_Str| :pointer) (|_Val| |wchar_t|))
(defcfun ("_wcslwr" %wcslwr) :pointer  (|_String| :pointer))
(defcfun ("_wcslwr_l" %wcslwr-l) :pointer  (|_String| :pointer) (|_Locale| |_locale_t|))
(defcfun ("_wcsupr" %wcsupr) :pointer  (|_String| :pointer))
(defcfun ("_wcsupr_l" %wcsupr-l) :pointer  (|_String| :pointer) (|_Locale| |_locale_t|))
(defcfun ("wcsxfrm" wcsxfrm) |size_t|  (|_Dst| :pointer) (|_Src| :pointer) (|_MaxCount| |size_t|))
(defcfun ("_wcsxfrm_l" %wcsxfrm-l) |size_t|  (|_Dst| :pointer) (|_Src| :pointer) (|_MaxCount| |size_t|) (|_Locale| |_locale_t|))
(defcfun ("wcscoll" wcscoll) :int  (|_Str1| :pointer) (|_Str2| :pointer))
(defcfun ("_wcscoll_l" %wcscoll-l) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_Locale| |_locale_t|))
(defcfun ("_wcsicoll" %wcsicoll) :int  (|_Str1| :pointer) (|_Str2| :pointer))
(defcfun ("_wcsicoll_l" %wcsicoll-l) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_Locale| |_locale_t|))
(defcfun ("_wcsncoll" %wcsncoll) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_MaxCount| |size_t|))
(defcfun ("_wcsncoll_l" %wcsncoll-l) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_MaxCount| |size_t|) (|_Locale| |_locale_t|))
(defcfun ("_wcsnicoll" %wcsnicoll) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_MaxCount| |size_t|))
(defcfun ("_wcsnicoll_l" %wcsnicoll-l) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_MaxCount| |size_t|) (|_Locale| |_locale_t|))
(defcfun ("wcsdup" wcsdup) :pointer  (|_Str| :pointer))
(defcfun ("wcsicmp" wcsicmp) :int  (|_Str1| :pointer) (|_Str2| :pointer))
(defcfun ("wcsnicmp" wcsnicmp) :int  (|_Str1| :pointer) (|_Str2| :pointer) (|_MaxCount| |size_t|))
(defcfun ("wcsnset" wcsnset) :pointer  (|_Str| :pointer) (|_Val| |wchar_t|) (|_MaxCount| |size_t|))
(defcfun ("wcsrev" wcsrev) :pointer  (|_Str| :pointer))
(defcfun ("wcsset" wcsset) :pointer  (|_Str| :pointer) (|_Val| |wchar_t|))
(defcfun ("wcslwr" wcslwr) :pointer  (|_Str| :pointer))
(defcfun ("wcsupr" wcsupr) :pointer  (|_Str| :pointer))
(defcfun ("wcsicoll" wcsicoll) :int  (|_Str1| :pointer) (|_Str2| :pointer))
(defcfun ("_interlockedbittestandset" %interlockedbittestandset) boolean  (|Base| :pointer) (|Bit| long))
(defcfun ("_interlockedbittestandreset" %interlockedbittestandreset) boolean  (|Base| :pointer) (|Bit| long))
(defcfun ("InterlockedBitTestAndComplement" interlocked-bit-test-and-complement) boolean  (|Base| :pointer) (|Bit| long))
(defcfun ("NtCurrentTeb" nt-current-teb) :pointer )
(defcfun ("GetCurrentFiber" get-current-fiber) pvoid )
(defcfun ("GetFiberData" get-fiber-data) pvoid )
(defcfun ("MemoryBarrier" memory-barrier) :void )
(defcfun ("RtlInitializeSListHead" rtl-initialize-slist-head :convention :stdcall) :void  (|ListHead| pslist_header))
(defcfun ("RtlFirstEntrySList" rtl-first-entry-slist :convention :stdcall) psingle_list_entry  (|ListHead| :pointer))
(defcfun ("RtlInterlockedPopEntrySList" rtl-interlocked-pop-entry-slist :convention :stdcall) psingle_list_entry  (|ListHead| pslist_header))
(defcfun ("RtlInterlockedPushEntrySList" rtl-interlocked-push-entry-slist :convention :stdcall) psingle_list_entry  (|ListHead| pslist_header) (|ListEntry| psingle_list_entry))
(defcfun ("RtlInterlockedFlushSList" rtl-interlocked-flush-slist :convention :stdcall) psingle_list_entry  (|ListHead| pslist_header))
(defcfun ("RtlQueryDepthSList" rtl-query-depth-slist :convention :stdcall) word  (|ListHead| pslist_header))
(defcfun ("RtlCaptureContext" rtl-capture-context :convention :stdcall) :void  (|ContextRecord| pcontext))
(defcfun ("RtlCompareMemory" rtl-compare-memory :convention :stdcall) size_t  (|Source1| :pointer) (|Source2| :pointer) (|Length| size_t))
(defcfun ("RtlUnwind" rtl-unwind :convention :stdcall) :void  (|TargetFrame| pvoid) (|TargetIp| pvoid) (|ExceptionRecord| pexception_record) (|ReturnValue| pvoid))
(defcfun ("RtlSecureZeroMemory" rtl-secure-zero-memory :convention :stdcall) pvoid  (|ptr| pvoid) (|cnt| size_t))
(defcfun ("VerSetConditionMask" ver-set-condition-mask :convention :stdcall) ulonglong  (|ConditionMask| ulonglong) (|TypeMask| dword) (|Condition| byte))
(defcfun ("RtlApplicationVerifierStop" rtl-application-verifier-stop :convention :stdcall) :void  (|Code| ulong_ptr) (|Message| pstr) (|Param1| ulong_ptr) (|Description1| pstr) (|Param2| ulong_ptr) (|Description2| pstr) (|Param3| ulong_ptr) (|Description3| pstr) (|Param4| ulong_ptr) (|Description4| pstr))
(defcfun ("RtlSetHeapInformation" rtl-set-heap-information :convention :stdcall) dword  (|HeapHandle| pvoid) (|HeapInformationClass| heap_information_class) (|HeapInformation| pvoid) (|HeapInformationLength| size_t))
(defcfun ("RtlQueryHeapInformation" rtl-query-heap-information :convention :stdcall) dword  (|HeapHandle| pvoid) (|HeapInformationClass| heap_information_class) (|HeapInformation| pvoid) (|HeapInformationLength| size_t) (|ReturnLength| psize_t))
(defcfun ("RtlMultipleAllocateHeap" rtl-multiple-allocate-heap :convention :stdcall) dword  (|HeapHandle| pvoid) (|Flags| dword) (|Size| size_t) (|Count| dword) (|Array| :pointer))
(defcfun ("RtlMultipleFreeHeap" rtl-multiple-free-heap :convention :stdcall) dword  (|HeapHandle| pvoid) (|Flags| dword) (|Count| dword) (|Array| :pointer))
(defcfun ("EncodePointer" encode-pointer :convention :stdcall) pvoid  (|Ptr| pvoid))
(defcfun ("DecodePointer" decode-pointer :convention :stdcall) pvoid  (|Ptr| pvoid))
(defcfun ("EncodeSystemPointer" encode-system-pointer :convention :stdcall) pvoid  (|Ptr| pvoid))
(defcfun ("DecodeSystemPointer" decode-system-pointer :convention :stdcall) pvoid  (|Ptr| pvoid))
(defcfun ("_InterlockedIncrement" %interlockedincrement) long  (|lpAddend| :pointer))
(defcfun ("_InterlockedDecrement" %interlockeddecrement) long  (|lpAddend| :pointer))
(defcfun ("_InterlockedExchange" %interlockedexchange) long  (|Target| :pointer) (|Value| long))
(defcfun ("_InterlockedExchangeAdd" %interlockedexchangeadd) long  (|Addend| :pointer) (|Value| long))
(defcfun ("_InterlockedCompareExchange" %interlockedcompareexchange) long  (|Destination| :pointer) (|Exchange| long) (|Comperand| long))
(defcfun ("InterlockedCompareExchange64" interlocked-compare-exchange-64) longlong  (|Destination| :pointer) (|Exchange| longlong) (|Comperand| longlong))
(defcfun ("InterlockedAnd64" interlocked-and-64) longlong  (|Destination| :pointer) (|Value| longlong))
(defcfun ("InterlockedOr64" interlocked-or-64) longlong  (|Destination| :pointer) (|Value| longlong))
(defcfun ("InterlockedXor64" interlocked-xor-64) longlong  (|Destination| :pointer) (|Value| longlong))
(defcfun ("InterlockedIncrement64" interlocked-increment-64) longlong  (|Addend| :pointer))
(defcfun ("InterlockedDecrement64" interlocked-decrement-64) longlong  (|Addend| :pointer))
(defcfun ("InterlockedExchange64" interlocked-exchange-64) longlong  (|Target| :pointer) (|Value| longlong))
(defcfun ("InterlockedExchangeAdd64" interlocked-exchange-add-64) longlong  (|Addend| :pointer) (|Value| longlong))
(defcfun ("InitializeSListHead" initialize-slist-head :convention :stdcall) :void  (|ListHead| pslist_header))
(defcfun ("InterlockedPopEntrySList" interlocked-pop-entry-slist :convention :stdcall) psingle_list_entry  (|ListHead| pslist_header))
(defcfun ("InterlockedPushEntrySList" interlocked-push-entry-slist :convention :stdcall) psingle_list_entry  (|ListHead| pslist_header) (|ListEntry| psingle_list_entry))
(defcfun ("InterlockedFlushSList" interlocked-flush-slist :convention :stdcall) psingle_list_entry  (|ListHead| pslist_header))
(defcfun ("QueryDepthSList" query-depth-slist :convention :stdcall) ushort  (|ListHead| pslist_header))
(defcfun ("FreeResource" free-resource :convention :stdcall) winbool  (|hResData| hglobal))
(defcfun ("LockResource" lock-resource :convention :stdcall) lpvoid  (|hResData| hglobal))
(defcfun ("WinMain" win-main :convention :stdcall) :int  (|hInstance| hinstance) (|hPrevInstance| hinstance) (|lpCmdLine| lpstr) (|nShowCmd| :int))
(defcfun ("wWinMain" wwinmain :convention :stdcall) :int  (|hInstance| hinstance) (|hPrevInstance| hinstance) (|lpCmdLine| lpwstr) (|nShowCmd| :int))
(defcfun ("FreeLibrary" free-library :convention :stdcall) winbool  (|hLibModule| hmodule))
(defcfun ("FreeLibraryAndExitThread" free-library-and-exit-thread :convention :stdcall) :void  (|hLibModule| hmodule) (|dwExitCode| dword))
(defcfun ("DisableThreadLibraryCalls" disable-thread-library-calls :convention :stdcall) winbool  (|hLibModule| hmodule))
(defcfun ("GetProcAddress" get-proc-address :convention :stdcall) farproc  (|hModule| hmodule) (|lpProcName| lpcstr))
(defcfun ("GetVersion" get-version :convention :stdcall) dword )
(defcfun ("GlobalAlloc" global-alloc :convention :stdcall) hglobal  (|uFlags| uint) (|dwBytes| size_t))
(defcfun ("GlobalReAlloc" global-re-alloc :convention :stdcall) hglobal  (|hMem| hglobal) (|dwBytes| size_t) (|uFlags| uint))
(defcfun ("GlobalSize" global-size :convention :stdcall) size_t  (|hMem| hglobal))
(defcfun ("GlobalFlags" global-flags :convention :stdcall) uint  (|hMem| hglobal))
(defcfun ("GlobalLock" global-lock :convention :stdcall) lpvoid  (|hMem| hglobal))
(defcfun ("GlobalHandle" global-handle :convention :stdcall) hglobal  (|pMem| lpcvoid))
(defcfun ("GlobalUnlock" global-unlock :convention :stdcall) winbool  (|hMem| hglobal))
(defcfun ("GlobalFree" global-free :convention :stdcall) hglobal  (|hMem| hglobal))
(defcfun ("GlobalCompact" global-compact :convention :stdcall) size_t  (|dwMinFree| dword))
(defcfun ("GlobalFix" global-fix :convention :stdcall) :void  (|hMem| hglobal))
(defcfun ("GlobalUnfix" global-unfix :convention :stdcall) :void  (|hMem| hglobal))
(defcfun ("GlobalWire" global-wire :convention :stdcall) lpvoid  (|hMem| hglobal))
(defcfun ("GlobalUnWire" global-un-wire :convention :stdcall) winbool  (|hMem| hglobal))
(defcfun ("GlobalMemoryStatus" global-memory-status :convention :stdcall) :void  (|lpBuffer| lpmemorystatus))
(defcfun ("GlobalMemoryStatusEx" global-memory-status-ex :convention :stdcall) winbool  (|lpBuffer| lpmemorystatusex))
(defcfun ("LocalAlloc" local-alloc :convention :stdcall) hlocal  (|uFlags| uint) (|uBytes| size_t))
(defcfun ("LocalReAlloc" local-re-alloc :convention :stdcall) hlocal  (|hMem| hlocal) (|uBytes| size_t) (|uFlags| uint))
(defcfun ("LocalLock" local-lock :convention :stdcall) lpvoid  (|hMem| hlocal))
(defcfun ("LocalHandle" local-handle :convention :stdcall) hlocal  (|pMem| lpcvoid))
(defcfun ("LocalUnlock" local-unlock :convention :stdcall) winbool  (|hMem| hlocal))
(defcfun ("LocalSize" local-size :convention :stdcall) size_t  (|hMem| hlocal))
(defcfun ("LocalFlags" local-flags :convention :stdcall) uint  (|hMem| hlocal))
(defcfun ("LocalFree" local-free :convention :stdcall) hlocal  (|hMem| hlocal))
(defcfun ("LocalShrink" local-shrink :convention :stdcall) size_t  (|hMem| hlocal) (|cbNewSize| uint))
(defcfun ("LocalCompact" local-compact :convention :stdcall) size_t  (|uMinFree| uint))
(defcfun ("FlushInstructionCache" flush-instruction-cache :convention :stdcall) winbool  (|hProcess| handle) (|lpBaseAddress| lpcvoid) (|dwSize| size_t))
(defcfun ("VirtualAlloc" virtual-alloc :convention :stdcall) lpvoid  (|lpAddress| lpvoid) (|dwSize| size_t) (|flAllocationType| dword) (|flProtect| dword))
(defcfun ("VirtualFree" virtual-free :convention :stdcall) winbool  (|lpAddress| lpvoid) (|dwSize| size_t) (|dwFreeType| dword))
(defcfun ("VirtualProtect" virtual-protect :convention :stdcall) winbool  (|lpAddress| lpvoid) (|dwSize| size_t) (|flNewProtect| dword) (|lpflOldProtect| pdword))
(defcfun ("VirtualQuery" virtual-query :convention :stdcall) size_t  (|lpAddress| lpcvoid) (|lpBuffer| pmemory_basic_information) (|dwLength| size_t))
(defcfun ("VirtualAllocEx" virtual-alloc-ex :convention :stdcall) lpvoid  (|hProcess| handle) (|lpAddress| lpvoid) (|dwSize| size_t) (|flAllocationType| dword) (|flProtect| dword))
(defcfun ("GetWriteWatch" get-write-watch :convention :stdcall) uint  (|dwFlags| dword) (|lpBaseAddress| pvoid) (|dwRegionSize| size_t) (|lpAddresses| :pointer) (|lpdwCount| :pointer) (|lpdwGranularity| pulong))
(defcfun ("ResetWriteWatch" reset-write-watch :convention :stdcall) uint  (|lpBaseAddress| lpvoid) (|dwRegionSize| size_t))
(defcfun ("GetLargePageMinimum" get-large-page-minimum :convention :stdcall) size_t )
(defcfun ("EnumSystemFirmwareTables" enum-system-firmware-tables :convention :stdcall) uint  (|FirmwareTableProviderSignature| dword) (|pFirmwareTableEnumBuffer| pvoid) (|BufferSize| dword))
(defcfun ("GetSystemFirmwareTable" get-system-firmware-table :convention :stdcall) uint  (|FirmwareTableProviderSignature| dword) (|FirmwareTableID| dword) (|pFirmwareTableBuffer| pvoid) (|BufferSize| dword))
(defcfun ("VirtualFreeEx" virtual-free-ex :convention :stdcall) winbool  (|hProcess| handle) (|lpAddress| lpvoid) (|dwSize| size_t) (|dwFreeType| dword))
(defcfun ("VirtualProtectEx" virtual-protect-ex :convention :stdcall) winbool  (|hProcess| handle) (|lpAddress| lpvoid) (|dwSize| size_t) (|flNewProtect| dword) (|lpflOldProtect| pdword))
(defcfun ("VirtualQueryEx" virtual-query-ex :convention :stdcall) size_t  (|hProcess| handle) (|lpAddress| lpcvoid) (|lpBuffer| pmemory_basic_information) (|dwLength| size_t))
(defcfun ("HeapCreate" heap-create :convention :stdcall) handle  (|flOptions| dword) (|dwInitialSize| size_t) (|dwMaximumSize| size_t))
(defcfun ("HeapDestroy" heap-destroy :convention :stdcall) winbool  (|hHeap| handle))
(defcfun ("HeapAlloc" heap-alloc :convention :stdcall) lpvoid  (|hHeap| handle) (|dwFlags| dword) (|dwBytes| size_t))
(defcfun ("HeapReAlloc" heap-re-alloc :convention :stdcall) lpvoid  (|hHeap| handle) (|dwFlags| dword) (|lpMem| lpvoid) (|dwBytes| size_t))
(defcfun ("HeapFree" heap-free :convention :stdcall) winbool  (|hHeap| handle) (|dwFlags| dword) (|lpMem| lpvoid))
(defcfun ("HeapSize" heap-size :convention :stdcall) size_t  (|hHeap| handle) (|dwFlags| dword) (|lpMem| lpcvoid))
(defcfun ("HeapValidate" heap-validate :convention :stdcall) winbool  (|hHeap| handle) (|dwFlags| dword) (|lpMem| lpcvoid))
(defcfun ("HeapCompact" heap-compact :convention :stdcall) size_t  (|hHeap| handle) (|dwFlags| dword))
(defcfun ("GetProcessHeap" get-process-heap :convention :stdcall) handle )
(defcfun ("GetProcessHeaps" get-process-heaps :convention :stdcall) dword  (|NumberOfHeaps| dword) (|ProcessHeaps| phandle))
(defcfun ("HeapLock" heap-lock :convention :stdcall) winbool  (|hHeap| handle))
(defcfun ("HeapUnlock" heap-unlock :convention :stdcall) winbool  (|hHeap| handle))
(defcfun ("HeapWalk" heap-walk :convention :stdcall) winbool  (|hHeap| handle) (|lpEntry| lpprocess_heap_entry))
(defcfun ("HeapSetInformation" heap-set-information :convention :stdcall) winbool  (|HeapHandle| handle) (|HeapInformationClass| heap_information_class) (|HeapInformation| pvoid) (|HeapInformationLength| size_t))
(defcfun ("HeapQueryInformation" heap-query-information :convention :stdcall) winbool  (|HeapHandle| handle) (|HeapInformationClass| heap_information_class) (|HeapInformation| pvoid) (|HeapInformationLength| size_t) (|ReturnLength| psize_t))
(defcfun ("GetBinaryTypeA" get-binary-type-a :convention :stdcall) winbool  (|lpApplicationName| lpcstr) (|lpBinaryType| lpdword))
(defcfun ("GetBinaryTypeW" get-binary-type-w :convention :stdcall) winbool  (|lpApplicationName| lpcwstr) (|lpBinaryType| lpdword))
(defcfun ("GetShortPathNameA" get-short-path-name-a :convention :stdcall) dword  (|lpszLongPath| lpcstr) (|lpszShortPath| lpstr) (|cchBuffer| dword))
(defcfun ("GetShortPathNameW" get-short-path-name-w :convention :stdcall) dword  (|lpszLongPath| lpcwstr) (|lpszShortPath| lpwstr) (|cchBuffer| dword))
(defcfun ("GetLongPathNameA" get-long-path-name-a :convention :stdcall) dword  (|lpszShortPath| lpcstr) (|lpszLongPath| lpstr) (|cchBuffer| dword))
(defcfun ("GetLongPathNameW" get-long-path-name-w :convention :stdcall) dword  (|lpszShortPath| lpcwstr) (|lpszLongPath| lpwstr) (|cchBuffer| dword))
(defcfun ("GetProcessAffinityMask" get-process-affinity-mask :convention :stdcall) winbool  (|hProcess| handle) (|lpProcessAffinityMask| pdword_ptr) (|lpSystemAffinityMask| pdword_ptr))
(defcfun ("SetProcessAffinityMask" set-process-affinity-mask :convention :stdcall) winbool  (|hProcess| handle) (|dwProcessAffinityMask| dword_ptr))
(defcfun ("GetProcessHandleCount" get-process-handle-count :convention :stdcall) winbool  (|hProcess| handle) (|pdwHandleCount| pdword))
(defcfun ("GetProcessTimes" get-process-times :convention :stdcall) winbool  (|hProcess| handle) (|lpCreationTime| lpfiletime) (|lpExitTime| lpfiletime) (|lpKernelTime| lpfiletime) (|lpUserTime| lpfiletime))
(defcfun ("GetProcessIoCounters" get-process-io-counters :convention :stdcall) winbool  (|hProcess| handle) (|lpIoCounters| pio_counters))
(defcfun ("GetProcessWorkingSetSize" get-process-working-set-size :convention :stdcall) winbool  (|hProcess| handle) (|lpMinimumWorkingSetSize| psize_t) (|lpMaximumWorkingSetSize| psize_t))
(defcfun ("GetProcessWorkingSetSizeEx" get-process-working-set-size-ex :convention :stdcall) winbool  (|hProcess| handle) (|lpMinimumWorkingSetSize| psize_t) (|lpMaximumWorkingSetSize| psize_t) (|Flags| pdword))
(defcfun ("SetProcessWorkingSetSize" set-process-working-set-size :convention :stdcall) winbool  (|hProcess| handle) (|dwMinimumWorkingSetSize| size_t) (|dwMaximumWorkingSetSize| size_t))
(defcfun ("SetProcessWorkingSetSizeEx" set-process-working-set-size-ex :convention :stdcall) winbool  (|hProcess| handle) (|dwMinimumWorkingSetSize| size_t) (|dwMaximumWorkingSetSize| size_t) (|Flags| dword))
(defcfun ("OpenProcess" open-process :convention :stdcall) handle  (|dwDesiredAccess| dword) (|bInheritHandle| winbool) (|dwProcessId| dword))
(defcfun ("GetCurrentProcess" get-current-process :convention :stdcall) handle )
(defcfun ("GetCurrentProcessId" get-current-process-id :convention :stdcall) dword )
(defcfun ("ExitProcess" exit-process :convention :stdcall) :void  (|uExitCode| uint))
(defcfun ("TerminateProcess" terminate-process :convention :stdcall) winbool  (|hProcess| handle) (|uExitCode| uint))
(defcfun ("GetExitCodeProcess" get-exit-code-process :convention :stdcall) winbool  (|hProcess| handle) (|lpExitCode| lpdword))
(defcfun ("FatalExit" fatal-exit :convention :stdcall) :void  (|ExitCode| :int))
(defcfun ("GetEnvironmentStrings" get-environment-strings :convention :stdcall) lpch )
(defcfun ("GetEnvironmentStringsW" get-environment-strings-w :convention :stdcall) lpwch )
(defcfun ("SetEnvironmentStringsA" set-environment-strings-a :convention :stdcall) winbool  (|NewEnvironment| lpch))
(defcfun ("SetEnvironmentStringsW" set-environment-strings-w :convention :stdcall) winbool  (|NewEnvironment| lpwch))
(defcfun ("FreeEnvironmentStringsA" free-environment-strings-a :convention :stdcall) winbool  (arg0 lpch))
(defcfun ("FreeEnvironmentStringsW" free-environment-strings-w :convention :stdcall) winbool  (arg0 lpwch))
(defcfun ("RaiseException" raise-exception :convention :stdcall) :void  (|dwExceptionCode| dword) (|dwExceptionFlags| dword) (|nNumberOfArguments| dword) (|lpArguments| :pointer))
(defcfun ("UnhandledExceptionFilter" unhandled-exception-filter :convention :stdcall) long  (|ExceptionInfo| :pointer))
(defcfun ("SetUnhandledExceptionFilter" set-unhandled-exception-filter :convention :stdcall) lptop_level_exception_filter  (|lpTopLevelExceptionFilter| lptop_level_exception_filter))
(defcfun ("CreateFiber" create-fiber :convention :stdcall) lpvoid  (|dwStackSize| size_t) (|lpStartAddress| lpfiber_start_routine) (|lpParameter| lpvoid))
(defcfun ("CreateFiberEx" create-fiber-ex :convention :stdcall) lpvoid  (|dwStackCommitSize| size_t) (|dwStackReserveSize| size_t) (|dwFlags| dword) (|lpStartAddress| lpfiber_start_routine) (|lpParameter| lpvoid))
(defcfun ("DeleteFiber" delete-fiber :convention :stdcall) :void  (|lpFiber| lpvoid))
(defcfun ("ConvertThreadToFiber" convert-thread-to-fiber :convention :stdcall) lpvoid  (|lpParameter| lpvoid))
(defcfun ("ConvertThreadToFiberEx" convert-thread-to-fiber-ex :convention :stdcall) lpvoid  (|lpParameter| lpvoid) (|dwFlags| dword))
(defcfun ("ConvertFiberToThread" convert-fiber-to-thread :convention :stdcall) winbool )
(defcfun ("SwitchToFiber" switch-to-fiber :convention :stdcall) :void  (|lpFiber| lpvoid))
(defcfun ("SwitchToThread" switch-to-thread :convention :stdcall) winbool )
(defcfun ("CreateThread" create-thread :convention :stdcall) handle  (|lpThreadAttributes| lpsecurity_attributes) (|dwStackSize| size_t) (|lpStartAddress| lpthread_start_routine) (|lpParameter| lpvoid) (|dwCreationFlags| dword) (|lpThreadId| lpdword))
(defcfun ("CreateRemoteThread" create-remote-thread :convention :stdcall) handle  (|hProcess| handle) (|lpThreadAttributes| lpsecurity_attributes) (|dwStackSize| size_t) (|lpStartAddress| lpthread_start_routine) (|lpParameter| lpvoid) (|dwCreationFlags| dword) (|lpThreadId| lpdword))
(defcfun ("GetCurrentThread" get-current-thread :convention :stdcall) handle )
(defcfun ("GetCurrentThreadId" get-current-thread-id :convention :stdcall) dword )
(defcfun ("SetThreadStackGuarantee" set-thread-stack-guarantee :convention :stdcall) winbool  (|StackSizeInBytes| pulong))
(defcfun ("GetProcessIdOfThread" get-process-id-of-thread :convention :stdcall) dword  (|Thread| handle))
(defcfun ("GetThreadId" get-thread-id :convention :stdcall) dword  (|Thread| handle))
(defcfun ("GetProcessId" get-process-id :convention :stdcall) dword  (|Process| handle))
(defcfun ("GetCurrentProcessorNumber" get-current-processor-number :convention :stdcall) dword )
(defcfun ("SetThreadAffinityMask" set-thread-affinity-mask :convention :stdcall) dword_ptr  (|hThread| handle) (|dwThreadAffinityMask| dword_ptr))
(defcfun ("SetThreadIdealProcessor" set-thread-ideal-processor :convention :stdcall) dword  (|hThread| handle) (|dwIdealProcessor| dword))
(defcfun ("SetProcessPriorityBoost" set-process-priority-boost :convention :stdcall) winbool  (|hProcess| handle) (|bDisablePriorityBoost| winbool))
(defcfun ("GetProcessPriorityBoost" get-process-priority-boost :convention :stdcall) winbool  (|hProcess| handle) (|pDisablePriorityBoost| pbool))
(defcfun ("RequestWakeupLatency" request-wakeup-latency :convention :stdcall) winbool  (|latency| latency_time))
(defcfun ("IsSystemResumeAutomatic" is-system-resume-automatic :convention :stdcall) winbool )
(defcfun ("OpenThread" open-thread :convention :stdcall) handle  (|dwDesiredAccess| dword) (|bInheritHandle| winbool) (|dwThreadId| dword))
(defcfun ("SetThreadPriority" set-thread-priority :convention :stdcall) winbool  (|hThread| handle) (|nPriority| :int))
(defcfun ("SetThreadPriorityBoost" set-thread-priority-boost :convention :stdcall) winbool  (|hThread| handle) (|bDisablePriorityBoost| winbool))
(defcfun ("GetThreadPriorityBoost" get-thread-priority-boost :convention :stdcall) winbool  (|hThread| handle) (|pDisablePriorityBoost| pbool))
(defcfun ("GetThreadPriority" get-thread-priority :convention :stdcall) :int  (|hThread| handle))
(defcfun ("GetThreadTimes" get-thread-times :convention :stdcall) winbool  (|hThread| handle) (|lpCreationTime| lpfiletime) (|lpExitTime| lpfiletime) (|lpKernelTime| lpfiletime) (|lpUserTime| lpfiletime))
(defcfun ("GetThreadIOPendingFlag" get-thread-io-pending-flag :convention :stdcall) winbool  (|hThread| handle) (|lpIOIsPending| pbool))
(defcfun ("ExitThread" exit-thread :convention :stdcall) :void  (|dwExitCode| dword))
(defcfun ("TerminateThread" terminate-thread :convention :stdcall) winbool  (|hThread| handle) (|dwExitCode| dword))
(defcfun ("GetExitCodeThread" get-exit-code-thread :convention :stdcall) winbool  (|hThread| handle) (|lpExitCode| lpdword))
(defcfun ("GetThreadSelectorEntry" get-thread-selector-entry :convention :stdcall) winbool  (|hThread| handle) (|dwSelector| dword) (|lpSelectorEntry| lpldt_entry))
(defcfun ("SetThreadExecutionState" set-thread-execution-state :convention :stdcall) execution_state  (|esFlags| execution_state))
(defcfun ("GetLastError" get-last-error :convention :stdcall) dword )
(defcfun ("SetLastError" set-last-error :convention :stdcall) :void  (|dwErrCode| dword))
(defcfun ("GetOverlappedResult" get-overlapped-result :convention :stdcall) winbool  (|hFile| handle) (|lpOverlapped| lpoverlapped) (|lpNumberOfBytesTransferred| lpdword) (|bWait| winbool))
(defcfun ("CreateIoCompletionPort" create-io-completion-port :convention :stdcall) handle  (|FileHandle| handle) (|ExistingCompletionPort| handle) (|CompletionKey| ulong_ptr) (|NumberOfConcurrentThreads| dword))
(defcfun ("GetQueuedCompletionStatus" get-queued-completion-status :convention :stdcall) winbool  (|CompletionPort| handle) (|lpNumberOfBytesTransferred| lpdword) (|lpCompletionKey| pulong_ptr) (|lpOverlapped| :pointer) (|dwMilliseconds| dword))
(defcfun ("PostQueuedCompletionStatus" post-queued-completion-status :convention :stdcall) winbool  (|CompletionPort| handle) (|dwNumberOfBytesTransferred| dword) (|dwCompletionKey| ulong_ptr) (|lpOverlapped| lpoverlapped))
(defcfun ("SetErrorMode" set-error-mode :convention :stdcall) uint  (|uMode| uint))
(defcfun ("ReadProcessMemory" read-process-memory :convention :stdcall) winbool  (|hProcess| handle) (|lpBaseAddress| lpcvoid) (|lpBuffer| lpvoid) (|nSize| size_t) (|lpNumberOfBytesRead| :pointer))
(defcfun ("WriteProcessMemory" write-process-memory :convention :stdcall) winbool  (|hProcess| handle) (|lpBaseAddress| lpvoid) (|lpBuffer| lpcvoid) (|nSize| size_t) (|lpNumberOfBytesWritten| :pointer))
(defcfun ("GetThreadContext" get-thread-context :convention :stdcall) winbool  (|hThread| handle) (|lpContext| lpcontext))
(defcfun ("SetThreadContext" set-thread-context :convention :stdcall) winbool  (|hThread| handle) (|lpContext| :pointer))
(defcfun ("SuspendThread" suspend-thread :convention :stdcall) dword  (|hThread| handle))
(defcfun ("ResumeThread" resume-thread :convention :stdcall) dword  (|hThread| handle))
(defcfun ("QueueUserAPC" queue-user-apc :convention :stdcall) dword  (|pfnAPC| papcfunc) (|hThread| handle) (|dwData| ulong_ptr))
(defcfun ("IsDebuggerPresent" is-debugger-present :convention :stdcall) winbool )
(defcfun ("CheckRemoteDebuggerPresent" check-remote-debugger-present :convention :stdcall) winbool  (|hProcess| handle) (|pbDebuggerPresent| pbool))
(defcfun ("DebugBreak" debug-break :convention :stdcall) :void )
(defcfun ("WaitForDebugEvent" wait-for-debug-event :convention :stdcall) winbool  (|lpDebugEvent| lpdebug_event) (|dwMilliseconds| dword))
(defcfun ("ContinueDebugEvent" continue-debug-event :convention :stdcall) winbool  (|dwProcessId| dword) (|dwThreadId| dword) (|dwContinueStatus| dword))
(defcfun ("DebugActiveProcess" debug-active-process :convention :stdcall) winbool  (|dwProcessId| dword))
(defcfun ("DebugActiveProcessStop" debug-active-process-stop :convention :stdcall) winbool  (|dwProcessId| dword))
(defcfun ("DebugSetProcessKillOnExit" debug-set-process-kill-on-exit :convention :stdcall) winbool  (|KillOnExit| winbool))
(defcfun ("DebugBreakProcess" debug-break-process :convention :stdcall) winbool  (|Process| handle))
(defcfun ("InitializeCriticalSection" initialize-critical-section :convention :stdcall) :void  (|lpCriticalSection| lpcritical_section))
(defcfun ("EnterCriticalSection" enter-critical-section :convention :stdcall) :void  (|lpCriticalSection| lpcritical_section))
(defcfun ("LeaveCriticalSection" leave-critical-section :convention :stdcall) :void  (|lpCriticalSection| lpcritical_section))
(defcfun ("InitializeCriticalSectionAndSpinCount" initialize-critical-section-and-spin-count :convention :stdcall) winbool  (|lpCriticalSection| lpcritical_section) (|dwSpinCount| dword))
(defcfun ("SetCriticalSectionSpinCount" set-critical-section-spin-count :convention :stdcall) dword  (|lpCriticalSection| lpcritical_section) (|dwSpinCount| dword))
(defcfun ("TryEnterCriticalSection" try-enter-critical-section :convention :stdcall) winbool  (|lpCriticalSection| lpcritical_section))
(defcfun ("DeleteCriticalSection" delete-critical-section :convention :stdcall) :void  (|lpCriticalSection| lpcritical_section))
(defcfun ("SetEvent" set-event :convention :stdcall) winbool  (|hEvent| handle))
(defcfun ("ResetEvent" reset-event :convention :stdcall) winbool  (|hEvent| handle))
(defcfun ("PulseEvent" pulse-event :convention :stdcall) winbool  (|hEvent| handle))
(defcfun ("ReleaseSemaphore" release-semaphore :convention :stdcall) winbool  (|hSemaphore| handle) (|lReleaseCount| long) (|lpPreviousCount| lplong))
(defcfun ("ReleaseMutex" release-mutex :convention :stdcall) winbool  (|hMutex| handle))
(defcfun ("WaitForSingleObject" wait-for-single-object :convention :stdcall) dword  (|hHandle| handle) (|dwMilliseconds| dword))
(defcfun ("WaitForMultipleObjects" wait-for-multiple-objects :convention :stdcall) dword  (|nCount| dword) (|lpHandles| :pointer) (|bWaitAll| winbool) (|dwMilliseconds| dword))
(defcfun ("Sleep" sleep :convention :stdcall) :void  (|dwMilliseconds| dword))
(defcfun ("LoadResource" load-resource :convention :stdcall) hglobal  (|hModule| hmodule) (|hResInfo| hrsrc))
(defcfun ("SizeofResource" sizeof-resource :convention :stdcall) dword  (|hModule| hmodule) (|hResInfo| hrsrc))
(defcfun ("GlobalDeleteAtom" global-delete-atom :convention :stdcall) atom  (|nAtom| atom))
(defcfun ("InitAtomTable" init-atom-table :convention :stdcall) winbool  (|nSize| dword))
(defcfun ("DeleteAtom" delete-atom :convention :stdcall) atom  (|nAtom| atom))
(defcfun ("SetHandleCount" set-handle-count :convention :stdcall) uint  (|uNumber| uint))
(defcfun ("GetLogicalDrives" get-logical-drives :convention :stdcall) dword )
(defcfun ("LockFile" lock-file :convention :stdcall) winbool  (|hFile| handle) (|dwFileOffsetLow| dword) (|dwFileOffsetHigh| dword) (|nNumberOfBytesToLockLow| dword) (|nNumberOfBytesToLockHigh| dword))
(defcfun ("UnlockFile" unlock-file :convention :stdcall) winbool  (|hFile| handle) (|dwFileOffsetLow| dword) (|dwFileOffsetHigh| dword) (|nNumberOfBytesToUnlockLow| dword) (|nNumberOfBytesToUnlockHigh| dword))
(defcfun ("LockFileEx" lock-file-ex :convention :stdcall) winbool  (|hFile| handle) (|dwFlags| dword) (|dwReserved| dword) (|nNumberOfBytesToLockLow| dword) (|nNumberOfBytesToLockHigh| dword) (|lpOverlapped| lpoverlapped))
(defcfun ("UnlockFileEx" unlock-file-ex :convention :stdcall) winbool  (|hFile| handle) (|dwReserved| dword) (|nNumberOfBytesToUnlockLow| dword) (|nNumberOfBytesToUnlockHigh| dword) (|lpOverlapped| lpoverlapped))
(defcfun ("GetFileInformationByHandle" get-file-information-by-handle :convention :stdcall) winbool  (|hFile| handle) (|lpFileInformation| lpby_handle_file_information))
(defcfun ("GetFileType" get-file-type :convention :stdcall) dword  (|hFile| handle))
(defcfun ("GetFileSize" get-file-size :convention :stdcall) dword  (|hFile| handle) (|lpFileSizeHigh| lpdword))
(defcfun ("GetFileSizeEx" get-file-size-ex :convention :stdcall) winbool  (|hFile| handle) (|lpFileSize| plarge_integer))
(defcfun ("GetStdHandle" get-std-handle :convention :stdcall) handle  (|nStdHandle| dword))
(defcfun ("SetStdHandle" set-std-handle :convention :stdcall) winbool  (|nStdHandle| dword) (|hHandle| handle))
(defcfun ("WriteFile" write-file :convention :stdcall) winbool  (|hFile| handle) (|lpBuffer| lpcvoid) (|nNumberOfBytesToWrite| dword) (|lpNumberOfBytesWritten| lpdword) (|lpOverlapped| lpoverlapped))
(defcfun ("ReadFile" read-file :convention :stdcall) winbool  (|hFile| handle) (|lpBuffer| lpvoid) (|nNumberOfBytesToRead| dword) (|lpNumberOfBytesRead| lpdword) (|lpOverlapped| lpoverlapped))
(defcfun ("FlushFileBuffers" flush-file-buffers :convention :stdcall) winbool  (|hFile| handle))
(defcfun ("DeviceIoControl" device-io-control :convention :stdcall) winbool  (|hDevice| handle) (|dwIoControlCode| dword) (|lpInBuffer| lpvoid) (|nInBufferSize| dword) (|lpOutBuffer| lpvoid) (|nOutBufferSize| dword) (|lpBytesReturned| lpdword) (|lpOverlapped| lpoverlapped))
(defcfun ("RequestDeviceWakeup" request-device-wakeup :convention :stdcall) winbool  (|hDevice| handle))
(defcfun ("CancelDeviceWakeupRequest" cancel-device-wakeup-request :convention :stdcall) winbool  (|hDevice| handle))
(defcfun ("GetDevicePowerState" get-device-power-state :convention :stdcall) winbool  (|hDevice| handle) (|pfOn| :pointer))
(defcfun ("SetMessageWaitingIndicator" set-message-waiting-indicator :convention :stdcall) winbool  (|hMsgIndicator| handle) (|ulMsgCount| ulong))
(defcfun ("SetEndOfFile" set-end-of-file :convention :stdcall) winbool  (|hFile| handle))
(defcfun ("SetFilePointer" set-file-pointer :convention :stdcall) dword  (|hFile| handle) (|lDistanceToMove| long) (|lpDistanceToMoveHigh| plong) (|dwMoveMethod| dword))
(defcfun ("SetFilePointerEx" set-file-pointer-ex :convention :stdcall) winbool  (|hFile| handle) (|liDistanceToMove| large_integer) (|lpNewFilePointer| plarge_integer) (|dwMoveMethod| dword))
(defcfun ("FindClose" find-close :convention :stdcall) winbool  (|hFindFile| handle))
(defcfun ("GetFileTime" get-file-time :convention :stdcall) winbool  (|hFile| handle) (|lpCreationTime| lpfiletime) (|lpLastAccessTime| lpfiletime) (|lpLastWriteTime| lpfiletime))
(defcfun ("SetFileTime" set-file-time :convention :stdcall) winbool  (|hFile| handle) (|lpCreationTime| :pointer) (|lpLastAccessTime| :pointer) (|lpLastWriteTime| :pointer))
(defcfun ("SetFileValidData" set-file-valid-data :convention :stdcall) winbool  (|hFile| handle) (|ValidDataLength| longlong))
(defcfun ("SetFileShortNameA" set-file-short-name-a :convention :stdcall) winbool  (|hFile| handle) (|lpShortName| lpcstr))
(defcfun ("SetFileShortNameW" set-file-short-name-w :convention :stdcall) winbool  (|hFile| handle) (|lpShortName| lpcwstr))
(defcfun ("CloseHandle" close-handle :convention :stdcall) winbool  (|hObject| handle))
(defcfun ("DuplicateHandle" duplicate-handle :convention :stdcall) winbool  (|hSourceProcessHandle| handle) (|hSourceHandle| handle) (|hTargetProcessHandle| handle) (|lpTargetHandle| lphandle) (|dwDesiredAccess| dword) (|bInheritHandle| winbool) (|dwOptions| dword))
(defcfun ("GetHandleInformation" get-handle-information :convention :stdcall) winbool  (|hObject| handle) (|lpdwFlags| lpdword))
(defcfun ("SetHandleInformation" set-handle-information :convention :stdcall) winbool  (|hObject| handle) (|dwMask| dword) (|dwFlags| dword))
(defcfun ("LoadModule" load-module :convention :stdcall) dword  (|lpModuleName| lpcstr) (|lpParameterBlock| lpvoid))
(defcfun ("WinExec" win-exec :convention :stdcall) uint  (|lpCmdLine| lpcstr) (|uCmdShow| uint))
(defcfun ("ClearCommBreak" clear-comm-break :convention :stdcall) winbool  (|hFile| handle))
(defcfun ("ClearCommError" clear-comm-error :convention :stdcall) winbool  (|hFile| handle) (|lpErrors| lpdword) (|lpStat| lpcomstat))
(defcfun ("SetupComm" setup-comm :convention :stdcall) winbool  (|hFile| handle) (|dwInQueue| dword) (|dwOutQueue| dword))
(defcfun ("EscapeCommFunction" escape-comm-function :convention :stdcall) winbool  (|hFile| handle) (|dwFunc| dword))
(defcfun ("GetCommConfig" get-comm-config :convention :stdcall) winbool  (|hCommDev| handle) (|lpCC| lpcommconfig) (|lpdwSize| lpdword))
(defcfun ("GetCommMask" get-comm-mask :convention :stdcall) winbool  (|hFile| handle) (|lpEvtMask| lpdword))
(defcfun ("GetCommProperties" get-comm-properties :convention :stdcall) winbool  (|hFile| handle) (|lpCommProp| lpcommprop))
(defcfun ("GetCommModemStatus" get-comm-modem-status :convention :stdcall) winbool  (|hFile| handle) (|lpModemStat| lpdword))
(defcfun ("GetCommState" get-comm-state :convention :stdcall) winbool  (|hFile| handle) (|lpDCB| lpdcb))
(defcfun ("GetCommTimeouts" get-comm-timeouts :convention :stdcall) winbool  (|hFile| handle) (|lpCommTimeouts| lpcommtimeouts))
(defcfun ("PurgeComm" purge-comm :convention :stdcall) winbool  (|hFile| handle) (|dwFlags| dword))
(defcfun ("SetCommBreak" set-comm-break :convention :stdcall) winbool  (|hFile| handle))
(defcfun ("SetCommConfig" set-comm-config :convention :stdcall) winbool  (|hCommDev| handle) (|lpCC| lpcommconfig) (|dwSize| dword))
(defcfun ("SetCommMask" set-comm-mask :convention :stdcall) winbool  (|hFile| handle) (|dwEvtMask| dword))
(defcfun ("SetCommState" set-comm-state :convention :stdcall) winbool  (|hFile| handle) (|lpDCB| lpdcb))
(defcfun ("SetCommTimeouts" set-comm-timeouts :convention :stdcall) winbool  (|hFile| handle) (|lpCommTimeouts| lpcommtimeouts))
(defcfun ("TransmitCommChar" transmit-comm-char :convention :stdcall) winbool  (|hFile| handle) (|cChar| :char))
(defcfun ("WaitCommEvent" wait-comm-event :convention :stdcall) winbool  (|hFile| handle) (|lpEvtMask| lpdword) (|lpOverlapped| lpoverlapped))
(defcfun ("SetTapePosition" set-tape-position :convention :stdcall) dword  (|hDevice| handle) (|dwPositionMethod| dword) (|dwPartition| dword) (|dwOffsetLow| dword) (|dwOffsetHigh| dword) (|bImmediate| winbool))
(defcfun ("GetTapePosition" get-tape-position :convention :stdcall) dword  (|hDevice| handle) (|dwPositionType| dword) (|lpdwPartition| lpdword) (|lpdwOffsetLow| lpdword) (|lpdwOffsetHigh| lpdword))
(defcfun ("PrepareTape" prepare-tape :convention :stdcall) dword  (|hDevice| handle) (|dwOperation| dword) (|bImmediate| winbool))
(defcfun ("EraseTape" erase-tape :convention :stdcall) dword  (|hDevice| handle) (|dwEraseType| dword) (|bImmediate| winbool))
(defcfun ("CreateTapePartition" create-tape-partition :convention :stdcall) dword  (|hDevice| handle) (|dwPartitionMethod| dword) (|dwCount| dword) (|dwSize| dword))
(defcfun ("WriteTapemark" write-tapemark :convention :stdcall) dword  (|hDevice| handle) (|dwTapemarkType| dword) (|dwTapemarkCount| dword) (|bImmediate| winbool))
(defcfun ("GetTapeStatus" get-tape-status :convention :stdcall) dword  (|hDevice| handle))
(defcfun ("GetTapeParameters" get-tape-parameters :convention :stdcall) dword  (|hDevice| handle) (|dwOperation| dword) (|lpdwSize| lpdword) (|lpTapeInformation| lpvoid))
(defcfun ("SetTapeParameters" set-tape-parameters :convention :stdcall) dword  (|hDevice| handle) (|dwOperation| dword) (|lpTapeInformation| lpvoid))
(defcfun ("Beep" beep :convention :stdcall) winbool  (|dwFreq| dword) (|dwDuration| dword))
(defcfun ("MulDiv" mul-div :convention :stdcall) :int  (|nNumber| :int) (|nNumerator| :int) (|nDenominator| :int))
(defcfun ("GetSystemTime" get-system-time :convention :stdcall) :void  (|lpSystemTime| lpsystemtime))
(defcfun ("GetSystemTimeAsFileTime" get-system-time-as-file-time :convention :stdcall) :void  (|lpSystemTimeAsFileTime| lpfiletime))
(defcfun ("SetSystemTime" set-system-time :convention :stdcall) winbool  (|lpSystemTime| :pointer))
(defcfun ("GetLocalTime" get-local-time :convention :stdcall) :void  (|lpSystemTime| lpsystemtime))
(defcfun ("SetLocalTime" set-local-time :convention :stdcall) winbool  (|lpSystemTime| :pointer))
(defcfun ("GetSystemInfo" get-system-info :convention :stdcall) :void  (|lpSystemInfo| lpsystem_info))
(defcfun ("SetSystemFileCacheSize" set-system-file-cache-size :convention :stdcall) winbool  (|MinimumFileCacheSize| size_t) (|MaximumFileCacheSize| size_t) (|Flags| dword))
(defcfun ("GetSystemFileCacheSize" get-system-file-cache-size :convention :stdcall) winbool  (|lpMinimumFileCacheSize| psize_t) (|lpMaximumFileCacheSize| psize_t) (|lpFlags| pdword))
(defcfun ("GetSystemRegistryQuota" get-system-registry-quota :convention :stdcall) winbool  (|pdwQuotaAllowed| pdword) (|pdwQuotaUsed| pdword))
(defcfun ("GetSystemTimes" get-system-times :convention :stdcall) winbool  (|lpIdleTime| lpfiletime) (|lpKernelTime| lpfiletime) (|lpUserTime| lpfiletime))
(defcfun ("GetNativeSystemInfo" get-native-system-info :convention :stdcall) :void  (|lpSystemInfo| lpsystem_info))
(defcfun ("IsProcessorFeaturePresent" is-processor-feature-present :convention :stdcall) winbool  (|ProcessorFeature| dword))
(defcfun ("SystemTimeToTzSpecificLocalTime" system-time-to-tz-specific-local-time :convention :stdcall) winbool  (|lpTimeZoneInformation| lptime_zone_information) (|lpUniversalTime| lpsystemtime) (|lpLocalTime| lpsystemtime))
(defcfun ("TzSpecificLocalTimeToSystemTime" tz-specific-local-time-to-system-time :convention :stdcall) winbool  (|lpTimeZoneInformation| lptime_zone_information) (|lpLocalTime| lpsystemtime) (|lpUniversalTime| lpsystemtime))
(defcfun ("GetTimeZoneInformation" get-time-zone-information :convention :stdcall) dword  (|lpTimeZoneInformation| lptime_zone_information))
(defcfun ("SetTimeZoneInformation" set-time-zone-information :convention :stdcall) winbool  (|lpTimeZoneInformation| :pointer))
(defcfun ("SystemTimeToFileTime" system-time-to-file-time :convention :stdcall) winbool  (|lpSystemTime| :pointer) (|lpFileTime| lpfiletime))
(defcfun ("FileTimeToLocalFileTime" file-time-to-local-file-time :convention :stdcall) winbool  (|lpFileTime| :pointer) (|lpLocalFileTime| lpfiletime))
(defcfun ("LocalFileTimeToFileTime" local-file-time-to-file-time :convention :stdcall) winbool  (|lpLocalFileTime| :pointer) (|lpFileTime| lpfiletime))
(defcfun ("FileTimeToSystemTime" file-time-to-system-time :convention :stdcall) winbool  (|lpFileTime| :pointer) (|lpSystemTime| lpsystemtime))
(defcfun ("CompareFileTime" compare-file-time :convention :stdcall) long  (|lpFileTime1| :pointer) (|lpFileTime2| :pointer))
(defcfun ("FileTimeToDosDateTime" file-time-to-dos-date-time :convention :stdcall) winbool  (|lpFileTime| :pointer) (|lpFatDate| lpword) (|lpFatTime| lpword))
(defcfun ("DosDateTimeToFileTime" dos-date-time-to-file-time :convention :stdcall) winbool  (|wFatDate| word) (|wFatTime| word) (|lpFileTime| lpfiletime))
(defcfun ("GetTickCount" get-tick-count :convention :stdcall) dword )
(defcfun ("SetSystemTimeAdjustment" set-system-time-adjustment :convention :stdcall) winbool  (|dwTimeAdjustment| dword) (|bTimeAdjustmentDisabled| winbool))
(defcfun ("GetSystemTimeAdjustment" get-system-time-adjustment :convention :stdcall) winbool  (|lpTimeAdjustment| pdword) (|lpTimeIncrement| pdword) (|lpTimeAdjustmentDisabled| pbool))
(defcfun ("FormatMessageA" format-message-a :convention :stdcall) dword  (|dwFlags| dword) (|lpSource| lpcvoid) (|dwMessageId| dword) (|dwLanguageId| dword) (|lpBuffer| lpstr) (|nSize| dword) (|Arguments| :pointer))
(defcfun ("FormatMessageW" format-message-w :convention :stdcall) dword  (|dwFlags| dword) (|lpSource| lpcvoid) (|dwMessageId| dword) (|dwLanguageId| dword) (|lpBuffer| lpwstr) (|nSize| dword) (|Arguments| :pointer))
(defcfun ("CreatePipe" create-pipe :convention :stdcall) winbool  (|hReadPipe| phandle) (|hWritePipe| phandle) (|lpPipeAttributes| lpsecurity_attributes) (|nSize| dword))
(defcfun ("ConnectNamedPipe" connect-named-pipe :convention :stdcall) winbool  (|hNamedPipe| handle) (|lpOverlapped| lpoverlapped))
(defcfun ("DisconnectNamedPipe" disconnect-named-pipe :convention :stdcall) winbool  (|hNamedPipe| handle))
(defcfun ("SetNamedPipeHandleState" set-named-pipe-handle-state :convention :stdcall) winbool  (|hNamedPipe| handle) (|lpMode| lpdword) (|lpMaxCollectionCount| lpdword) (|lpCollectDataTimeout| lpdword))
(defcfun ("GetNamedPipeInfo" get-named-pipe-info :convention :stdcall) winbool  (|hNamedPipe| handle) (|lpFlags| lpdword) (|lpOutBufferSize| lpdword) (|lpInBufferSize| lpdword) (|lpMaxInstances| lpdword))
(defcfun ("PeekNamedPipe" peek-named-pipe :convention :stdcall) winbool  (|hNamedPipe| handle) (|lpBuffer| lpvoid) (|nBufferSize| dword) (|lpBytesRead| lpdword) (|lpTotalBytesAvail| lpdword) (|lpBytesLeftThisMessage| lpdword))
(defcfun ("TransactNamedPipe" transact-named-pipe :convention :stdcall) winbool  (|hNamedPipe| handle) (|lpInBuffer| lpvoid) (|nInBufferSize| dword) (|lpOutBuffer| lpvoid) (|nOutBufferSize| dword) (|lpBytesRead| lpdword) (|lpOverlapped| lpoverlapped))
(defcfun ("CreateMailslotA" create-mailslot-a :convention :stdcall) handle  (|lpName| lpcstr) (|nMaxMessageSize| dword) (|lReadTimeout| dword) (|lpSecurityAttributes| lpsecurity_attributes))
(defcfun ("CreateMailslotW" create-mailslot-w :convention :stdcall) handle  (|lpName| lpcwstr) (|nMaxMessageSize| dword) (|lReadTimeout| dword) (|lpSecurityAttributes| lpsecurity_attributes))
(defcfun ("GetMailslotInfo" get-mailslot-info :convention :stdcall) winbool  (|hMailslot| handle) (|lpMaxMessageSize| lpdword) (|lpNextSize| lpdword) (|lpMessageCount| lpdword) (|lpReadTimeout| lpdword))
(defcfun ("SetMailslotInfo" set-mailslot-info :convention :stdcall) winbool  (|hMailslot| handle) (|lReadTimeout| dword))
(defcfun ("MapViewOfFile" map-view-of-file :convention :stdcall) lpvoid  (|hFileMappingObject| handle) (|dwDesiredAccess| dword) (|dwFileOffsetHigh| dword) (|dwFileOffsetLow| dword) (|dwNumberOfBytesToMap| size_t))
(defcfun ("FlushViewOfFile" flush-view-of-file :convention :stdcall) winbool  (|lpBaseAddress| lpcvoid) (|dwNumberOfBytesToFlush| size_t))
(defcfun ("UnmapViewOfFile" unmap-view-of-file :convention :stdcall) winbool  (|lpBaseAddress| lpcvoid))
(defcfun ("EncryptFileA" encrypt-file-a :convention :stdcall) winbool  (|lpFileName| lpcstr))
(defcfun ("EncryptFileW" encrypt-file-w :convention :stdcall) winbool  (|lpFileName| lpcwstr))
(defcfun ("DecryptFileA" decrypt-file-a :convention :stdcall) winbool  (|lpFileName| lpcstr) (|dwReserved| dword))
(defcfun ("DecryptFileW" decrypt-file-w :convention :stdcall) winbool  (|lpFileName| lpcwstr) (|dwReserved| dword))
(defcfun ("FileEncryptionStatusA" file-encryption-status-a :convention :stdcall) winbool  (|lpFileName| lpcstr) (|lpStatus| lpdword))
(defcfun ("FileEncryptionStatusW" file-encryption-status-w :convention :stdcall) winbool  (|lpFileName| lpcwstr) (|lpStatus| lpdword))
(defcfun ("OpenEncryptedFileRawA" open-encrypted-file-raw-a :convention :stdcall) dword  (|lpFileName| lpcstr) (|ulFlags| ulong) (|pvContext| :pointer))
(defcfun ("OpenEncryptedFileRawW" open-encrypted-file-raw-w :convention :stdcall) dword  (|lpFileName| lpcwstr) (|ulFlags| ulong) (|pvContext| :pointer))
(defcfun ("ReadEncryptedFileRaw" read-encrypted-file-raw :convention :stdcall) dword  (|pfExportCallback| pfe_export_func) (|pvCallbackContext| pvoid) (|pvContext| pvoid))
(defcfun ("WriteEncryptedFileRaw" write-encrypted-file-raw :convention :stdcall) dword  (|pfImportCallback| pfe_import_func) (|pvCallbackContext| pvoid) (|pvContext| pvoid))
(defcfun ("CloseEncryptedFileRaw" close-encrypted-file-raw :convention :stdcall) :void  (|pvContext| pvoid))
(defcfun ("lstrcmpA" lstrcmpa :convention :stdcall) :int  (|lpString1| lpcstr) (|lpString2| lpcstr))
(defcfun ("lstrcmpW" lstrcmpw :convention :stdcall) :int  (|lpString1| lpcwstr) (|lpString2| lpcwstr))
(defcfun ("lstrcmpiA" lstrcmpia :convention :stdcall) :int  (|lpString1| lpcstr) (|lpString2| lpcstr))
(defcfun ("lstrcmpiW" lstrcmpiw :convention :stdcall) :int  (|lpString1| lpcwstr) (|lpString2| lpcwstr))
(defcfun ("lstrcpynA" lstrcpyna :convention :stdcall) lpstr  (|lpString1| lpstr) (|lpString2| lpcstr) (|iMaxLength| :int))
(defcfun ("lstrcpynW" lstrcpynw :convention :stdcall) lpwstr  (|lpString1| lpwstr) (|lpString2| lpcwstr) (|iMaxLength| :int))
(defcfun ("lstrcpyA" lstrcpya :convention :stdcall) lpstr  (|lpString1| lpstr) (|lpString2| lpcstr))
(defcfun ("lstrcpyW" lstrcpyw :convention :stdcall) lpwstr  (|lpString1| lpwstr) (|lpString2| lpcwstr))
(defcfun ("lstrcatA" lstrcata :convention :stdcall) lpstr  (|lpString1| lpstr) (|lpString2| lpcstr))
(defcfun ("lstrcatW" lstrcatw :convention :stdcall) lpwstr  (|lpString1| lpwstr) (|lpString2| lpcwstr))
(defcfun ("lstrlenA" lstrlena :convention :stdcall) :int  (|lpString| lpcstr))
(defcfun ("lstrlenW" lstrlenw :convention :stdcall) :int  (|lpString| lpcwstr))
(defcfun ("OpenFile" open-file :convention :stdcall) hfile  (|lpFileName| lpcstr) (|lpReOpenBuff| lpofstruct) (|uStyle| uint))
(defcfun ("_lopen" %lopen :convention :stdcall) hfile  (|lpPathName| lpcstr) (|iReadWrite| :int))
(defcfun ("_lcreat" %lcreat :convention :stdcall) hfile  (|lpPathName| lpcstr) (|iAttribute| :int))
(defcfun ("_lread" %lread :convention :stdcall) uint  (|hFile| hfile) (|lpBuffer| lpvoid) (|uBytes| uint))
(defcfun ("_lwrite" %lwrite :convention :stdcall) uint  (|hFile| hfile) (|lpBuffer| lpcch) (|uBytes| uint))
(defcfun ("_hread" %hread :convention :stdcall) :long  (|hFile| hfile) (|lpBuffer| lpvoid) (|lBytes| :long))
(defcfun ("_hwrite" %hwrite :convention :stdcall) :long  (|hFile| hfile) (|lpBuffer| lpcch) (|lBytes| :long))
(defcfun ("_lclose" %lclose :convention :stdcall) hfile  (|hFile| hfile))
(defcfun ("_llseek" %llseek :convention :stdcall) long  (|hFile| hfile) (|lOffset| long) (|iOrigin| :int))
(defcfun ("IsTextUnicode" is-text-unicode :convention :stdcall) winbool  (|lpv| :pointer) (|iSize| :int) (|lpiResult| lpint))
(defcfun ("FlsAlloc" fls-alloc :convention :stdcall) dword  (|lpCallback| pfls_callback_function))
(defcfun ("FlsGetValue" fls-get-value :convention :stdcall) pvoid  (|dwFlsIndex| dword))
(defcfun ("FlsSetValue" fls-set-value :convention :stdcall) winbool  (|dwFlsIndex| dword) (|lpFlsData| pvoid))
(defcfun ("FlsFree" fls-free :convention :stdcall) winbool  (|dwFlsIndex| dword))
(defcfun ("TlsAlloc" tls-alloc :convention :stdcall) dword )
(defcfun ("TlsGetValue" tls-get-value :convention :stdcall) lpvoid  (|dwTlsIndex| dword))
(defcfun ("TlsSetValue" tls-set-value :convention :stdcall) winbool  (|dwTlsIndex| dword) (|lpTlsValue| lpvoid))
(defcfun ("TlsFree" tls-free :convention :stdcall) winbool  (|dwTlsIndex| dword))
(defcfun ("SleepEx" sleep-ex :convention :stdcall) dword  (|dwMilliseconds| dword) (|bAlertable| winbool))
(defcfun ("WaitForSingleObjectEx" wait-for-single-object-ex :convention :stdcall) dword  (|hHandle| handle) (|dwMilliseconds| dword) (|bAlertable| winbool))
(defcfun ("WaitForMultipleObjectsEx" wait-for-multiple-objects-ex :convention :stdcall) dword  (|nCount| dword) (|lpHandles| :pointer) (|bWaitAll| winbool) (|dwMilliseconds| dword) (|bAlertable| winbool))
(defcfun ("SignalObjectAndWait" signal-object-and-wait :convention :stdcall) dword  (|hObjectToSignal| handle) (|hObjectToWaitOn| handle) (|dwMilliseconds| dword) (|bAlertable| winbool))
(defcfun ("ReadFileEx" read-file-ex :convention :stdcall) winbool  (|hFile| handle) (|lpBuffer| lpvoid) (|nNumberOfBytesToRead| dword) (|lpOverlapped| lpoverlapped) (|lpCompletionRoutine| lpoverlapped_completion_routine))
(defcfun ("WriteFileEx" write-file-ex :convention :stdcall) winbool  (|hFile| handle) (|lpBuffer| lpcvoid) (|nNumberOfBytesToWrite| dword) (|lpOverlapped| lpoverlapped) (|lpCompletionRoutine| lpoverlapped_completion_routine))
(defcfun ("BackupRead" backup-read :convention :stdcall) winbool  (|hFile| handle) (|lpBuffer| lpbyte) (|nNumberOfBytesToRead| dword) (|lpNumberOfBytesRead| lpdword) (|bAbort| winbool) (|bProcessSecurity| winbool) (|lpContext| :pointer))
(defcfun ("BackupSeek" backup-seek :convention :stdcall) winbool  (|hFile| handle) (|dwLowBytesToSeek| dword) (|dwHighBytesToSeek| dword) (|lpdwLowByteSeeked| lpdword) (|lpdwHighByteSeeked| lpdword) (|lpContext| :pointer))
(defcfun ("BackupWrite" backup-write :convention :stdcall) winbool  (|hFile| handle) (|lpBuffer| lpbyte) (|nNumberOfBytesToWrite| dword) (|lpNumberOfBytesWritten| lpdword) (|bAbort| winbool) (|bProcessSecurity| winbool) (|lpContext| :pointer))
(defcfun ("ReadFileScatter" read-file-scatter :convention :stdcall) winbool  (|hFile| handle) (|aSegmentArray| :pointer) (|nNumberOfBytesToRead| dword) (|lpReserved| lpdword) (|lpOverlapped| lpoverlapped))
(defcfun ("WriteFileGather" write-file-gather :convention :stdcall) winbool  (|hFile| handle) (|aSegmentArray| :pointer) (|nNumberOfBytesToWrite| dword) (|lpReserved| lpdword) (|lpOverlapped| lpoverlapped))
(defcfun ("CreateMutexA" create-mutex-a :convention :stdcall) handle  (|lpMutexAttributes| lpsecurity_attributes) (|bInitialOwner| winbool) (|lpName| lpcstr))
(defcfun ("CreateMutexW" create-mutex-w :convention :stdcall) handle  (|lpMutexAttributes| lpsecurity_attributes) (|bInitialOwner| winbool) (|lpName| lpcwstr))
(defcfun ("OpenMutexA" open-mutex-a :convention :stdcall) handle  (|dwDesiredAccess| dword) (|bInheritHandle| winbool) (|lpName| lpcstr))
(defcfun ("OpenMutexW" open-mutex-w :convention :stdcall) handle  (|dwDesiredAccess| dword) (|bInheritHandle| winbool) (|lpName| lpcwstr))
(defcfun ("CreateEventA" create-event-a :convention :stdcall) handle  (|lpEventAttributes| lpsecurity_attributes) (|bManualReset| winbool) (|bInitialState| winbool) (|lpName| lpcstr))
(defcfun ("CreateEventW" create-event-w :convention :stdcall) handle  (|lpEventAttributes| lpsecurity_attributes) (|bManualReset| winbool) (|bInitialState| winbool) (|lpName| lpcwstr))
(defcfun ("OpenEventA" open-event-a :convention :stdcall) handle  (|dwDesiredAccess| dword) (|bInheritHandle| winbool) (|lpName| lpcstr))
(defcfun ("OpenEventW" open-event-w :convention :stdcall) handle  (|dwDesiredAccess| dword) (|bInheritHandle| winbool) (|lpName| lpcwstr))
(defcfun ("CreateSemaphoreA" create-semaphore-a :convention :stdcall) handle  (|lpSemaphoreAttributes| lpsecurity_attributes) (|lInitialCount| long) (|lMaximumCount| long) (|lpName| lpcstr))
(defcfun ("CreateSemaphoreW" create-semaphore-w :convention :stdcall) handle  (|lpSemaphoreAttributes| lpsecurity_attributes) (|lInitialCount| long) (|lMaximumCount| long) (|lpName| lpcwstr))
(defcfun ("OpenSemaphoreA" open-semaphore-a :convention :stdcall) handle  (|dwDesiredAccess| dword) (|bInheritHandle| winbool) (|lpName| lpcstr))
(defcfun ("OpenSemaphoreW" open-semaphore-w :convention :stdcall) handle  (|dwDesiredAccess| dword) (|bInheritHandle| winbool) (|lpName| lpcwstr))
(defcfun ("CreateWaitableTimerA" create-waitable-timer-a :convention :stdcall) handle  (|lpTimerAttributes| lpsecurity_attributes) (|bManualReset| winbool) (|lpTimerName| lpcstr))
(defcfun ("CreateWaitableTimerW" create-waitable-timer-w :convention :stdcall) handle  (|lpTimerAttributes| lpsecurity_attributes) (|bManualReset| winbool) (|lpTimerName| lpcwstr))
(defcfun ("OpenWaitableTimerA" open-waitable-timer-a :convention :stdcall) handle  (|dwDesiredAccess| dword) (|bInheritHandle| winbool) (|lpTimerName| lpcstr))
(defcfun ("OpenWaitableTimerW" open-waitable-timer-w :convention :stdcall) handle  (|dwDesiredAccess| dword) (|bInheritHandle| winbool) (|lpTimerName| lpcwstr))
(defcfun ("SetWaitableTimer" set-waitable-timer :convention :stdcall) winbool  (|hTimer| handle) (|lpDueTime| :pointer) (|lPeriod| long) (|pfnCompletionRoutine| ptimerapcroutine) (|lpArgToCompletionRoutine| lpvoid) (|fResume| winbool))
(defcfun ("CancelWaitableTimer" cancel-waitable-timer :convention :stdcall) winbool  (|hTimer| handle))
(defcfun ("CreateFileMappingA" create-file-mapping-a :convention :stdcall) handle  (|hFile| handle) (|lpFileMappingAttributes| lpsecurity_attributes) (|flProtect| dword) (|dwMaximumSizeHigh| dword) (|dwMaximumSizeLow| dword) (|lpName| lpcstr))
(defcfun ("CreateFileMappingW" create-file-mapping-w :convention :stdcall) handle  (|hFile| handle) (|lpFileMappingAttributes| lpsecurity_attributes) (|flProtect| dword) (|dwMaximumSizeHigh| dword) (|dwMaximumSizeLow| dword) (|lpName| lpcwstr))
(defcfun ("OpenFileMappingA" open-file-mapping-a :convention :stdcall) handle  (|dwDesiredAccess| dword) (|bInheritHandle| winbool) (|lpName| lpcstr))
(defcfun ("OpenFileMappingW" open-file-mapping-w :convention :stdcall) handle  (|dwDesiredAccess| dword) (|bInheritHandle| winbool) (|lpName| lpcwstr))
(defcfun ("GetLogicalDriveStringsA" get-logical-drive-strings-a :convention :stdcall) dword  (|nBufferLength| dword) (|lpBuffer| lpstr))
(defcfun ("GetLogicalDriveStringsW" get-logical-drive-strings-w :convention :stdcall) dword  (|nBufferLength| dword) (|lpBuffer| lpwstr))
(defcfun ("CreateMemoryResourceNotification" create-memory-resource-notification :convention :stdcall) handle  (|NotificationType| memory_resource_notification_type))
(defcfun ("QueryMemoryResourceNotification" query-memory-resource-notification :convention :stdcall) winbool  (|ResourceNotificationHandle| handle) (|ResourceState| pbool))
(defcfun ("LoadLibraryA" load-library-a :convention :stdcall) hmodule  (|lpLibFileName| lpcstr))
(defcfun ("LoadLibraryW" load-library-w :convention :stdcall) hmodule  (|lpLibFileName| lpcwstr))
(defcfun ("LoadLibraryExA" load-library-ex-a :convention :stdcall) hmodule  (|lpLibFileName| lpcstr) (|hFile| handle) (|dwFlags| dword))
(defcfun ("LoadLibraryExW" load-library-ex-w :convention :stdcall) hmodule  (|lpLibFileName| lpcwstr) (|hFile| handle) (|dwFlags| dword))
(defcfun ("GetModuleFileNameA" get-module-file-name-a :convention :stdcall) dword  (|hModule| hmodule) (|lpFilename| lpch) (|nSize| dword))
(defcfun ("GetModuleFileNameW" get-module-file-name-w :convention :stdcall) dword  (|hModule| hmodule) (|lpFilename| lpwch) (|nSize| dword))
(defcfun ("GetModuleHandleA" get-module-handle-a :convention :stdcall) hmodule  (|lpModuleName| lpcstr))
(defcfun ("GetModuleHandleW" get-module-handle-w :convention :stdcall) hmodule  (|lpModuleName| lpcwstr))
(defcfun ("GetModuleHandleExA" get-module-handle-ex-a :convention :stdcall) winbool  (|dwFlags| dword) (|lpModuleName| lpcstr) (|phModule| :pointer))
(defcfun ("GetModuleHandleExW" get-module-handle-ex-w :convention :stdcall) winbool  (|dwFlags| dword) (|lpModuleName| lpcwstr) (|phModule| :pointer))
(defcfun ("NeedCurrentDirectoryForExePathA" need-current-directory-for-exe-path-a :convention :stdcall) winbool  (|ExeName| lpcstr))
(defcfun ("NeedCurrentDirectoryForExePathW" need-current-directory-for-exe-path-w :convention :stdcall) winbool  (|ExeName| lpcwstr))
(defcfun ("CreateProcessA" create-process-a :convention :stdcall) winbool  (|lpApplicationName| lpcstr) (|lpCommandLine| lpstr) (|lpProcessAttributes| lpsecurity_attributes) (|lpThreadAttributes| lpsecurity_attributes) (|bInheritHandles| winbool) (|dwCreationFlags| dword) (|lpEnvironment| lpvoid) (|lpCurrentDirectory| lpcstr) (|lpStartupInfo| lpstartupinfoa) (|lpProcessInformation| lpprocess_information))
(defcfun ("CreateProcessW" create-process-w :convention :stdcall) winbool  (|lpApplicationName| lpcwstr) (|lpCommandLine| lpwstr) (|lpProcessAttributes| lpsecurity_attributes) (|lpThreadAttributes| lpsecurity_attributes) (|bInheritHandles| winbool) (|dwCreationFlags| dword) (|lpEnvironment| lpvoid) (|lpCurrentDirectory| lpcwstr) (|lpStartupInfo| lpstartupinfow) (|lpProcessInformation| lpprocess_information))
(defcfun ("AddLocalAlternateComputerNameA" add-local-alternate-computer-name-a :convention :stdcall) dword  (|lpDnsFQHostname| lpcstr) (|ulFlags| ulong))
(defcfun ("AddLocalAlternateComputerNameW" add-local-alternate-computer-name-w :convention :stdcall) dword  (|lpDnsFQHostname| lpcwstr) (|ulFlags| ulong))
(defcfun ("SetProcessShutdownParameters" set-process-shutdown-parameters :convention :stdcall) winbool  (|dwLevel| dword) (|dwFlags| dword))
(defcfun ("GetProcessShutdownParameters" get-process-shutdown-parameters :convention :stdcall) winbool  (|lpdwLevel| lpdword) (|lpdwFlags| lpdword))
(defcfun ("GetProcessVersion" get-process-version :convention :stdcall) dword  (|ProcessId| dword))
(defcfun ("FatalAppExitA" fatal-app-exit-a :convention :stdcall) :void  (|uAction| uint) (|lpMessageText| lpcstr))
(defcfun ("FatalAppExitW" fatal-app-exit-w :convention :stdcall) :void  (|uAction| uint) (|lpMessageText| lpcwstr))
(defcfun ("GetStartupInfoA" get-startup-info-a :convention :stdcall) :void  (|lpStartupInfo| lpstartupinfoa))
(defcfun ("GetStartupInfoW" get-startup-info-w :convention :stdcall) :void  (|lpStartupInfo| lpstartupinfow))
(defcfun ("GetCommandLineA" get-command-line-a :convention :stdcall) lpstr )
(defcfun ("GetCommandLineW" get-command-line-w :convention :stdcall) lpwstr )
(defcfun ("GetEnvironmentVariableA" get-environment-variable-a :convention :stdcall) dword  (|lpName| lpcstr) (|lpBuffer| lpstr) (|nSize| dword))
(defcfun ("GetEnvironmentVariableW" get-environment-variable-w :convention :stdcall) dword  (|lpName| lpcwstr) (|lpBuffer| lpwstr) (|nSize| dword))
(defcfun ("SetEnvironmentVariableA" set-environment-variable-a :convention :stdcall) winbool  (|lpName| lpcstr) (|lpValue| lpcstr))
(defcfun ("SetEnvironmentVariableW" set-environment-variable-w :convention :stdcall) winbool  (|lpName| lpcwstr) (|lpValue| lpcwstr))
(defcfun ("ExpandEnvironmentStringsA" expand-environment-strings-a :convention :stdcall) dword  (|lpSrc| lpcstr) (|lpDst| lpstr) (|nSize| dword))
(defcfun ("ExpandEnvironmentStringsW" expand-environment-strings-w :convention :stdcall) dword  (|lpSrc| lpcwstr) (|lpDst| lpwstr) (|nSize| dword))
(defcfun ("GetFirmwareEnvironmentVariableA" get-firmware-environment-variable-a :convention :stdcall) dword  (|lpName| lpcstr) (|lpGuid| lpcstr) (|pBuffer| pvoid) (|nSize| dword))
(defcfun ("GetFirmwareEnvironmentVariableW" get-firmware-environment-variable-w :convention :stdcall) dword  (|lpName| lpcwstr) (|lpGuid| lpcwstr) (|pBuffer| pvoid) (|nSize| dword))
(defcfun ("SetFirmwareEnvironmentVariableA" set-firmware-environment-variable-a :convention :stdcall) winbool  (|lpName| lpcstr) (|lpGuid| lpcstr) (|pValue| pvoid) (|nSize| dword))
(defcfun ("SetFirmwareEnvironmentVariableW" set-firmware-environment-variable-w :convention :stdcall) winbool  (|lpName| lpcwstr) (|lpGuid| lpcwstr) (|pValue| pvoid) (|nSize| dword))
(defcfun ("OutputDebugStringA" output-debug-string-a :convention :stdcall) :void  (|lpOutputString| lpcstr))
(defcfun ("OutputDebugStringW" output-debug-string-w :convention :stdcall) :void  (|lpOutputString| lpcwstr))
(defcfun ("FindResourceA" find-resource-a :convention :stdcall) hrsrc  (|hModule| hmodule) (|lpName| lpcstr) (|lpType| lpcstr))
(defcfun ("FindResourceW" find-resource-w :convention :stdcall) hrsrc  (|hModule| hmodule) (|lpName| lpcwstr) (|lpType| lpcwstr))
(defcfun ("FindResourceExA" find-resource-ex-a :convention :stdcall) hrsrc  (|hModule| hmodule) (|lpType| lpcstr) (|lpName| lpcstr) (|wLanguage| word))
(defcfun ("FindResourceExW" find-resource-ex-w :convention :stdcall) hrsrc  (|hModule| hmodule) (|lpType| lpcwstr) (|lpName| lpcwstr) (|wLanguage| word))
(defcfun ("EnumResourceTypesA" enum-resource-types-a :convention :stdcall) winbool  (|hModule| hmodule) (|lpEnumFunc| enumrestypeproca) (|lParam| long_ptr))
(defcfun ("EnumResourceTypesW" enum-resource-types-w :convention :stdcall) winbool  (|hModule| hmodule) (|lpEnumFunc| enumrestypeprocw) (|lParam| long_ptr))
(defcfun ("EnumResourceNamesA" enum-resource-names-a :convention :stdcall) winbool  (|hModule| hmodule) (|lpType| lpcstr) (|lpEnumFunc| enumresnameproca) (|lParam| long_ptr))
(defcfun ("EnumResourceNamesW" enum-resource-names-w :convention :stdcall) winbool  (|hModule| hmodule) (|lpType| lpcwstr) (|lpEnumFunc| enumresnameprocw) (|lParam| long_ptr))
(defcfun ("EnumResourceLanguagesA" enum-resource-languages-a :convention :stdcall) winbool  (|hModule| hmodule) (|lpType| lpcstr) (|lpName| lpcstr) (|lpEnumFunc| enumreslangproca) (|lParam| long_ptr))
(defcfun ("EnumResourceLanguagesW" enum-resource-languages-w :convention :stdcall) winbool  (|hModule| hmodule) (|lpType| lpcwstr) (|lpName| lpcwstr) (|lpEnumFunc| enumreslangprocw) (|lParam| long_ptr))
(defcfun ("BeginUpdateResourceA" begin-update-resource-a :convention :stdcall) handle  (|pFileName| lpcstr) (|bDeleteExistingResources| winbool))
(defcfun ("BeginUpdateResourceW" begin-update-resource-w :convention :stdcall) handle  (|pFileName| lpcwstr) (|bDeleteExistingResources| winbool))
(defcfun ("UpdateResourceA" update-resource-a :convention :stdcall) winbool  (|hUpdate| handle) (|lpType| lpcstr) (|lpName| lpcstr) (|wLanguage| word) (|lpData| lpvoid) (|cb| dword))
(defcfun ("UpdateResourceW" update-resource-w :convention :stdcall) winbool  (|hUpdate| handle) (|lpType| lpcwstr) (|lpName| lpcwstr) (|wLanguage| word) (|lpData| lpvoid) (|cb| dword))
(defcfun ("EndUpdateResourceA" end-update-resource-a :convention :stdcall) winbool  (|hUpdate| handle) (|fDiscard| winbool))
(defcfun ("EndUpdateResourceW" end-update-resource-w :convention :stdcall) winbool  (|hUpdate| handle) (|fDiscard| winbool))
(defcfun ("GlobalAddAtomA" global-add-atom-a :convention :stdcall) atom  (|lpString| lpcstr))
(defcfun ("GlobalAddAtomW" global-add-atom-w :convention :stdcall) atom  (|lpString| lpcwstr))
(defcfun ("GlobalFindAtomA" global-find-atom-a :convention :stdcall) atom  (|lpString| lpcstr))
(defcfun ("GlobalFindAtomW" global-find-atom-w :convention :stdcall) atom  (|lpString| lpcwstr))
(defcfun ("GlobalGetAtomNameA" global-get-atom-name-a :convention :stdcall) uint  (|nAtom| atom) (|lpBuffer| lpstr) (|nSize| :int))
(defcfun ("GlobalGetAtomNameW" global-get-atom-name-w :convention :stdcall) uint  (|nAtom| atom) (|lpBuffer| lpwstr) (|nSize| :int))
(defcfun ("AddAtomA" add-atom-a :convention :stdcall) atom  (|lpString| lpcstr))
(defcfun ("AddAtomW" add-atom-w :convention :stdcall) atom  (|lpString| lpcwstr))
(defcfun ("FindAtomA" find-atom-a :convention :stdcall) atom  (|lpString| lpcstr))
(defcfun ("FindAtomW" find-atom-w :convention :stdcall) atom  (|lpString| lpcwstr))
(defcfun ("GetAtomNameA" get-atom-name-a :convention :stdcall) uint  (|nAtom| atom) (|lpBuffer| lpstr) (|nSize| :int))
(defcfun ("GetAtomNameW" get-atom-name-w :convention :stdcall) uint  (|nAtom| atom) (|lpBuffer| lpwstr) (|nSize| :int))
(defcfun ("GetProfileIntA" get-profile-int-a :convention :stdcall) uint  (|lpAppName| lpcstr) (|lpKeyName| lpcstr) (|nDefault| int))
(defcfun ("GetProfileIntW" get-profile-int-w :convention :stdcall) uint  (|lpAppName| lpcwstr) (|lpKeyName| lpcwstr) (|nDefault| int))
(defcfun ("GetProfileStringA" get-profile-string-a :convention :stdcall) dword  (|lpAppName| lpcstr) (|lpKeyName| lpcstr) (|lpDefault| lpcstr) (|lpReturnedString| lpstr) (|nSize| dword))
(defcfun ("GetProfileStringW" get-profile-string-w :convention :stdcall) dword  (|lpAppName| lpcwstr) (|lpKeyName| lpcwstr) (|lpDefault| lpcwstr) (|lpReturnedString| lpwstr) (|nSize| dword))
(defcfun ("WriteProfileStringA" write-profile-string-a :convention :stdcall) winbool  (|lpAppName| lpcstr) (|lpKeyName| lpcstr) (|lpString| lpcstr))
(defcfun ("WriteProfileStringW" write-profile-string-w :convention :stdcall) winbool  (|lpAppName| lpcwstr) (|lpKeyName| lpcwstr) (|lpString| lpcwstr))
(defcfun ("GetProfileSectionA" get-profile-section-a :convention :stdcall) dword  (|lpAppName| lpcstr) (|lpReturnedString| lpstr) (|nSize| dword))
(defcfun ("GetProfileSectionW" get-profile-section-w :convention :stdcall) dword  (|lpAppName| lpcwstr) (|lpReturnedString| lpwstr) (|nSize| dword))
(defcfun ("WriteProfileSectionA" write-profile-section-a :convention :stdcall) winbool  (|lpAppName| lpcstr) (|lpString| lpcstr))
(defcfun ("WriteProfileSectionW" write-profile-section-w :convention :stdcall) winbool  (|lpAppName| lpcwstr) (|lpString| lpcwstr))
(defcfun ("GetPrivateProfileIntA" get-private-profile-int-a :convention :stdcall) uint  (|lpAppName| lpcstr) (|lpKeyName| lpcstr) (|nDefault| int) (|lpFileName| lpcstr))
(defcfun ("GetPrivateProfileIntW" get-private-profile-int-w :convention :stdcall) uint  (|lpAppName| lpcwstr) (|lpKeyName| lpcwstr) (|nDefault| int) (|lpFileName| lpcwstr))
(defcfun ("GetPrivateProfileStringA" get-private-profile-string-a :convention :stdcall) dword  (|lpAppName| lpcstr) (|lpKeyName| lpcstr) (|lpDefault| lpcstr) (|lpReturnedString| lpstr) (|nSize| dword) (|lpFileName| lpcstr))
(defcfun ("GetPrivateProfileStringW" get-private-profile-string-w :convention :stdcall) dword  (|lpAppName| lpcwstr) (|lpKeyName| lpcwstr) (|lpDefault| lpcwstr) (|lpReturnedString| lpwstr) (|nSize| dword) (|lpFileName| lpcwstr))
(defcfun ("WritePrivateProfileStringA" write-private-profile-string-a :convention :stdcall) winbool  (|lpAppName| lpcstr) (|lpKeyName| lpcstr) (|lpString| lpcstr) (|lpFileName| lpcstr))
(defcfun ("WritePrivateProfileStringW" write-private-profile-string-w :convention :stdcall) winbool  (|lpAppName| lpcwstr) (|lpKeyName| lpcwstr) (|lpString| lpcwstr) (|lpFileName| lpcwstr))
(defcfun ("GetPrivateProfileSectionA" get-private-profile-section-a :convention :stdcall) dword  (|lpAppName| lpcstr) (|lpReturnedString| lpstr) (|nSize| dword) (|lpFileName| lpcstr))
(defcfun ("GetPrivateProfileSectionW" get-private-profile-section-w :convention :stdcall) dword  (|lpAppName| lpcwstr) (|lpReturnedString| lpwstr) (|nSize| dword) (|lpFileName| lpcwstr))
(defcfun ("WritePrivateProfileSectionA" write-private-profile-section-a :convention :stdcall) winbool  (|lpAppName| lpcstr) (|lpString| lpcstr) (|lpFileName| lpcstr))
(defcfun ("WritePrivateProfileSectionW" write-private-profile-section-w :convention :stdcall) winbool  (|lpAppName| lpcwstr) (|lpString| lpcwstr) (|lpFileName| lpcwstr))
(defcfun ("GetPrivateProfileSectionNamesA" get-private-profile-section-names-a :convention :stdcall) dword  (|lpszReturnBuffer| lpstr) (|nSize| dword) (|lpFileName| lpcstr))
(defcfun ("GetPrivateProfileSectionNamesW" get-private-profile-section-names-w :convention :stdcall) dword  (|lpszReturnBuffer| lpwstr) (|nSize| dword) (|lpFileName| lpcwstr))
(defcfun ("GetPrivateProfileStructA" get-private-profile-struct-a :convention :stdcall) winbool  (|lpszSection| lpcstr) (|lpszKey| lpcstr) (|lpStruct| lpvoid) (|uSizeStruct| uint) (|szFile| lpcstr))
(defcfun ("GetPrivateProfileStructW" get-private-profile-struct-w :convention :stdcall) winbool  (|lpszSection| lpcwstr) (|lpszKey| lpcwstr) (|lpStruct| lpvoid) (|uSizeStruct| uint) (|szFile| lpcwstr))
(defcfun ("WritePrivateProfileStructA" write-private-profile-struct-a :convention :stdcall) winbool  (|lpszSection| lpcstr) (|lpszKey| lpcstr) (|lpStruct| lpvoid) (|uSizeStruct| uint) (|szFile| lpcstr))
(defcfun ("WritePrivateProfileStructW" write-private-profile-struct-w :convention :stdcall) winbool  (|lpszSection| lpcwstr) (|lpszKey| lpcwstr) (|lpStruct| lpvoid) (|uSizeStruct| uint) (|szFile| lpcwstr))
(defcfun ("GetDriveTypeA" get-drive-type-a :convention :stdcall) uint  (|lpRootPathName| lpcstr))
(defcfun ("GetDriveTypeW" get-drive-type-w :convention :stdcall) uint  (|lpRootPathName| lpcwstr))
(defcfun ("GetSystemDirectoryA" get-system-directory-a :convention :stdcall) uint  (|lpBuffer| lpstr) (|uSize| uint))
(defcfun ("GetSystemDirectoryW" get-system-directory-w :convention :stdcall) uint  (|lpBuffer| lpwstr) (|uSize| uint))
(defcfun ("GetTempPathA" get-temp-path-a :convention :stdcall) dword  (|nBufferLength| dword) (|lpBuffer| lpstr))
(defcfun ("GetTempPathW" get-temp-path-w :convention :stdcall) dword  (|nBufferLength| dword) (|lpBuffer| lpwstr))
(defcfun ("GetTempFileNameA" get-temp-file-name-a :convention :stdcall) uint  (|lpPathName| lpcstr) (|lpPrefixString| lpcstr) (|uUnique| uint) (|lpTempFileName| lpstr))
(defcfun ("GetTempFileNameW" get-temp-file-name-w :convention :stdcall) uint  (|lpPathName| lpcwstr) (|lpPrefixString| lpcwstr) (|uUnique| uint) (|lpTempFileName| lpwstr))
(defcfun ("GetWindowsDirectoryA" get-windows-directory-a :convention :stdcall) uint  (|lpBuffer| lpstr) (|uSize| uint))
(defcfun ("GetWindowsDirectoryW" get-windows-directory-w :convention :stdcall) uint  (|lpBuffer| lpwstr) (|uSize| uint))
(defcfun ("GetSystemWindowsDirectoryA" get-system-windows-directory-a :convention :stdcall) uint  (|lpBuffer| lpstr) (|uSize| uint))
(defcfun ("GetSystemWindowsDirectoryW" get-system-windows-directory-w :convention :stdcall) uint  (|lpBuffer| lpwstr) (|uSize| uint))
(defcfun ("GetSystemWow64DirectoryA" get-system-wow-64-directory-a :convention :stdcall) uint  (|lpBuffer| lpstr) (|uSize| uint))
(defcfun ("GetSystemWow64DirectoryW" get-system-wow-64-directory-w :convention :stdcall) uint  (|lpBuffer| lpwstr) (|uSize| uint))
(defcfun ("Wow64EnableWow64FsRedirection" wow-64-enable-wow-64-fs-redirection :convention :stdcall) boolean  (|Wow64FsEnableRedirection| boolean))
(defcfun ("Wow64DisableWow64FsRedirection" wow-64-disable-wow-64-fs-redirection :convention :stdcall) winbool  (|OldValue| :pointer))
(defcfun ("Wow64RevertWow64FsRedirection" wow-64-revert-wow-64-fs-redirection :convention :stdcall) winbool  (|OlValue| pvoid))
(defcfun ("SetCurrentDirectoryA" set-current-directory-a :convention :stdcall) winbool  (|lpPathName| lpcstr))
(defcfun ("SetCurrentDirectoryW" set-current-directory-w :convention :stdcall) winbool  (|lpPathName| lpcwstr))
(defcfun ("GetCurrentDirectoryA" get-current-directory-a :convention :stdcall) dword  (|nBufferLength| dword) (|lpBuffer| lpstr))
(defcfun ("GetCurrentDirectoryW" get-current-directory-w :convention :stdcall) dword  (|nBufferLength| dword) (|lpBuffer| lpwstr))
(defcfun ("SetDllDirectoryA" set-dll-directory-a :convention :stdcall) winbool  (|lpPathName| lpcstr))
(defcfun ("SetDllDirectoryW" set-dll-directory-w :convention :stdcall) winbool  (|lpPathName| lpcwstr))
(defcfun ("GetDllDirectoryA" get-dll-directory-a :convention :stdcall) dword  (|nBufferLength| dword) (|lpBuffer| lpstr))
(defcfun ("GetDllDirectoryW" get-dll-directory-w :convention :stdcall) dword  (|nBufferLength| dword) (|lpBuffer| lpwstr))
(defcfun ("GetDiskFreeSpaceA" get-disk-free-space-a :convention :stdcall) winbool  (|lpRootPathName| lpcstr) (|lpSectorsPerCluster| lpdword) (|lpBytesPerSector| lpdword) (|lpNumberOfFreeClusters| lpdword) (|lpTotalNumberOfClusters| lpdword))
(defcfun ("GetDiskFreeSpaceW" get-disk-free-space-w :convention :stdcall) winbool  (|lpRootPathName| lpcwstr) (|lpSectorsPerCluster| lpdword) (|lpBytesPerSector| lpdword) (|lpNumberOfFreeClusters| lpdword) (|lpTotalNumberOfClusters| lpdword))
(defcfun ("GetDiskFreeSpaceExA" get-disk-free-space-ex-a :convention :stdcall) winbool  (|lpDirectoryName| lpcstr) (|lpFreeBytesAvailableToCaller| pularge_integer) (|lpTotalNumberOfBytes| pularge_integer) (|lpTotalNumberOfFreeBytes| pularge_integer))
(defcfun ("GetDiskFreeSpaceExW" get-disk-free-space-ex-w :convention :stdcall) winbool  (|lpDirectoryName| lpcwstr) (|lpFreeBytesAvailableToCaller| pularge_integer) (|lpTotalNumberOfBytes| pularge_integer) (|lpTotalNumberOfFreeBytes| pularge_integer))
(defcfun ("CreateDirectoryA" create-directory-a :convention :stdcall) winbool  (|lpPathName| lpcstr) (|lpSecurityAttributes| lpsecurity_attributes))
(defcfun ("CreateDirectoryW" create-directory-w :convention :stdcall) winbool  (|lpPathName| lpcwstr) (|lpSecurityAttributes| lpsecurity_attributes))
(defcfun ("CreateDirectoryExA" create-directory-ex-a :convention :stdcall) winbool  (|lpTemplateDirectory| lpcstr) (|lpNewDirectory| lpcstr) (|lpSecurityAttributes| lpsecurity_attributes))
(defcfun ("CreateDirectoryExW" create-directory-ex-w :convention :stdcall) winbool  (|lpTemplateDirectory| lpcwstr) (|lpNewDirectory| lpcwstr) (|lpSecurityAttributes| lpsecurity_attributes))
(defcfun ("RemoveDirectoryA" remove-directory-a :convention :stdcall) winbool  (|lpPathName| lpcstr))
(defcfun ("RemoveDirectoryW" remove-directory-w :convention :stdcall) winbool  (|lpPathName| lpcwstr))
(defcfun ("GetFullPathNameA" get-full-path-name-a :convention :stdcall) dword  (|lpFileName| lpcstr) (|nBufferLength| dword) (|lpBuffer| lpstr) (|lpFilePart| :pointer))
(defcfun ("GetFullPathNameW" get-full-path-name-w :convention :stdcall) dword  (|lpFileName| lpcwstr) (|nBufferLength| dword) (|lpBuffer| lpwstr) (|lpFilePart| :pointer))
(defcfun ("DefineDosDeviceA" define-dos-device-a :convention :stdcall) winbool  (|dwFlags| dword) (|lpDeviceName| lpcstr) (|lpTargetPath| lpcstr))
(defcfun ("DefineDosDeviceW" define-dos-device-w :convention :stdcall) winbool  (|dwFlags| dword) (|lpDeviceName| lpcwstr) (|lpTargetPath| lpcwstr))
(defcfun ("QueryDosDeviceA" query-dos-device-a :convention :stdcall) dword  (|lpDeviceName| lpcstr) (|lpTargetPath| lpstr) (|ucchMax| dword))
(defcfun ("QueryDosDeviceW" query-dos-device-w :convention :stdcall) dword  (|lpDeviceName| lpcwstr) (|lpTargetPath| lpwstr) (|ucchMax| dword))
(defcfun ("CreateFileA" create-file-a :convention :stdcall) handle  (|lpFileName| lpcstr) (|dwDesiredAccess| dword) (|dwShareMode| dword) (|lpSecurityAttributes| lpsecurity_attributes) (|dwCreationDisposition| dword) (|dwFlagsAndAttributes| dword) (|hTemplateFile| handle))
(defcfun ("CreateFileW" create-file-w :convention :stdcall) handle  (|lpFileName| lpcwstr) (|dwDesiredAccess| dword) (|dwShareMode| dword) (|lpSecurityAttributes| lpsecurity_attributes) (|dwCreationDisposition| dword) (|dwFlagsAndAttributes| dword) (|hTemplateFile| handle))
(defcfun ("ReOpenFile" re-open-file :convention :stdcall) handle  (|hOriginalFile| handle) (|dwDesiredAccess| dword) (|dwShareMode| dword) (|dwFlagsAndAttributes| dword))
(defcfun ("SetFileAttributesA" set-file-attributes-a :convention :stdcall) winbool  (|lpFileName| lpcstr) (|dwFileAttributes| dword))
(defcfun ("SetFileAttributesW" set-file-attributes-w :convention :stdcall) winbool  (|lpFileName| lpcwstr) (|dwFileAttributes| dword))
(defcfun ("GetFileAttributesA" get-file-attributes-a :convention :stdcall) dword  (|lpFileName| lpcstr))
(defcfun ("GetFileAttributesW" get-file-attributes-w :convention :stdcall) dword  (|lpFileName| lpcwstr))
(defcfun ("GetFileAttributesExA" get-file-attributes-ex-a :convention :stdcall) winbool  (|lpFileName| lpcstr) (|fInfoLevelId| get_fileex_info_levels) (|lpFileInformation| lpvoid))
(defcfun ("GetFileAttributesExW" get-file-attributes-ex-w :convention :stdcall) winbool  (|lpFileName| lpcwstr) (|fInfoLevelId| get_fileex_info_levels) (|lpFileInformation| lpvoid))
(defcfun ("GetCompressedFileSizeA" get-compressed-file-size-a :convention :stdcall) dword  (|lpFileName| lpcstr) (|lpFileSizeHigh| lpdword))
(defcfun ("GetCompressedFileSizeW" get-compressed-file-size-w :convention :stdcall) dword  (|lpFileName| lpcwstr) (|lpFileSizeHigh| lpdword))
(defcfun ("DeleteFileA" delete-file-a :convention :stdcall) winbool  (|lpFileName| lpcstr))
(defcfun ("DeleteFileW" delete-file-w :convention :stdcall) winbool  (|lpFileName| lpcwstr))
(defcfun ("CheckNameLegalDOS8Dot3A" check-name-legal-dos-8-dot-3-a :convention :stdcall) winbool  (|lpName| lpcstr) (|lpOemName| lpstr) (|OemNameSize| dword) (|pbNameContainsSpaces| pbool) (|pbNameLegal| pbool))
(defcfun ("CheckNameLegalDOS8Dot3W" check-name-legal-dos-8-dot-3-w :convention :stdcall) winbool  (|lpName| lpcwstr) (|lpOemName| lpstr) (|OemNameSize| dword) (|pbNameContainsSpaces| pbool) (|pbNameLegal| pbool))
(defcfun ("FindFirstFileExA" find-first-file-ex-a :convention :stdcall) handle  (|lpFileName| lpcstr) (|fInfoLevelId| findex_info_levels) (|lpFindFileData| lpvoid) (|fSearchOp| findex_search_ops) (|lpSearchFilter| lpvoid) (|dwAdditionalFlags| dword))
(defcfun ("FindFirstFileExW" find-first-file-ex-w :convention :stdcall) handle  (|lpFileName| lpcwstr) (|fInfoLevelId| findex_info_levels) (|lpFindFileData| lpvoid) (|fSearchOp| findex_search_ops) (|lpSearchFilter| lpvoid) (|dwAdditionalFlags| dword))
(defcfun ("FindFirstFileA" find-first-file-a :convention :stdcall) handle  (|lpFileName| lpcstr) (|lpFindFileData| lpwin32_find_dataa))
(defcfun ("FindFirstFileW" find-first-file-w :convention :stdcall) handle  (|lpFileName| lpcwstr) (|lpFindFileData| lpwin32_find_dataw))
(defcfun ("FindNextFileA" find-next-file-a :convention :stdcall) winbool  (|hFindFile| handle) (|lpFindFileData| lpwin32_find_dataa))
(defcfun ("FindNextFileW" find-next-file-w :convention :stdcall) winbool  (|hFindFile| handle) (|lpFindFileData| lpwin32_find_dataw))
(defcfun ("SearchPathA" search-path-a :convention :stdcall) dword  (|lpPath| lpcstr) (|lpFileName| lpcstr) (|lpExtension| lpcstr) (|nBufferLength| dword) (|lpBuffer| lpstr) (|lpFilePart| :pointer))
(defcfun ("SearchPathW" search-path-w :convention :stdcall) dword  (|lpPath| lpcwstr) (|lpFileName| lpcwstr) (|lpExtension| lpcwstr) (|nBufferLength| dword) (|lpBuffer| lpwstr) (|lpFilePart| :pointer))
(defcfun ("CopyFileA" copy-file-a :convention :stdcall) winbool  (|lpExistingFileName| lpcstr) (|lpNewFileName| lpcstr) (|bFailIfExists| winbool))
(defcfun ("CopyFileW" copy-file-w :convention :stdcall) winbool  (|lpExistingFileName| lpcwstr) (|lpNewFileName| lpcwstr) (|bFailIfExists| winbool))
(defcfun ("CopyFileExA" copy-file-ex-a :convention :stdcall) winbool  (|lpExistingFileName| lpcstr) (|lpNewFileName| lpcstr) (|lpProgressRoutine| lpprogress_routine) (|lpData| lpvoid) (|pbCancel| lpbool) (|dwCopyFlags| dword))
(defcfun ("CopyFileExW" copy-file-ex-w :convention :stdcall) winbool  (|lpExistingFileName| lpcwstr) (|lpNewFileName| lpcwstr) (|lpProgressRoutine| lpprogress_routine) (|lpData| lpvoid) (|pbCancel| lpbool) (|dwCopyFlags| dword))
(defcfun ("MoveFileA" move-file-a :convention :stdcall) winbool  (|lpExistingFileName| lpcstr) (|lpNewFileName| lpcstr))
(defcfun ("MoveFileW" move-file-w :convention :stdcall) winbool  (|lpExistingFileName| lpcwstr) (|lpNewFileName| lpcwstr))
(defcfun ("MoveFileExA" move-file-ex-a :convention :stdcall) winbool  (|lpExistingFileName| lpcstr) (|lpNewFileName| lpcstr) (|dwFlags| dword))
(defcfun ("MoveFileExW" move-file-ex-w :convention :stdcall) winbool  (|lpExistingFileName| lpcwstr) (|lpNewFileName| lpcwstr) (|dwFlags| dword))
(defcfun ("MoveFileWithProgressA" move-file-with-progress-a :convention :stdcall) winbool  (|lpExistingFileName| lpcstr) (|lpNewFileName| lpcstr) (|lpProgressRoutine| lpprogress_routine) (|lpData| lpvoid) (|dwFlags| dword))
(defcfun ("MoveFileWithProgressW" move-file-with-progress-w :convention :stdcall) winbool  (|lpExistingFileName| lpcwstr) (|lpNewFileName| lpcwstr) (|lpProgressRoutine| lpprogress_routine) (|lpData| lpvoid) (|dwFlags| dword))
(defcfun ("ReplaceFileA" replace-file-a :convention :stdcall) winbool  (|lpReplacedFileName| lpcstr) (|lpReplacementFileName| lpcstr) (|lpBackupFileName| lpcstr) (|dwReplaceFlags| dword) (|lpExclude| lpvoid) (|lpReserved| lpvoid))
(defcfun ("ReplaceFileW" replace-file-w :convention :stdcall) winbool  (|lpReplacedFileName| lpcwstr) (|lpReplacementFileName| lpcwstr) (|lpBackupFileName| lpcwstr) (|dwReplaceFlags| dword) (|lpExclude| lpvoid) (|lpReserved| lpvoid))
(defcfun ("CreateHardLinkA" create-hard-link-a :convention :stdcall) winbool  (|lpFileName| lpcstr) (|lpExistingFileName| lpcstr) (|lpSecurityAttributes| lpsecurity_attributes))
(defcfun ("CreateHardLinkW" create-hard-link-w :convention :stdcall) winbool  (|lpFileName| lpcwstr) (|lpExistingFileName| lpcwstr) (|lpSecurityAttributes| lpsecurity_attributes))
(defcfun ("FindFirstStreamW" find-first-stream-w :convention :stdcall) handle  (|lpFileName| lpcwstr) (|InfoLevel| stream_info_levels) (|lpFindStreamData| lpvoid) (|dwFlags| dword))
(defcfun ("FindNextStreamW" find-next-stream-w :convention :stdcall) winbool  (|hFindStream| handle) (|lpFindStreamData| lpvoid))
(defcfun ("CreateNamedPipeA" create-named-pipe-a :convention :stdcall) handle  (|lpName| lpcstr) (|dwOpenMode| dword) (|dwPipeMode| dword) (|nMaxInstances| dword) (|nOutBufferSize| dword) (|nInBufferSize| dword) (|nDefaultTimeOut| dword) (|lpSecurityAttributes| lpsecurity_attributes))
(defcfun ("CreateNamedPipeW" create-named-pipe-w :convention :stdcall) handle  (|lpName| lpcwstr) (|dwOpenMode| dword) (|dwPipeMode| dword) (|nMaxInstances| dword) (|nOutBufferSize| dword) (|nInBufferSize| dword) (|nDefaultTimeOut| dword) (|lpSecurityAttributes| lpsecurity_attributes))
(defcfun ("GetNamedPipeHandleStateA" get-named-pipe-handle-state-a :convention :stdcall) winbool  (|hNamedPipe| handle) (|lpState| lpdword) (|lpCurInstances| lpdword) (|lpMaxCollectionCount| lpdword) (|lpCollectDataTimeout| lpdword) (|lpUserName| lpstr) (|nMaxUserNameSize| dword))
(defcfun ("GetNamedPipeHandleStateW" get-named-pipe-handle-state-w :convention :stdcall) winbool  (|hNamedPipe| handle) (|lpState| lpdword) (|lpCurInstances| lpdword) (|lpMaxCollectionCount| lpdword) (|lpCollectDataTimeout| lpdword) (|lpUserName| lpwstr) (|nMaxUserNameSize| dword))
(defcfun ("CallNamedPipeA" call-named-pipe-a :convention :stdcall) winbool  (|lpNamedPipeName| lpcstr) (|lpInBuffer| lpvoid) (|nInBufferSize| dword) (|lpOutBuffer| lpvoid) (|nOutBufferSize| dword) (|lpBytesRead| lpdword) (|nTimeOut| dword))
(defcfun ("CallNamedPipeW" call-named-pipe-w :convention :stdcall) winbool  (|lpNamedPipeName| lpcwstr) (|lpInBuffer| lpvoid) (|nInBufferSize| dword) (|lpOutBuffer| lpvoid) (|nOutBufferSize| dword) (|lpBytesRead| lpdword) (|nTimeOut| dword))
(defcfun ("WaitNamedPipeA" wait-named-pipe-a :convention :stdcall) winbool  (|lpNamedPipeName| lpcstr) (|nTimeOut| dword))
(defcfun ("WaitNamedPipeW" wait-named-pipe-w :convention :stdcall) winbool  (|lpNamedPipeName| lpcwstr) (|nTimeOut| dword))
(defcfun ("SetVolumeLabelA" set-volume-label-a :convention :stdcall) winbool  (|lpRootPathName| lpcstr) (|lpVolumeName| lpcstr))
(defcfun ("SetVolumeLabelW" set-volume-label-w :convention :stdcall) winbool  (|lpRootPathName| lpcwstr) (|lpVolumeName| lpcwstr))
(defcfun ("SetFileApisToOEM" set-file-apis-to-oem :convention :stdcall) :void )
(defcfun ("SetFileApisToANSI" set-file-apis-to-ansi :convention :stdcall) :void )
(defcfun ("AreFileApisANSI" are-file-apis-ansi :convention :stdcall) winbool )
(defcfun ("GetVolumeInformationA" get-volume-information-a :convention :stdcall) winbool  (|lpRootPathName| lpcstr) (|lpVolumeNameBuffer| lpstr) (|nVolumeNameSize| dword) (|lpVolumeSerialNumber| lpdword) (|lpMaximumComponentLength| lpdword) (|lpFileSystemFlags| lpdword) (|lpFileSystemNameBuffer| lpstr) (|nFileSystemNameSize| dword))
(defcfun ("GetVolumeInformationW" get-volume-information-w :convention :stdcall) winbool  (|lpRootPathName| lpcwstr) (|lpVolumeNameBuffer| lpwstr) (|nVolumeNameSize| dword) (|lpVolumeSerialNumber| lpdword) (|lpMaximumComponentLength| lpdword) (|lpFileSystemFlags| lpdword) (|lpFileSystemNameBuffer| lpwstr) (|nFileSystemNameSize| dword))
(defcfun ("CancelIo" cancel-io :convention :stdcall) winbool  (|hFile| handle))
(defcfun ("ClearEventLogA" clear-event-log-a :convention :stdcall) winbool  (|hEventLog| handle) (|lpBackupFileName| lpcstr))
(defcfun ("ClearEventLogW" clear-event-log-w :convention :stdcall) winbool  (|hEventLog| handle) (|lpBackupFileName| lpcwstr))
(defcfun ("BackupEventLogA" backup-event-log-a :convention :stdcall) winbool  (|hEventLog| handle) (|lpBackupFileName| lpcstr))
(defcfun ("BackupEventLogW" backup-event-log-w :convention :stdcall) winbool  (|hEventLog| handle) (|lpBackupFileName| lpcwstr))
(defcfun ("CloseEventLog" close-event-log :convention :stdcall) winbool  (|hEventLog| handle))
(defcfun ("DeregisterEventSource" deregister-event-source :convention :stdcall) winbool  (|hEventLog| handle))
(defcfun ("NotifyChangeEventLog" notify-change-event-log :convention :stdcall) winbool  (|hEventLog| handle) (|hEvent| handle))
(defcfun ("GetNumberOfEventLogRecords" get-number-of-event-log-records :convention :stdcall) winbool  (|hEventLog| handle) (|NumberOfRecords| pdword))
(defcfun ("GetOldestEventLogRecord" get-oldest-event-log-record :convention :stdcall) winbool  (|hEventLog| handle) (|OldestRecord| pdword))
(defcfun ("OpenEventLogA" open-event-log-a :convention :stdcall) handle  (|lpUNCServerName| lpcstr) (|lpSourceName| lpcstr))
(defcfun ("OpenEventLogW" open-event-log-w :convention :stdcall) handle  (|lpUNCServerName| lpcwstr) (|lpSourceName| lpcwstr))
(defcfun ("RegisterEventSourceA" register-event-source-a :convention :stdcall) handle  (|lpUNCServerName| lpcstr) (|lpSourceName| lpcstr))
(defcfun ("RegisterEventSourceW" register-event-source-w :convention :stdcall) handle  (|lpUNCServerName| lpcwstr) (|lpSourceName| lpcwstr))
(defcfun ("OpenBackupEventLogA" open-backup-event-log-a :convention :stdcall) handle  (|lpUNCServerName| lpcstr) (|lpFileName| lpcstr))
(defcfun ("OpenBackupEventLogW" open-backup-event-log-w :convention :stdcall) handle  (|lpUNCServerName| lpcwstr) (|lpFileName| lpcwstr))
(defcfun ("ReadEventLogA" read-event-log-a :convention :stdcall) winbool  (|hEventLog| handle) (|dwReadFlags| dword) (|dwRecordOffset| dword) (|lpBuffer| lpvoid) (|nNumberOfBytesToRead| dword) (|pnBytesRead| :pointer) (|pnMinNumberOfBytesNeeded| :pointer))
(defcfun ("ReadEventLogW" read-event-log-w :convention :stdcall) winbool  (|hEventLog| handle) (|dwReadFlags| dword) (|dwRecordOffset| dword) (|lpBuffer| lpvoid) (|nNumberOfBytesToRead| dword) (|pnBytesRead| :pointer) (|pnMinNumberOfBytesNeeded| :pointer))
(defcfun ("ReportEventA" report-event-a :convention :stdcall) winbool  (|hEventLog| handle) (|wType| word) (|wCategory| word) (|dwEventID| dword) (|lpUserSid| psid) (|wNumStrings| word) (|dwDataSize| dword) (|lpStrings| :pointer) (|lpRawData| lpvoid))
(defcfun ("ReportEventW" report-event-w :convention :stdcall) winbool  (|hEventLog| handle) (|wType| word) (|wCategory| word) (|dwEventID| dword) (|lpUserSid| psid) (|wNumStrings| word) (|dwDataSize| dword) (|lpStrings| :pointer) (|lpRawData| lpvoid))
(defcfun ("GetEventLogInformation" get-event-log-information :convention :stdcall) winbool  (|hEventLog| handle) (|dwInfoLevel| dword) (|lpBuffer| lpvoid) (|cbBufSize| dword) (|pcbBytesNeeded| lpdword))
(defcfun ("DuplicateToken" duplicate-token :convention :stdcall) winbool  (|ExistingTokenHandle| handle) (|ImpersonationLevel| security_impersonation_level) (|DuplicateTokenHandle| phandle))
(defcfun ("GetKernelObjectSecurity" get-kernel-object-security :convention :stdcall) winbool  (|Handle| handle) (|RequestedInformation| security_information) (|pSecurityDescriptor| psecurity_descriptor) (|nLength| dword) (|lpnLengthNeeded| lpdword))
(defcfun ("ImpersonateNamedPipeClient" impersonate-named-pipe-client :convention :stdcall) winbool  (|hNamedPipe| handle))
(defcfun ("ImpersonateSelf" impersonate-self :convention :stdcall) winbool  (|ImpersonationLevel| security_impersonation_level))
(defcfun ("RevertToSelf" revert-to-self :convention :stdcall) winbool )
(defcfun ("SetThreadToken" set-thread-token :convention :stdcall) winbool  (|Thread| phandle) (|Token| handle))
(defcfun ("AccessCheck" access-check :convention :stdcall) winbool  (|pSecurityDescriptor| psecurity_descriptor) (|ClientToken| handle) (|DesiredAccess| dword) (|GenericMapping| pgeneric_mapping) (|PrivilegeSet| pprivilege_set) (|PrivilegeSetLength| lpdword) (|GrantedAccess| lpdword) (|AccessStatus| lpbool))
(defcfun ("AccessCheckByType" access-check-by-type :convention :stdcall) winbool  (|pSecurityDescriptor| psecurity_descriptor) (|PrincipalSelfSid| psid) (|ClientToken| handle) (|DesiredAccess| dword) (|ObjectTypeList| pobject_type_list) (|ObjectTypeListLength| dword) (|GenericMapping| pgeneric_mapping) (|PrivilegeSet| pprivilege_set) (|PrivilegeSetLength| lpdword) (|GrantedAccess| lpdword) (|AccessStatus| lpbool))
(defcfun ("AccessCheckByTypeResultList" access-check-by-type-result-list :convention :stdcall) winbool  (|pSecurityDescriptor| psecurity_descriptor) (|PrincipalSelfSid| psid) (|ClientToken| handle) (|DesiredAccess| dword) (|ObjectTypeList| pobject_type_list) (|ObjectTypeListLength| dword) (|GenericMapping| pgeneric_mapping) (|PrivilegeSet| pprivilege_set) (|PrivilegeSetLength| lpdword) (|GrantedAccessList| lpdword) (|AccessStatusList| lpdword))
(defcfun ("OpenProcessToken" open-process-token :convention :stdcall) winbool  (|ProcessHandle| handle) (|DesiredAccess| dword) (|TokenHandle| phandle))
(defcfun ("OpenThreadToken" open-thread-token :convention :stdcall) winbool  (|ThreadHandle| handle) (|DesiredAccess| dword) (|OpenAsSelf| winbool) (|TokenHandle| phandle))
(defcfun ("GetTokenInformation" get-token-information :convention :stdcall) winbool  (|TokenHandle| handle) (|TokenInformationClass| token_information_class) (|TokenInformation| lpvoid) (|TokenInformationLength| dword) (|ReturnLength| pdword))
(defcfun ("SetTokenInformation" set-token-information :convention :stdcall) winbool  (|TokenHandle| handle) (|TokenInformationClass| token_information_class) (|TokenInformation| lpvoid) (|TokenInformationLength| dword))
(defcfun ("AdjustTokenPrivileges" adjust-token-privileges :convention :stdcall) winbool  (|TokenHandle| handle) (|DisableAllPrivileges| winbool) (|NewState| ptoken_privileges) (|BufferLength| dword) (|PreviousState| ptoken_privileges) (|ReturnLength| pdword))
(defcfun ("AdjustTokenGroups" adjust-token-groups :convention :stdcall) winbool  (|TokenHandle| handle) (|ResetToDefault| winbool) (|NewState| ptoken_groups) (|BufferLength| dword) (|PreviousState| ptoken_groups) (|ReturnLength| pdword))
(defcfun ("PrivilegeCheck" privilege-check :convention :stdcall) winbool  (|ClientToken| handle) (|RequiredPrivileges| pprivilege_set) (|pfResult| lpbool))
(defcfun ("AccessCheckAndAuditAlarmA" access-check-and-audit-alarm-a :convention :stdcall) winbool  (|SubsystemName| lpcstr) (|HandleId| lpvoid) (|ObjectTypeName| lpstr) (|ObjectName| lpstr) (|SecurityDescriptor| psecurity_descriptor) (|DesiredAccess| dword) (|GenericMapping| pgeneric_mapping) (|ObjectCreation| winbool) (|GrantedAccess| lpdword) (|AccessStatus| lpbool) (|pfGenerateOnClose| lpbool))
(defcfun ("AccessCheckAndAuditAlarmW" access-check-and-audit-alarm-w :convention :stdcall) winbool  (|SubsystemName| lpcwstr) (|HandleId| lpvoid) (|ObjectTypeName| lpwstr) (|ObjectName| lpwstr) (|SecurityDescriptor| psecurity_descriptor) (|DesiredAccess| dword) (|GenericMapping| pgeneric_mapping) (|ObjectCreation| winbool) (|GrantedAccess| lpdword) (|AccessStatus| lpbool) (|pfGenerateOnClose| lpbool))
(defcfun ("AccessCheckByTypeAndAuditAlarmA" access-check-by-type-and-audit-alarm-a :convention :stdcall) winbool  (|SubsystemName| lpcstr) (|HandleId| lpvoid) (|ObjectTypeName| lpcstr) (|ObjectName| lpcstr) (|SecurityDescriptor| psecurity_descriptor) (|PrincipalSelfSid| psid) (|DesiredAccess| dword) (|AuditType| audit_event_type) (|Flags| dword) (|ObjectTypeList| pobject_type_list) (|ObjectTypeListLength| dword) (|GenericMapping| pgeneric_mapping) (|ObjectCreation| winbool) (|GrantedAccess| lpdword) (|AccessStatus| lpbool) (|pfGenerateOnClose| lpbool))
(defcfun ("AccessCheckByTypeAndAuditAlarmW" access-check-by-type-and-audit-alarm-w :convention :stdcall) winbool  (|SubsystemName| lpcwstr) (|HandleId| lpvoid) (|ObjectTypeName| lpcwstr) (|ObjectName| lpcwstr) (|SecurityDescriptor| psecurity_descriptor) (|PrincipalSelfSid| psid) (|DesiredAccess| dword) (|AuditType| audit_event_type) (|Flags| dword) (|ObjectTypeList| pobject_type_list) (|ObjectTypeListLength| dword) (|GenericMapping| pgeneric_mapping) (|ObjectCreation| winbool) (|GrantedAccess| lpdword) (|AccessStatus| lpbool) (|pfGenerateOnClose| lpbool))
(defcfun ("AccessCheckByTypeResultListAndAuditAlarmA" access-check-by-type-result-list-and-audit-alarm-a :convention :stdcall) winbool  (|SubsystemName| lpcstr) (|HandleId| lpvoid) (|ObjectTypeName| lpcstr) (|ObjectName| lpcstr) (|SecurityDescriptor| psecurity_descriptor) (|PrincipalSelfSid| psid) (|DesiredAccess| dword) (|AuditType| audit_event_type) (|Flags| dword) (|ObjectTypeList| pobject_type_list) (|ObjectTypeListLength| dword) (|GenericMapping| pgeneric_mapping) (|ObjectCreation| winbool) (|GrantedAccess| lpdword) (|AccessStatusList| lpdword) (|pfGenerateOnClose| lpbool))
(defcfun ("AccessCheckByTypeResultListAndAuditAlarmW" access-check-by-type-result-list-and-audit-alarm-w :convention :stdcall) winbool  (|SubsystemName| lpcwstr) (|HandleId| lpvoid) (|ObjectTypeName| lpcwstr) (|ObjectName| lpcwstr) (|SecurityDescriptor| psecurity_descriptor) (|PrincipalSelfSid| psid) (|DesiredAccess| dword) (|AuditType| audit_event_type) (|Flags| dword) (|ObjectTypeList| pobject_type_list) (|ObjectTypeListLength| dword) (|GenericMapping| pgeneric_mapping) (|ObjectCreation| winbool) (|GrantedAccess| lpdword) (|AccessStatusList| lpdword) (|pfGenerateOnClose| lpbool))
(defcfun ("AccessCheckByTypeResultListAndAuditAlarmByHandleA" access-check-by-type-result-list-and-audit-alarm-by-handle-a :convention :stdcall) winbool  (|SubsystemName| lpcstr) (|HandleId| lpvoid) (|ClientToken| handle) (|ObjectTypeName| lpcstr) (|ObjectName| lpcstr) (|SecurityDescriptor| psecurity_descriptor) (|PrincipalSelfSid| psid) (|DesiredAccess| dword) (|AuditType| audit_event_type) (|Flags| dword) (|ObjectTypeList| pobject_type_list) (|ObjectTypeListLength| dword) (|GenericMapping| pgeneric_mapping) (|ObjectCreation| winbool) (|GrantedAccess| lpdword) (|AccessStatusList| lpdword) (|pfGenerateOnClose| lpbool))
(defcfun ("AccessCheckByTypeResultListAndAuditAlarmByHandleW" access-check-by-type-result-list-and-audit-alarm-by-handle-w :convention :stdcall) winbool  (|SubsystemName| lpcwstr) (|HandleId| lpvoid) (|ClientToken| handle) (|ObjectTypeName| lpcwstr) (|ObjectName| lpcwstr) (|SecurityDescriptor| psecurity_descriptor) (|PrincipalSelfSid| psid) (|DesiredAccess| dword) (|AuditType| audit_event_type) (|Flags| dword) (|ObjectTypeList| pobject_type_list) (|ObjectTypeListLength| dword) (|GenericMapping| pgeneric_mapping) (|ObjectCreation| winbool) (|GrantedAccess| lpdword) (|AccessStatusList| lpdword) (|pfGenerateOnClose| lpbool))
(defcfun ("ObjectOpenAuditAlarmA" object-open-audit-alarm-a :convention :stdcall) winbool  (|SubsystemName| lpcstr) (|HandleId| lpvoid) (|ObjectTypeName| lpstr) (|ObjectName| lpstr) (|pSecurityDescriptor| psecurity_descriptor) (|ClientToken| handle) (|DesiredAccess| dword) (|GrantedAccess| dword) (|Privileges| pprivilege_set) (|ObjectCreation| winbool) (|AccessGranted| winbool) (|GenerateOnClose| lpbool))
(defcfun ("ObjectOpenAuditAlarmW" object-open-audit-alarm-w :convention :stdcall) winbool  (|SubsystemName| lpcwstr) (|HandleId| lpvoid) (|ObjectTypeName| lpwstr) (|ObjectName| lpwstr) (|pSecurityDescriptor| psecurity_descriptor) (|ClientToken| handle) (|DesiredAccess| dword) (|GrantedAccess| dword) (|Privileges| pprivilege_set) (|ObjectCreation| winbool) (|AccessGranted| winbool) (|GenerateOnClose| lpbool))
(defcfun ("ObjectPrivilegeAuditAlarmA" object-privilege-audit-alarm-a :convention :stdcall) winbool  (|SubsystemName| lpcstr) (|HandleId| lpvoid) (|ClientToken| handle) (|DesiredAccess| dword) (|Privileges| pprivilege_set) (|AccessGranted| winbool))
(defcfun ("ObjectPrivilegeAuditAlarmW" object-privilege-audit-alarm-w :convention :stdcall) winbool  (|SubsystemName| lpcwstr) (|HandleId| lpvoid) (|ClientToken| handle) (|DesiredAccess| dword) (|Privileges| pprivilege_set) (|AccessGranted| winbool))
(defcfun ("ObjectCloseAuditAlarmA" object-close-audit-alarm-a :convention :stdcall) winbool  (|SubsystemName| lpcstr) (|HandleId| lpvoid) (|GenerateOnClose| winbool))
(defcfun ("ObjectCloseAuditAlarmW" object-close-audit-alarm-w :convention :stdcall) winbool  (|SubsystemName| lpcwstr) (|HandleId| lpvoid) (|GenerateOnClose| winbool))
(defcfun ("ObjectDeleteAuditAlarmA" object-delete-audit-alarm-a :convention :stdcall) winbool  (|SubsystemName| lpcstr) (|HandleId| lpvoid) (|GenerateOnClose| winbool))
(defcfun ("ObjectDeleteAuditAlarmW" object-delete-audit-alarm-w :convention :stdcall) winbool  (|SubsystemName| lpcwstr) (|HandleId| lpvoid) (|GenerateOnClose| winbool))
(defcfun ("PrivilegedServiceAuditAlarmA" privileged-service-audit-alarm-a :convention :stdcall) winbool  (|SubsystemName| lpcstr) (|ServiceName| lpcstr) (|ClientToken| handle) (|Privileges| pprivilege_set) (|AccessGranted| winbool))
(defcfun ("PrivilegedServiceAuditAlarmW" privileged-service-audit-alarm-w :convention :stdcall) winbool  (|SubsystemName| lpcwstr) (|ServiceName| lpcwstr) (|ClientToken| handle) (|Privileges| pprivilege_set) (|AccessGranted| winbool))
(defcfun ("IsWellKnownSid" is-well-known-sid :convention :stdcall) winbool  (|pSid| psid) (|WellKnownSidType| well_known_sid_type))
(defcfun ("CreateWellKnownSid" create-well-known-sid :convention :stdcall) winbool  (|WellKnownSidType| well_known_sid_type) (|DomainSid| psid) (|pSid| psid) (|cbSid| :pointer))
(defcfun ("EqualDomainSid" equal-domain-sid :convention :stdcall) winbool  (|pSid1| psid) (|pSid2| psid) (|pfEqual| :pointer))
(defcfun ("GetWindowsAccountDomainSid" get-windows-account-domain-sid :convention :stdcall) winbool  (|pSid| psid) (|pDomainSid| psid) (|cbDomainSid| :pointer))
(defcfun ("IsValidSid" is-valid-sid :convention :stdcall) winbool  (|pSid| psid))
(defcfun ("EqualSid" equal-sid :convention :stdcall) winbool  (|pSid1| psid) (|pSid2| psid))
(defcfun ("EqualPrefixSid" equal-prefix-sid :convention :stdcall) winbool  (|pSid1| psid) (|pSid2| psid))
(defcfun ("GetSidLengthRequired" get-sid-length-required :convention :stdcall) dword  (|nSubAuthorityCount| uchar))
(defcfun ("AllocateAndInitializeSid" allocate-and-initialize-sid :convention :stdcall) winbool  (|pIdentifierAuthority| psid_identifier_authority) (|nSubAuthorityCount| byte) (|nSubAuthority0| dword) (|nSubAuthority1| dword) (|nSubAuthority2| dword) (|nSubAuthority3| dword) (|nSubAuthority4| dword) (|nSubAuthority5| dword) (|nSubAuthority6| dword) (|nSubAuthority7| dword) (|pSid| :pointer))
(defcfun ("FreeSid" free-sid :convention :stdcall) pvoid  (|pSid| psid))
(defcfun ("InitializeSid" initialize-sid :convention :stdcall) winbool  (|Sid| psid) (|pIdentifierAuthority| psid_identifier_authority) (|nSubAuthorityCount| byte))
(defcfun ("GetSidIdentifierAuthority" get-sid-identifier-authority :convention :stdcall) psid_identifier_authority  (|pSid| psid))
(defcfun ("GetSidSubAuthority" get-sid-sub-authority :convention :stdcall) pdword  (|pSid| psid) (|nSubAuthority| dword))
(defcfun ("GetSidSubAuthorityCount" get-sid-sub-authority-count :convention :stdcall) puchar  (|pSid| psid))
(defcfun ("GetLengthSid" get-length-sid :convention :stdcall) dword  (|pSid| psid))
(defcfun ("CopySid" copy-sid :convention :stdcall) winbool  (|nDestinationSidLength| dword) (|pDestinationSid| psid) (|pSourceSid| psid))
(defcfun ("AreAllAccessesGranted" are-all-accesses-granted :convention :stdcall) winbool  (|GrantedAccess| dword) (|DesiredAccess| dword))
(defcfun ("AreAnyAccessesGranted" are-any-accesses-granted :convention :stdcall) winbool  (|GrantedAccess| dword) (|DesiredAccess| dword))
(defcfun ("MapGenericMask" map-generic-mask :convention :stdcall) :void  (|AccessMask| pdword) (|GenericMapping| pgeneric_mapping))
(defcfun ("IsValidAcl" is-valid-acl :convention :stdcall) winbool  (|pAcl| pacl))
(defcfun ("InitializeAcl" initialize-acl :convention :stdcall) winbool  (|pAcl| pacl) (|nAclLength| dword) (|dwAclRevision| dword))
(defcfun ("GetAclInformation" get-acl-information :convention :stdcall) winbool  (|pAcl| pacl) (|pAclInformation| lpvoid) (|nAclInformationLength| dword) (|dwAclInformationClass| acl_information_class))
(defcfun ("SetAclInformation" set-acl-information :convention :stdcall) winbool  (|pAcl| pacl) (|pAclInformation| lpvoid) (|nAclInformationLength| dword) (|dwAclInformationClass| acl_information_class))
(defcfun ("AddAce" add-ace :convention :stdcall) winbool  (|pAcl| pacl) (|dwAceRevision| dword) (|dwStartingAceIndex| dword) (|pAceList| lpvoid) (|nAceListLength| dword))
(defcfun ("DeleteAce" delete-ace :convention :stdcall) winbool  (|pAcl| pacl) (|dwAceIndex| dword))
(defcfun ("GetAce" get-ace :convention :stdcall) winbool  (|pAcl| pacl) (|dwAceIndex| dword) (|pAce| :pointer))
(defcfun ("AddAccessAllowedAce" add-access-allowed-ace :convention :stdcall) winbool  (|pAcl| pacl) (|dwAceRevision| dword) (|AccessMask| dword) (|pSid| psid))
(defcfun ("AddAccessAllowedAceEx" add-access-allowed-ace-ex :convention :stdcall) winbool  (|pAcl| pacl) (|dwAceRevision| dword) (|AceFlags| dword) (|AccessMask| dword) (|pSid| psid))
(defcfun ("AddAccessDeniedAce" add-access-denied-ace :convention :stdcall) winbool  (|pAcl| pacl) (|dwAceRevision| dword) (|AccessMask| dword) (|pSid| psid))
(defcfun ("AddAccessDeniedAceEx" add-access-denied-ace-ex :convention :stdcall) winbool  (|pAcl| pacl) (|dwAceRevision| dword) (|AceFlags| dword) (|AccessMask| dword) (|pSid| psid))
(defcfun ("AddAuditAccessAce" add-audit-access-ace :convention :stdcall) winbool  (|pAcl| pacl) (|dwAceRevision| dword) (|dwAccessMask| dword) (|pSid| psid) (|bAuditSuccess| winbool) (|bAuditFailure| winbool))
(defcfun ("AddAuditAccessAceEx" add-audit-access-ace-ex :convention :stdcall) winbool  (|pAcl| pacl) (|dwAceRevision| dword) (|AceFlags| dword) (|dwAccessMask| dword) (|pSid| psid) (|bAuditSuccess| winbool) (|bAuditFailure| winbool))
(defcfun ("AddAccessAllowedObjectAce" add-access-allowed-object-ace :convention :stdcall) winbool  (|pAcl| pacl) (|dwAceRevision| dword) (|AceFlags| dword) (|AccessMask| dword) (|ObjectTypeGuid| :pointer) (|InheritedObjectTypeGuid| :pointer) (|pSid| psid))
(defcfun ("AddAccessDeniedObjectAce" add-access-denied-object-ace :convention :stdcall) winbool  (|pAcl| pacl) (|dwAceRevision| dword) (|AceFlags| dword) (|AccessMask| dword) (|ObjectTypeGuid| :pointer) (|InheritedObjectTypeGuid| :pointer) (|pSid| psid))
(defcfun ("AddAuditAccessObjectAce" add-audit-access-object-ace :convention :stdcall) winbool  (|pAcl| pacl) (|dwAceRevision| dword) (|AceFlags| dword) (|AccessMask| dword) (|ObjectTypeGuid| :pointer) (|InheritedObjectTypeGuid| :pointer) (|pSid| psid) (|bAuditSuccess| winbool) (|bAuditFailure| winbool))
(defcfun ("FindFirstFreeAce" find-first-free-ace :convention :stdcall) winbool  (|pAcl| pacl) (|pAce| :pointer))
(defcfun ("InitializeSecurityDescriptor" initialize-security-descriptor :convention :stdcall) winbool  (|pSecurityDescriptor| psecurity_descriptor) (|dwRevision| dword))
(defcfun ("IsValidSecurityDescriptor" is-valid-security-descriptor :convention :stdcall) winbool  (|pSecurityDescriptor| psecurity_descriptor))
(defcfun ("GetSecurityDescriptorLength" get-security-descriptor-length :convention :stdcall) dword  (|pSecurityDescriptor| psecurity_descriptor))
(defcfun ("GetSecurityDescriptorControl" get-security-descriptor-control :convention :stdcall) winbool  (|pSecurityDescriptor| psecurity_descriptor) (|pControl| psecurity_descriptor_control) (|lpdwRevision| lpdword))
(defcfun ("SetSecurityDescriptorControl" set-security-descriptor-control :convention :stdcall) winbool  (|pSecurityDescriptor| psecurity_descriptor) (|ControlBitsOfInterest| security_descriptor_control) (|ControlBitsToSet| security_descriptor_control))
(defcfun ("SetSecurityDescriptorDacl" set-security-descriptor-dacl :convention :stdcall) winbool  (|pSecurityDescriptor| psecurity_descriptor) (|bDaclPresent| winbool) (|pDacl| pacl) (|bDaclDefaulted| winbool))
(defcfun ("GetSecurityDescriptorDacl" get-security-descriptor-dacl :convention :stdcall) winbool  (|pSecurityDescriptor| psecurity_descriptor) (|lpbDaclPresent| lpbool) (|pDacl| :pointer) (|lpbDaclDefaulted| lpbool))
(defcfun ("SetSecurityDescriptorSacl" set-security-descriptor-sacl :convention :stdcall) winbool  (|pSecurityDescriptor| psecurity_descriptor) (|bSaclPresent| winbool) (|pSacl| pacl) (|bSaclDefaulted| winbool))
(defcfun ("GetSecurityDescriptorSacl" get-security-descriptor-sacl :convention :stdcall) winbool  (|pSecurityDescriptor| psecurity_descriptor) (|lpbSaclPresent| lpbool) (|pSacl| :pointer) (|lpbSaclDefaulted| lpbool))
(defcfun ("SetSecurityDescriptorOwner" set-security-descriptor-owner :convention :stdcall) winbool  (|pSecurityDescriptor| psecurity_descriptor) (|pOwner| psid) (|bOwnerDefaulted| winbool))
(defcfun ("GetSecurityDescriptorOwner" get-security-descriptor-owner :convention :stdcall) winbool  (|pSecurityDescriptor| psecurity_descriptor) (|pOwner| :pointer) (|lpbOwnerDefaulted| lpbool))
(defcfun ("SetSecurityDescriptorGroup" set-security-descriptor-group :convention :stdcall) winbool  (|pSecurityDescriptor| psecurity_descriptor) (|pGroup| psid) (|bGroupDefaulted| winbool))
(defcfun ("GetSecurityDescriptorGroup" get-security-descriptor-group :convention :stdcall) winbool  (|pSecurityDescriptor| psecurity_descriptor) (|pGroup| :pointer) (|lpbGroupDefaulted| lpbool))
(defcfun ("SetSecurityDescriptorRMControl" set-security-descriptor-rm-control :convention :stdcall) dword  (|SecurityDescriptor| psecurity_descriptor) (|RMControl| puchar))
(defcfun ("GetSecurityDescriptorRMControl" get-security-descriptor-rm-control :convention :stdcall) dword  (|SecurityDescriptor| psecurity_descriptor) (|RMControl| puchar))
(defcfun ("CreatePrivateObjectSecurity" create-private-object-security :convention :stdcall) winbool  (|ParentDescriptor| psecurity_descriptor) (|CreatorDescriptor| psecurity_descriptor) (|NewDescriptor| :pointer) (|IsDirectoryObject| winbool) (|Token| handle) (|GenericMapping| pgeneric_mapping))
(defcfun ("ConvertToAutoInheritPrivateObjectSecurity" convert-to-auto-inherit-private-object-security :convention :stdcall) winbool  (|ParentDescriptor| psecurity_descriptor) (|CurrentSecurityDescriptor| psecurity_descriptor) (|NewSecurityDescriptor| :pointer) (|ObjectType| :pointer) (|IsDirectoryObject| boolean) (|GenericMapping| pgeneric_mapping))
(defcfun ("CreatePrivateObjectSecurityEx" create-private-object-security-ex :convention :stdcall) winbool  (|ParentDescriptor| psecurity_descriptor) (|CreatorDescriptor| psecurity_descriptor) (|NewDescriptor| :pointer) (|ObjectType| :pointer) (|IsContainerObject| winbool) (|AutoInheritFlags| ulong) (|Token| handle) (|GenericMapping| pgeneric_mapping))
(defcfun ("CreatePrivateObjectSecurityWithMultipleInheritance" create-private-object-security-with-multiple-inheritance :convention :stdcall) winbool  (|ParentDescriptor| psecurity_descriptor) (|CreatorDescriptor| psecurity_descriptor) (|NewDescriptor| :pointer) (|ObjectTypes| :pointer) (|GuidCount| ulong) (|IsContainerObject| winbool) (|AutoInheritFlags| ulong) (|Token| handle) (|GenericMapping| pgeneric_mapping))
(defcfun ("SetPrivateObjectSecurity" set-private-object-security :convention :stdcall) winbool  (|SecurityInformation| security_information) (|ModificationDescriptor| psecurity_descriptor) (|ObjectsSecurityDescriptor| :pointer) (|GenericMapping| pgeneric_mapping) (|Token| handle))
(defcfun ("SetPrivateObjectSecurityEx" set-private-object-security-ex :convention :stdcall) winbool  (|SecurityInformation| security_information) (|ModificationDescriptor| psecurity_descriptor) (|ObjectsSecurityDescriptor| :pointer) (|AutoInheritFlags| ulong) (|GenericMapping| pgeneric_mapping) (|Token| handle))
(defcfun ("GetPrivateObjectSecurity" get-private-object-security :convention :stdcall) winbool  (|ObjectDescriptor| psecurity_descriptor) (|SecurityInformation| security_information) (|ResultantDescriptor| psecurity_descriptor) (|DescriptorLength| dword) (|ReturnLength| pdword))
(defcfun ("DestroyPrivateObjectSecurity" destroy-private-object-security :convention :stdcall) winbool  (|ObjectDescriptor| :pointer))
(defcfun ("MakeSelfRelativeSD" make-self-relative-sd :convention :stdcall) winbool  (|pAbsoluteSecurityDescriptor| psecurity_descriptor) (|pSelfRelativeSecurityDescriptor| psecurity_descriptor) (|lpdwBufferLength| lpdword))
(defcfun ("MakeAbsoluteSD" make-absolute-sd :convention :stdcall) winbool  (|pSelfRelativeSecurityDescriptor| psecurity_descriptor) (|pAbsoluteSecurityDescriptor| psecurity_descriptor) (|lpdwAbsoluteSecurityDescriptorSize| lpdword) (|pDacl| pacl) (|lpdwDaclSize| lpdword) (|pSacl| pacl) (|lpdwSaclSize| lpdword) (|pOwner| psid) (|lpdwOwnerSize| lpdword) (|pPrimaryGroup| psid) (|lpdwPrimaryGroupSize| lpdword))
(defcfun ("MakeAbsoluteSD2" make-absolute-sd-2 :convention :stdcall) winbool  (|pSelfRelativeSecurityDescriptor| psecurity_descriptor) (|lpdwBufferSize| lpdword))
(defcfun ("SetFileSecurityA" set-file-security-a :convention :stdcall) winbool  (|lpFileName| lpcstr) (|SecurityInformation| security_information) (|pSecurityDescriptor| psecurity_descriptor))
(defcfun ("SetFileSecurityW" set-file-security-w :convention :stdcall) winbool  (|lpFileName| lpcwstr) (|SecurityInformation| security_information) (|pSecurityDescriptor| psecurity_descriptor))
(defcfun ("GetFileSecurityA" get-file-security-a :convention :stdcall) winbool  (|lpFileName| lpcstr) (|RequestedInformation| security_information) (|pSecurityDescriptor| psecurity_descriptor) (|nLength| dword) (|lpnLengthNeeded| lpdword))
(defcfun ("GetFileSecurityW" get-file-security-w :convention :stdcall) winbool  (|lpFileName| lpcwstr) (|RequestedInformation| security_information) (|pSecurityDescriptor| psecurity_descriptor) (|nLength| dword) (|lpnLengthNeeded| lpdword))
(defcfun ("SetKernelObjectSecurity" set-kernel-object-security :convention :stdcall) winbool  (|Handle| handle) (|SecurityInformation| security_information) (|SecurityDescriptor| psecurity_descriptor))
(defcfun ("FindFirstChangeNotificationA" find-first-change-notification-a :convention :stdcall) handle  (|lpPathName| lpcstr) (|bWatchSubtree| winbool) (|dwNotifyFilter| dword))
(defcfun ("FindFirstChangeNotificationW" find-first-change-notification-w :convention :stdcall) handle  (|lpPathName| lpcwstr) (|bWatchSubtree| winbool) (|dwNotifyFilter| dword))
(defcfun ("FindNextChangeNotification" find-next-change-notification :convention :stdcall) winbool  (|hChangeHandle| handle))
(defcfun ("FindCloseChangeNotification" find-close-change-notification :convention :stdcall) winbool  (|hChangeHandle| handle))
(defcfun ("ReadDirectoryChangesW" read-directory-changes-w :convention :stdcall) winbool  (|hDirectory| handle) (|lpBuffer| lpvoid) (|nBufferLength| dword) (|bWatchSubtree| winbool) (|dwNotifyFilter| dword) (|lpBytesReturned| lpdword) (|lpOverlapped| lpoverlapped) (|lpCompletionRoutine| lpoverlapped_completion_routine))
(defcfun ("VirtualLock" virtual-lock :convention :stdcall) winbool  (|lpAddress| lpvoid) (|dwSize| size_t))
(defcfun ("VirtualUnlock" virtual-unlock :convention :stdcall) winbool  (|lpAddress| lpvoid) (|dwSize| size_t))
(defcfun ("MapViewOfFileEx" map-view-of-file-ex :convention :stdcall) lpvoid  (|hFileMappingObject| handle) (|dwDesiredAccess| dword) (|dwFileOffsetHigh| dword) (|dwFileOffsetLow| dword) (|dwNumberOfBytesToMap| size_t) (|lpBaseAddress| lpvoid))
(defcfun ("SetPriorityClass" set-priority-class :convention :stdcall) winbool  (|hProcess| handle) (|dwPriorityClass| dword))
(defcfun ("GetPriorityClass" get-priority-class :convention :stdcall) dword  (|hProcess| handle))
(defcfun ("IsBadReadPtr" is-bad-read-ptr :convention :stdcall) winbool  (|lp| :pointer) (|ucb| uint_ptr))
(defcfun ("IsBadWritePtr" is-bad-write-ptr :convention :stdcall) winbool  (|lp| lpvoid) (|ucb| uint_ptr))
(defcfun ("IsBadHugeReadPtr" is-bad-huge-read-ptr :convention :stdcall) winbool  (|lp| :pointer) (|ucb| uint_ptr))
(defcfun ("IsBadHugeWritePtr" is-bad-huge-write-ptr :convention :stdcall) winbool  (|lp| lpvoid) (|ucb| uint_ptr))
(defcfun ("IsBadCodePtr" is-bad-code-ptr :convention :stdcall) winbool  (|lpfn| farproc))
(defcfun ("IsBadStringPtrA" is-bad-string-ptr-a :convention :stdcall) winbool  (|lpsz| lpcstr) (|ucchMax| uint_ptr))
(defcfun ("IsBadStringPtrW" is-bad-string-ptr-w :convention :stdcall) winbool  (|lpsz| lpcwstr) (|ucchMax| uint_ptr))
(defcfun ("LookupAccountSidA" lookup-account-sid-a :convention :stdcall) winbool  (|lpSystemName| lpcstr) (|Sid| psid) (|Name| lpstr) (|cchName| lpdword) (|ReferencedDomainName| lpstr) (|cchReferencedDomainName| lpdword) (|peUse| psid_name_use))
(defcfun ("LookupAccountSidW" lookup-account-sid-w :convention :stdcall) winbool  (|lpSystemName| lpcwstr) (|Sid| psid) (|Name| lpwstr) (|cchName| lpdword) (|ReferencedDomainName| lpwstr) (|cchReferencedDomainName| lpdword) (|peUse| psid_name_use))
(defcfun ("LookupAccountNameA" lookup-account-name-a :convention :stdcall) winbool  (|lpSystemName| lpcstr) (|lpAccountName| lpcstr) (|Sid| psid) (|cbSid| lpdword) (|ReferencedDomainName| lpstr) (|cchReferencedDomainName| lpdword) (|peUse| psid_name_use))
(defcfun ("LookupAccountNameW" lookup-account-name-w :convention :stdcall) winbool  (|lpSystemName| lpcwstr) (|lpAccountName| lpcwstr) (|Sid| psid) (|cbSid| lpdword) (|ReferencedDomainName| lpwstr) (|cchReferencedDomainName| lpdword) (|peUse| psid_name_use))
(defcfun ("LookupPrivilegeValueA" lookup-privilege-value-a :convention :stdcall) winbool  (|lpSystemName| lpcstr) (|lpName| lpcstr) (|lpLuid| pluid))
(defcfun ("LookupPrivilegeValueW" lookup-privilege-value-w :convention :stdcall) winbool  (|lpSystemName| lpcwstr) (|lpName| lpcwstr) (|lpLuid| pluid))
(defcfun ("LookupPrivilegeNameA" lookup-privilege-name-a :convention :stdcall) winbool  (|lpSystemName| lpcstr) (|lpLuid| pluid) (|lpName| lpstr) (|cchName| lpdword))
(defcfun ("LookupPrivilegeNameW" lookup-privilege-name-w :convention :stdcall) winbool  (|lpSystemName| lpcwstr) (|lpLuid| pluid) (|lpName| lpwstr) (|cchName| lpdword))
(defcfun ("LookupPrivilegeDisplayNameA" lookup-privilege-display-name-a :convention :stdcall) winbool  (|lpSystemName| lpcstr) (|lpName| lpcstr) (|lpDisplayName| lpstr) (|cchDisplayName| lpdword) (|lpLanguageId| lpdword))
(defcfun ("LookupPrivilegeDisplayNameW" lookup-privilege-display-name-w :convention :stdcall) winbool  (|lpSystemName| lpcwstr) (|lpName| lpcwstr) (|lpDisplayName| lpwstr) (|cchDisplayName| lpdword) (|lpLanguageId| lpdword))
(defcfun ("AllocateLocallyUniqueId" allocate-locally-unique-id :convention :stdcall) winbool  (|Luid| pluid))
(defcfun ("BuildCommDCBA" build-comm-dcba :convention :stdcall) winbool  (|lpDef| lpcstr) (|lpDCB| lpdcb))
(defcfun ("BuildCommDCBW" build-comm-dcbw :convention :stdcall) winbool  (|lpDef| lpcwstr) (|lpDCB| lpdcb))
(defcfun ("BuildCommDCBAndTimeoutsA" build-comm-dcb-and-timeouts-a :convention :stdcall) winbool  (|lpDef| lpcstr) (|lpDCB| lpdcb) (|lpCommTimeouts| lpcommtimeouts))
(defcfun ("BuildCommDCBAndTimeoutsW" build-comm-dcb-and-timeouts-w :convention :stdcall) winbool  (|lpDef| lpcwstr) (|lpDCB| lpdcb) (|lpCommTimeouts| lpcommtimeouts))
(defcfun ("CommConfigDialogA" comm-config-dialog-a :convention :stdcall) winbool  (|lpszName| lpcstr) (|hWnd| hwnd) (|lpCC| lpcommconfig))
(defcfun ("CommConfigDialogW" comm-config-dialog-w :convention :stdcall) winbool  (|lpszName| lpcwstr) (|hWnd| hwnd) (|lpCC| lpcommconfig))
(defcfun ("GetDefaultCommConfigA" get-default-comm-config-a :convention :stdcall) winbool  (|lpszName| lpcstr) (|lpCC| lpcommconfig) (|lpdwSize| lpdword))
(defcfun ("GetDefaultCommConfigW" get-default-comm-config-w :convention :stdcall) winbool  (|lpszName| lpcwstr) (|lpCC| lpcommconfig) (|lpdwSize| lpdword))
(defcfun ("SetDefaultCommConfigA" set-default-comm-config-a :convention :stdcall) winbool  (|lpszName| lpcstr) (|lpCC| lpcommconfig) (|dwSize| dword))
(defcfun ("SetDefaultCommConfigW" set-default-comm-config-w :convention :stdcall) winbool  (|lpszName| lpcwstr) (|lpCC| lpcommconfig) (|dwSize| dword))
(defcfun ("GetComputerNameA" get-computer-name-a :convention :stdcall) winbool  (|lpBuffer| lpstr) (|nSize| lpdword))
(defcfun ("GetComputerNameW" get-computer-name-w :convention :stdcall) winbool  (|lpBuffer| lpwstr) (|nSize| lpdword))
(defcfun ("SetComputerNameA" set-computer-name-a :convention :stdcall) winbool  (|lpComputerName| lpcstr))
(defcfun ("SetComputerNameW" set-computer-name-w :convention :stdcall) winbool  (|lpComputerName| lpcwstr))
(defcfun ("GetComputerNameExA" get-computer-name-ex-a :convention :stdcall) winbool  (|NameType| computer_name_format) (|lpBuffer| lpstr) (|nSize| lpdword))
(defcfun ("GetComputerNameExW" get-computer-name-ex-w :convention :stdcall) winbool  (|NameType| computer_name_format) (|lpBuffer| lpwstr) (|nSize| lpdword))
(defcfun ("SetComputerNameExA" set-computer-name-ex-a :convention :stdcall) winbool  (|NameType| computer_name_format) (|lpBuffer| lpcstr))
(defcfun ("SetComputerNameExW" set-computer-name-ex-w :convention :stdcall) winbool  (|NameType| computer_name_format) (|lpBuffer| lpcwstr))
(defcfun ("DnsHostnameToComputerNameA" dns-hostname-to-computer-name-a :convention :stdcall) winbool  (|Hostname| lpcstr) (|ComputerName| lpstr) (|nSize| lpdword))
(defcfun ("DnsHostnameToComputerNameW" dns-hostname-to-computer-name-w :convention :stdcall) winbool  (|Hostname| lpcwstr) (|ComputerName| lpwstr) (|nSize| lpdword))
(defcfun ("GetUserNameA" get-user-name-a :convention :stdcall) winbool  (|lpBuffer| lpstr) (|pcbBuffer| lpdword))
(defcfun ("GetUserNameW" get-user-name-w :convention :stdcall) winbool  (|lpBuffer| lpwstr) (|pcbBuffer| lpdword))
(defcfun ("LogonUserA" logon-user-a :convention :stdcall) winbool  (|lpszUsername| lpcstr) (|lpszDomain| lpcstr) (|lpszPassword| lpcstr) (|dwLogonType| dword) (|dwLogonProvider| dword) (|phToken| phandle))
(defcfun ("LogonUserW" logon-user-w :convention :stdcall) winbool  (|lpszUsername| lpcwstr) (|lpszDomain| lpcwstr) (|lpszPassword| lpcwstr) (|dwLogonType| dword) (|dwLogonProvider| dword) (|phToken| phandle))
(defcfun ("LogonUserExA" logon-user-ex-a :convention :stdcall) winbool  (|lpszUsername| lpcstr) (|lpszDomain| lpcstr) (|lpszPassword| lpcstr) (|dwLogonType| dword) (|dwLogonProvider| dword) (|phToken| phandle) (|ppLogonSid| :pointer) (|ppProfileBuffer| :pointer) (|pdwProfileLength| lpdword) (|pQuotaLimits| pquota_limits))
(defcfun ("LogonUserExW" logon-user-ex-w :convention :stdcall) winbool  (|lpszUsername| lpcwstr) (|lpszDomain| lpcwstr) (|lpszPassword| lpcwstr) (|dwLogonType| dword) (|dwLogonProvider| dword) (|phToken| phandle) (|ppLogonSid| :pointer) (|ppProfileBuffer| :pointer) (|pdwProfileLength| lpdword) (|pQuotaLimits| pquota_limits))
(defcfun ("ImpersonateLoggedOnUser" impersonate-logged-on-user :convention :stdcall) winbool  (|hToken| handle))
(defcfun ("CreateProcessAsUserA" create-process-as-user-a :convention :stdcall) winbool  (|hToken| handle) (|lpApplicationName| lpcstr) (|lpCommandLine| lpstr) (|lpProcessAttributes| lpsecurity_attributes) (|lpThreadAttributes| lpsecurity_attributes) (|bInheritHandles| winbool) (|dwCreationFlags| dword) (|lpEnvironment| lpvoid) (|lpCurrentDirectory| lpcstr) (|lpStartupInfo| lpstartupinfoa) (|lpProcessInformation| lpprocess_information))
(defcfun ("CreateProcessAsUserW" create-process-as-user-w :convention :stdcall) winbool  (|hToken| handle) (|lpApplicationName| lpcwstr) (|lpCommandLine| lpwstr) (|lpProcessAttributes| lpsecurity_attributes) (|lpThreadAttributes| lpsecurity_attributes) (|bInheritHandles| winbool) (|dwCreationFlags| dword) (|lpEnvironment| lpvoid) (|lpCurrentDirectory| lpcwstr) (|lpStartupInfo| lpstartupinfow) (|lpProcessInformation| lpprocess_information))
(defcfun ("CreateProcessWithLogonW" create-process-with-logon-w :convention :stdcall) winbool  (|lpUsername| lpcwstr) (|lpDomain| lpcwstr) (|lpPassword| lpcwstr) (|dwLogonFlags| dword) (|lpApplicationName| lpcwstr) (|lpCommandLine| lpwstr) (|dwCreationFlags| dword) (|lpEnvironment| lpvoid) (|lpCurrentDirectory| lpcwstr) (|lpStartupInfo| lpstartupinfow) (|lpProcessInformation| lpprocess_information))
(defcfun ("CreateProcessWithTokenW" create-process-with-token-w :convention :stdcall) winbool  (|hToken| handle) (|dwLogonFlags| dword) (|lpApplicationName| lpcwstr) (|lpCommandLine| lpwstr) (|dwCreationFlags| dword) (|lpEnvironment| lpvoid) (|lpCurrentDirectory| lpcwstr) (|lpStartupInfo| lpstartupinfow) (|lpProcessInformation| lpprocess_information))
(defcfun ("ImpersonateAnonymousToken" impersonate-anonymous-token :convention :stdcall) winbool  (|ThreadHandle| handle))
(defcfun ("DuplicateTokenEx" duplicate-token-ex :convention :stdcall) winbool  (|hExistingToken| handle) (|dwDesiredAccess| dword) (|lpTokenAttributes| lpsecurity_attributes) (|ImpersonationLevel| security_impersonation_level) (|TokenType| token_type) (|phNewToken| phandle))
(defcfun ("CreateRestrictedToken" create-restricted-token :convention :stdcall) winbool  (|ExistingTokenHandle| handle) (|Flags| dword) (|DisableSidCount| dword) (|SidsToDisable| psid_and_attributes) (|DeletePrivilegeCount| dword) (|PrivilegesToDelete| pluid_and_attributes) (|RestrictedSidCount| dword) (|SidsToRestrict| psid_and_attributes) (|NewTokenHandle| phandle))
(defcfun ("IsTokenRestricted" is-token-restricted :convention :stdcall) winbool  (|TokenHandle| handle))
(defcfun ("IsTokenUntrusted" is-token-untrusted :convention :stdcall) winbool  (|TokenHandle| handle))
(defcfun ("CheckTokenMembership" check-token-membership :convention :stdcall) winbool  (|TokenHandle| handle) (|SidToCheck| psid) (|IsMember| pbool))
(defcfun ("RegisterWaitForSingleObject" register-wait-for-single-object :convention :stdcall) winbool  (|phNewWaitObject| phandle) (|hObject| handle) (|Callback| waitortimercallback) (|Context| pvoid) (|dwMilliseconds| ulong) (|dwFlags| ulong))
(defcfun ("RegisterWaitForSingleObjectEx" register-wait-for-single-object-ex :convention :stdcall) handle  (|hObject| handle) (|Callback| waitortimercallback) (|Context| pvoid) (|dwMilliseconds| ulong) (|dwFlags| ulong))
(defcfun ("UnregisterWait" unregister-wait :convention :stdcall) winbool  (|WaitHandle| handle))
(defcfun ("UnregisterWaitEx" unregister-wait-ex :convention :stdcall) winbool  (|WaitHandle| handle) (|CompletionEvent| handle))
(defcfun ("QueueUserWorkItem" queue-user-work-item :convention :stdcall) winbool  (|Function| lpthread_start_routine) (|Context| pvoid) (|Flags| ulong))
(defcfun ("BindIoCompletionCallback" bind-io-completion-callback :convention :stdcall) winbool  (|FileHandle| handle) (|Function| lpoverlapped_completion_routine) (|Flags| ulong))
(defcfun ("CreateTimerQueue" create-timer-queue :convention :stdcall) handle )
(defcfun ("CreateTimerQueueTimer" create-timer-queue-timer :convention :stdcall) winbool  (|phNewTimer| phandle) (|TimerQueue| handle) (|Callback| waitortimercallback) (|Parameter| pvoid) (|DueTime| dword) (|Period| dword) (|Flags| ulong))
(defcfun ("ChangeTimerQueueTimer" change-timer-queue-timer :convention :stdcall) winbool  (|TimerQueue| handle) (|Timer| handle) (|DueTime| ulong) (|Period| ulong))
(defcfun ("DeleteTimerQueueTimer" delete-timer-queue-timer :convention :stdcall) winbool  (|TimerQueue| handle) (|Timer| handle) (|CompletionEvent| handle))
(defcfun ("DeleteTimerQueueEx" delete-timer-queue-ex :convention :stdcall) winbool  (|TimerQueue| handle) (|CompletionEvent| handle))
(defcfun ("SetTimerQueueTimer" set-timer-queue-timer :convention :stdcall) handle  (|TimerQueue| handle) (|Callback| waitortimercallback) (|Parameter| pvoid) (|DueTime| dword) (|Period| dword) (|PreferIo| winbool))
(defcfun ("CancelTimerQueueTimer" cancel-timer-queue-timer :convention :stdcall) winbool  (|TimerQueue| handle) (|Timer| handle))
(defcfun ("DeleteTimerQueue" delete-timer-queue :convention :stdcall) winbool  (|TimerQueue| handle))
(defcfun ("GetCurrentHwProfileA" get-current-hw-profile-a :convention :stdcall) winbool  (|lpHwProfileInfo| lphw_profile_infoa))
(defcfun ("GetCurrentHwProfileW" get-current-hw-profile-w :convention :stdcall) winbool  (|lpHwProfileInfo| lphw_profile_infow))
(defcfun ("QueryPerformanceCounter" query-performance-counter :convention :stdcall) winbool  (|lpPerformanceCount| :pointer))
(defcfun ("QueryPerformanceFrequency" query-performance-frequency :convention :stdcall) winbool  (|lpFrequency| :pointer))
(defcfun ("GetVersionExA" get-version-ex-a :convention :stdcall) winbool  (|lpVersionInformation| lposversioninfoa))
(defcfun ("GetVersionExW" get-version-ex-w :convention :stdcall) winbool  (|lpVersionInformation| lposversioninfow))
(defcfun ("VerifyVersionInfoA" verify-version-info-a :convention :stdcall) winbool  (|lpVersionInformation| lposversioninfoexa) (|dwTypeMask| dword) (|dwlConditionMask| dwordlong))
(defcfun ("VerifyVersionInfoW" verify-version-info-w :convention :stdcall) winbool  (|lpVersionInformation| lposversioninfoexw) (|dwTypeMask| dword) (|dwlConditionMask| dwordlong))
(defcfun ("GetSystemPowerStatus" get-system-power-status :convention :stdcall) winbool  (|lpSystemPowerStatus| lpsystem_power_status))
(defcfun ("SetSystemPowerState" set-system-power-state :convention :stdcall) winbool  (|fSuspend| winbool) (|fForce| winbool))
(defcfun ("AllocateUserPhysicalPages" allocate-user-physical-pages :convention :stdcall) winbool  (|hProcess| handle) (|NumberOfPages| pulong_ptr) (|PageArray| pulong_ptr))
(defcfun ("FreeUserPhysicalPages" free-user-physical-pages :convention :stdcall) winbool  (|hProcess| handle) (|NumberOfPages| pulong_ptr) (|PageArray| pulong_ptr))
(defcfun ("MapUserPhysicalPages" map-user-physical-pages :convention :stdcall) winbool  (|VirtualAddress| pvoid) (|NumberOfPages| ulong_ptr) (|PageArray| pulong_ptr))
(defcfun ("MapUserPhysicalPagesScatter" map-user-physical-pages-scatter :convention :stdcall) winbool  (|VirtualAddresses| :pointer) (|NumberOfPages| ulong_ptr) (|PageArray| pulong_ptr))
(defcfun ("CreateJobObjectA" create-job-object-a :convention :stdcall) handle  (|lpJobAttributes| lpsecurity_attributes) (|lpName| lpcstr))
(defcfun ("CreateJobObjectW" create-job-object-w :convention :stdcall) handle  (|lpJobAttributes| lpsecurity_attributes) (|lpName| lpcwstr))
(defcfun ("OpenJobObjectA" open-job-object-a :convention :stdcall) handle  (|dwDesiredAccess| dword) (|bInheritHandle| winbool) (|lpName| lpcstr))
(defcfun ("OpenJobObjectW" open-job-object-w :convention :stdcall) handle  (|dwDesiredAccess| dword) (|bInheritHandle| winbool) (|lpName| lpcwstr))
(defcfun ("AssignProcessToJobObject" assign-process-to-job-object :convention :stdcall) winbool  (|hJob| handle) (|hProcess| handle))
(defcfun ("TerminateJobObject" terminate-job-object :convention :stdcall) winbool  (|hJob| handle) (|uExitCode| uint))
(defcfun ("QueryInformationJobObject" query-information-job-object :convention :stdcall) winbool  (|hJob| handle) (|JobObjectInformationClass| jobobjectinfoclass) (|lpJobObjectInformation| lpvoid) (|cbJobObjectInformationLength| dword) (|lpReturnLength| lpdword))
(defcfun ("SetInformationJobObject" set-information-job-object :convention :stdcall) winbool  (|hJob| handle) (|JobObjectInformationClass| jobobjectinfoclass) (|lpJobObjectInformation| lpvoid) (|cbJobObjectInformationLength| dword))
(defcfun ("IsProcessInJob" is-process-in-job :convention :stdcall) winbool  (|ProcessHandle| handle) (|JobHandle| handle) (|Result| pbool))
(defcfun ("CreateJobSet" create-job-set :convention :stdcall) winbool  (|NumJob| ulong) (|UserJobSet| pjob_set_array) (|Flags| ulong))
(defcfun ("AddVectoredExceptionHandler" add-vectored-exception-handler :convention :stdcall) pvoid  (|First| ulong) (|Handler| pvectored_exception_handler))
(defcfun ("RemoveVectoredExceptionHandler" remove-vectored-exception-handler :convention :stdcall) ulong  (|Handle| pvoid))
(defcfun ("AddVectoredContinueHandler" add-vectored-continue-handler :convention :stdcall) pvoid  (|First| ulong) (|Handler| pvectored_exception_handler))
(defcfun ("RemoveVectoredContinueHandler" remove-vectored-continue-handler :convention :stdcall) ulong  (|Handle| pvoid))
(defcfun ("FindFirstVolumeA" find-first-volume-a :convention :stdcall) handle  (|lpszVolumeName| lpstr) (|cchBufferLength| dword))
(defcfun ("FindFirstVolumeW" find-first-volume-w :convention :stdcall) handle  (|lpszVolumeName| lpwstr) (|cchBufferLength| dword))
(defcfun ("FindNextVolumeA" find-next-volume-a :convention :stdcall) winbool  (|hFindVolume| handle) (|lpszVolumeName| lpstr) (|cchBufferLength| dword))
(defcfun ("FindNextVolumeW" find-next-volume-w :convention :stdcall) winbool  (|hFindVolume| handle) (|lpszVolumeName| lpwstr) (|cchBufferLength| dword))
(defcfun ("FindVolumeClose" find-volume-close :convention :stdcall) winbool  (|hFindVolume| handle))
(defcfun ("FindFirstVolumeMountPointA" find-first-volume-mount-point-a :convention :stdcall) handle  (|lpszRootPathName| lpcstr) (|lpszVolumeMountPoint| lpstr) (|cchBufferLength| dword))
(defcfun ("FindFirstVolumeMountPointW" find-first-volume-mount-point-w :convention :stdcall) handle  (|lpszRootPathName| lpcwstr) (|lpszVolumeMountPoint| lpwstr) (|cchBufferLength| dword))
(defcfun ("FindNextVolumeMountPointA" find-next-volume-mount-point-a :convention :stdcall) winbool  (|hFindVolumeMountPoint| handle) (|lpszVolumeMountPoint| lpstr) (|cchBufferLength| dword))
(defcfun ("FindNextVolumeMountPointW" find-next-volume-mount-point-w :convention :stdcall) winbool  (|hFindVolumeMountPoint| handle) (|lpszVolumeMountPoint| lpwstr) (|cchBufferLength| dword))
(defcfun ("FindVolumeMountPointClose" find-volume-mount-point-close :convention :stdcall) winbool  (|hFindVolumeMountPoint| handle))
(defcfun ("SetVolumeMountPointA" set-volume-mount-point-a :convention :stdcall) winbool  (|lpszVolumeMountPoint| lpcstr) (|lpszVolumeName| lpcstr))
(defcfun ("SetVolumeMountPointW" set-volume-mount-point-w :convention :stdcall) winbool  (|lpszVolumeMountPoint| lpcwstr) (|lpszVolumeName| lpcwstr))
(defcfun ("DeleteVolumeMountPointA" delete-volume-mount-point-a :convention :stdcall) winbool  (|lpszVolumeMountPoint| lpcstr))
(defcfun ("DeleteVolumeMountPointW" delete-volume-mount-point-w :convention :stdcall) winbool  (|lpszVolumeMountPoint| lpcwstr))
(defcfun ("GetVolumeNameForVolumeMountPointA" get-volume-name-for-volume-mount-point-a :convention :stdcall) winbool  (|lpszVolumeMountPoint| lpcstr) (|lpszVolumeName| lpstr) (|cchBufferLength| dword))
(defcfun ("GetVolumeNameForVolumeMountPointW" get-volume-name-for-volume-mount-point-w :convention :stdcall) winbool  (|lpszVolumeMountPoint| lpcwstr) (|lpszVolumeName| lpwstr) (|cchBufferLength| dword))
(defcfun ("GetVolumePathNameA" get-volume-path-name-a :convention :stdcall) winbool  (|lpszFileName| lpcstr) (|lpszVolumePathName| lpstr) (|cchBufferLength| dword))
(defcfun ("GetVolumePathNameW" get-volume-path-name-w :convention :stdcall) winbool  (|lpszFileName| lpcwstr) (|lpszVolumePathName| lpwstr) (|cchBufferLength| dword))
(defcfun ("GetVolumePathNamesForVolumeNameA" get-volume-path-names-for-volume-name-a :convention :stdcall) winbool  (|lpszVolumeName| lpcstr) (|lpszVolumePathNames| lpch) (|cchBufferLength| dword) (|lpcchReturnLength| pdword))
(defcfun ("GetVolumePathNamesForVolumeNameW" get-volume-path-names-for-volume-name-w :convention :stdcall) winbool  (|lpszVolumeName| lpcwstr) (|lpszVolumePathNames| lpwch) (|cchBufferLength| dword) (|lpcchReturnLength| pdword))
(defcfun ("CreateActCtxA" create-act-ctx-a :convention :stdcall) handle  (|pActCtx| pcactctxa))
(defcfun ("CreateActCtxW" create-act-ctx-w :convention :stdcall) handle  (|pActCtx| pcactctxw))
(defcfun ("AddRefActCtx" add-ref-act-ctx :convention :stdcall) :void  (|hActCtx| handle))
(defcfun ("ReleaseActCtx" release-act-ctx :convention :stdcall) :void  (|hActCtx| handle))
(defcfun ("ZombifyActCtx" zombify-act-ctx :convention :stdcall) winbool  (|hActCtx| handle))
(defcfun ("ActivateActCtx" activate-act-ctx :convention :stdcall) winbool  (|hActCtx| handle) (|lpCookie| :pointer))
(defcfun ("DeactivateActCtx" deactivate-act-ctx :convention :stdcall) winbool  (|dwFlags| dword) (|ulCookie| ulong_ptr))
(defcfun ("GetCurrentActCtx" get-current-act-ctx :convention :stdcall) winbool  (|lphActCtx| :pointer))
(defcfun ("FindActCtxSectionStringA" find-act-ctx-section-string-a :convention :stdcall) winbool  (|dwFlags| dword) (|lpExtensionGuid| :pointer) (|ulSectionId| ulong) (|lpStringToFind| lpcstr) (|ReturnedData| pactctx_section_keyed_data))
(defcfun ("FindActCtxSectionStringW" find-act-ctx-section-string-w :convention :stdcall) winbool  (|dwFlags| dword) (|lpExtensionGuid| :pointer) (|ulSectionId| ulong) (|lpStringToFind| lpcwstr) (|ReturnedData| pactctx_section_keyed_data))
(defcfun ("FindActCtxSectionGuid" find-act-ctx-section-guid :convention :stdcall) winbool  (|dwFlags| dword) (|lpExtensionGuid| :pointer) (|ulSectionId| ulong) (|lpGuidToFind| :pointer) (|ReturnedData| pactctx_section_keyed_data))
(defcfun ("QueryActCtxW" query-act-ctx-w :convention :stdcall) winbool  (|dwFlags| dword) (|hActCtx| handle) (|pvSubInstance| pvoid) (|ulInfoClass| ulong) (|pvBuffer| pvoid) (|cbBuffer| size_t) (|pcbWrittenOrRequired| :pointer))
(defcfun ("ProcessIdToSessionId" process-id-to-session-id :convention :stdcall) winbool  (|dwProcessId| dword) (|pSessionId| :pointer))
(defcfun ("WTSGetActiveConsoleSessionId" wts-get-active-console-session-id :convention :stdcall) dword )
(defcfun ("IsWow64Process" is-wow-64-process :convention :stdcall) winbool  (|hProcess| handle) (|Wow64Process| pbool))
(defcfun ("GetLogicalProcessorInformation" get-logical-processor-information :convention :stdcall) winbool  (|Buffer| psystem_logical_processor_information) (|ReturnedLength| pdword))
(defcfun ("GetNumaHighestNodeNumber" get-numa-highest-node-number :convention :stdcall) winbool  (|HighestNodeNumber| pulong))
(defcfun ("GetNumaProcessorNode" get-numa-processor-node :convention :stdcall) winbool  (|Processor| uchar) (|NodeNumber| puchar))
(defcfun ("GetNumaNodeProcessorMask" get-numa-node-processor-mask :convention :stdcall) winbool  (|Node| uchar) (|ProcessorMask| pulonglong))
(defcfun ("GetNumaAvailableMemoryNode" get-numa-available-memory-node :convention :stdcall) winbool  (|Node| uchar) (|AvailableBytes| pulonglong))
(defcfun ("CreateSymbolicLinkA" create-symbolic-link-a :convention :stdcall) winbool  (|lpSymLinkFileName| lpstr) (|lpTargetFileName| lpstr) (|dwFlags| dword))
(defcfun ("CreateSymbolicLinkW" create-symbolic-link-w :convention :stdcall) winbool  (|lpSymLinkFileName| lpwstr) (|lpTargetFileName| lpwstr) (|dwFlags| dword))
(defcfun ("AddFontResourceA" add-font-resource-a :convention :stdcall) :int  (arg0 lpcstr))
(defcfun ("AddFontResourceW" add-font-resource-w :convention :stdcall) :int  (arg0 lpcwstr))
(defcfun ("AnimatePalette" animate-palette :convention :stdcall) winbool  (|hPal| hpalette) (|iStartIndex| uint) (|cEntries| uint) (|ppe| :pointer))
(defcfun ("Arc" arc :convention :stdcall) winbool  (|hdc| hdc) (|x1| :int) (|y1| :int) (|x2| :int) (|y2| :int) (|x3| :int) (|y3| :int) (|x4| :int) (|y4| :int))
(defcfun ("BitBlt" bit-blt :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int) (|cx| :int) (|cy| :int) (|hdcSrc| hdc) (|x1| :int) (|y1| :int) (|rop| dword))
(defcfun ("CancelDC" cancel-dc :convention :stdcall) winbool  (|hdc| hdc))
(defcfun ("Chord" chord :convention :stdcall) winbool  (|hdc| hdc) (|x1| :int) (|y1| :int) (|x2| :int) (|y2| :int) (|x3| :int) (|y3| :int) (|x4| :int) (|y4| :int))
(defcfun ("ChoosePixelFormat" choose-pixel-format :convention :stdcall) :int  (|hdc| hdc) (|ppfd| :pointer))
(defcfun ("CloseMetaFile" close-meta-file :convention :stdcall) hmetafile  (|hdc| hdc))
(defcfun ("CombineRgn" combine-rgn :convention :stdcall) :int  (|hrgnDst| hrgn) (|hrgnSrc1| hrgn) (|hrgnSrc2| hrgn) (|iMode| :int))
(defcfun ("CopyMetaFileA" copy-meta-file-a :convention :stdcall) hmetafile  (arg0 hmetafile) (arg1 lpcstr))
(defcfun ("CopyMetaFileW" copy-meta-file-w :convention :stdcall) hmetafile  (arg0 hmetafile) (arg1 lpcwstr))
(defcfun ("CreateBitmap" create-bitmap :convention :stdcall) hbitmap  (|nWidth| :int) (|nHeight| :int) (|nPlanes| uint) (|nBitCount| uint) (|lpBits| :pointer))
(defcfun ("CreateBitmapIndirect" create-bitmap-indirect :convention :stdcall) hbitmap  (|pbm| :pointer))
(defcfun ("CreateBrushIndirect" create-brush-indirect :convention :stdcall) hbrush  (|plbrush| :pointer))
(defcfun ("CreateCompatibleBitmap" create-compatible-bitmap :convention :stdcall) hbitmap  (|hdc| hdc) (|cx| :int) (|cy| :int))
(defcfun ("CreateDiscardableBitmap" create-discardable-bitmap :convention :stdcall) hbitmap  (|hdc| hdc) (|cx| :int) (|cy| :int))
(defcfun ("CreateCompatibleDC" create-compatible-dc :convention :stdcall) hdc  (|hdc| hdc))
(defcfun ("CreateDCA" create-dca :convention :stdcall) hdc  (|pwszDriver| lpcstr) (|pwszDevice| lpcstr) (|pszPort| lpcstr) (|pdm| :pointer))
(defcfun ("CreateDCW" create-dcw :convention :stdcall) hdc  (|pwszDriver| lpcwstr) (|pwszDevice| lpcwstr) (|pszPort| lpcwstr) (|pdm| :pointer))
(defcfun ("CreateDIBitmap" create-di-bitmap :convention :stdcall) hbitmap  (|hdc| hdc) (|pbmih| :pointer) (|flInit| dword) (|pjBits| :pointer) (|pbmi| :pointer) (|iUsage| uint))
(defcfun ("CreateDIBPatternBrush" create-dib-pattern-brush :convention :stdcall) hbrush  (|h| hglobal) (|iUsage| uint))
(defcfun ("CreateDIBPatternBrushPt" create-dib-pattern-brush-pt :convention :stdcall) hbrush  (|lpPackedDIB| :pointer) (|iUsage| uint))
(defcfun ("CreateEllipticRgn" create-elliptic-rgn :convention :stdcall) hrgn  (|x1| :int) (|y1| :int) (|x2| :int) (|y2| :int))
(defcfun ("CreateEllipticRgnIndirect" create-elliptic-rgn-indirect :convention :stdcall) hrgn  (|lprect| :pointer))
(defcfun ("CreateFontIndirectA" create-font-indirect-a :convention :stdcall) hfont  (|lplf| :pointer))
(defcfun ("CreateFontIndirectW" create-font-indirect-w :convention :stdcall) hfont  (|lplf| :pointer))
(defcfun ("CreateFontA" create-font-a :convention :stdcall) hfont  (|cHeight| :int) (|cWidth| :int) (|cEscapement| :int) (|cOrientation| :int) (|cWeight| :int) (|bItalic| dword) (|bUnderline| dword) (|bStrikeOut| dword) (|iCharSet| dword) (|iOutPrecision| dword) (|iClipPrecision| dword) (|iQuality| dword) (|iPitchAndFamily| dword) (|pszFaceName| lpcstr))
(defcfun ("CreateFontW" create-font-w :convention :stdcall) hfont  (|cHeight| :int) (|cWidth| :int) (|cEscapement| :int) (|cOrientation| :int) (|cWeight| :int) (|bItalic| dword) (|bUnderline| dword) (|bStrikeOut| dword) (|iCharSet| dword) (|iOutPrecision| dword) (|iClipPrecision| dword) (|iQuality| dword) (|iPitchAndFamily| dword) (|pszFaceName| lpcwstr))
(defcfun ("CreateHatchBrush" create-hatch-brush :convention :stdcall) hbrush  (|iHatch| :int) (|color| colorref))
(defcfun ("CreateICA" create-ica :convention :stdcall) hdc  (|pszDriver| lpcstr) (|pszDevice| lpcstr) (|pszPort| lpcstr) (|pdm| :pointer))
(defcfun ("CreateICW" create-icw :convention :stdcall) hdc  (|pszDriver| lpcwstr) (|pszDevice| lpcwstr) (|pszPort| lpcwstr) (|pdm| :pointer))
(defcfun ("CreateMetaFileA" create-meta-file-a :convention :stdcall) hdc  (|pszFile| lpcstr))
(defcfun ("CreateMetaFileW" create-meta-file-w :convention :stdcall) hdc  (|pszFile| lpcwstr))
(defcfun ("CreatePalette" create-palette :convention :stdcall) hpalette  (|plpal| :pointer))
(defcfun ("CreatePen" create-pen :convention :stdcall) hpen  (|iStyle| :int) (|cWidth| :int) (|color| colorref))
(defcfun ("CreatePenIndirect" create-pen-indirect :convention :stdcall) hpen  (|plpen| :pointer))
(defcfun ("CreatePolyPolygonRgn" create-poly-polygon-rgn :convention :stdcall) hrgn  (|pptl| :pointer) (|pc| :pointer) (|cPoly| :int) (|iMode| :int))
(defcfun ("CreatePatternBrush" create-pattern-brush :convention :stdcall) hbrush  (|hbm| hbitmap))
(defcfun ("CreateRectRgn" create-rect-rgn :convention :stdcall) hrgn  (|x1| :int) (|y1| :int) (|x2| :int) (|y2| :int))
(defcfun ("CreateRectRgnIndirect" create-rect-rgn-indirect :convention :stdcall) hrgn  (|lprect| :pointer))
(defcfun ("CreateRoundRectRgn" create-round-rect-rgn :convention :stdcall) hrgn  (|x1| :int) (|y1| :int) (|x2| :int) (|y2| :int) (|w| :int) (|h| :int))
(defcfun ("CreateScalableFontResourceA" create-scalable-font-resource-a :convention :stdcall) winbool  (|fdwHidden| dword) (|lpszFont| lpcstr) (|lpszFile| lpcstr) (|lpszPath| lpcstr))
(defcfun ("CreateScalableFontResourceW" create-scalable-font-resource-w :convention :stdcall) winbool  (|fdwHidden| dword) (|lpszFont| lpcwstr) (|lpszFile| lpcwstr) (|lpszPath| lpcwstr))
(defcfun ("CreateSolidBrush" create-solid-brush :convention :stdcall) hbrush  (|color| colorref))
(defcfun ("DeleteDC" delete-dc :convention :stdcall) winbool  (|hdc| hdc))
(defcfun ("DeleteMetaFile" delete-meta-file :convention :stdcall) winbool  (|hmf| hmetafile))
(defcfun ("DeleteObject" delete-object :convention :stdcall) winbool  (|ho| hgdiobj))
(defcfun ("DescribePixelFormat" describe-pixel-format :convention :stdcall) :int  (|hdc| hdc) (|iPixelFormat| :int) (|nBytes| uint) (|ppfd| lppixelformatdescriptor))
(defcfun ("DeviceCapabilitiesA" device-capabilities-a :convention :stdcall) :int  (|pDevice| lpcstr) (|pPort| lpcstr) (|fwCapability| word) (|pOutput| lpstr) (|pDevMode| :pointer))
(defcfun ("DeviceCapabilitiesW" device-capabilities-w :convention :stdcall) :int  (|pDevice| lpcwstr) (|pPort| lpcwstr) (|fwCapability| word) (|pOutput| lpwstr) (|pDevMode| :pointer))
(defcfun ("DrawEscape" draw-escape :convention :stdcall) :int  (|hdc| hdc) (|iEscape| :int) (|cjIn| :int) (|lpIn| lpcstr))
(defcfun ("Ellipse" ellipse :convention :stdcall) winbool  (|hdc| hdc) (|left| :int) (|top| :int) (|right| :int) (|bottom| :int))
(defcfun ("EnumFontFamiliesExA" enum-font-families-ex-a :convention :stdcall) :int  (|hdc| hdc) (|lpLogfont| lplogfonta) (|lpProc| fontenumproca) (|lParam| lparam) (|dwFlags| dword))
(defcfun ("EnumFontFamiliesExW" enum-font-families-ex-w :convention :stdcall) :int  (|hdc| hdc) (|lpLogfont| lplogfontw) (|lpProc| fontenumprocw) (|lParam| lparam) (|dwFlags| dword))
(defcfun ("EnumFontFamiliesA" enum-font-families-a :convention :stdcall) :int  (|hdc| hdc) (|lpLogfont| lpcstr) (|lpProc| fontenumproca) (|lParam| lparam))
(defcfun ("EnumFontFamiliesW" enum-font-families-w :convention :stdcall) :int  (|hdc| hdc) (|lpLogfont| lpcwstr) (|lpProc| fontenumprocw) (|lParam| lparam))
(defcfun ("EnumFontsA" enum-fonts-a :convention :stdcall) :int  (|hdc| hdc) (|lpLogfont| lpcstr) (|lpProc| fontenumproca) (|lParam| lparam))
(defcfun ("EnumFontsW" enum-fonts-w :convention :stdcall) :int  (|hdc| hdc) (|lpLogfont| lpcwstr) (|lpProc| fontenumprocw) (|lParam| lparam))
(defcfun ("EnumObjects" enum-objects :convention :stdcall) :int  (|hdc| hdc) (|nType| :int) (|lpFunc| gobjenumproc) (|lParam| lparam))
(defcfun ("EqualRgn" equal-rgn :convention :stdcall) winbool  (|hrgn1| hrgn) (|hrgn2| hrgn))
(defcfun ("Escape" escape :convention :stdcall) :int  (|hdc| hdc) (|iEscape| :int) (|cjIn| :int) (|pvIn| lpcstr) (|pvOut| lpvoid))
(defcfun ("ExtEscape" ext-escape :convention :stdcall) :int  (|hdc| hdc) (|iEscape| :int) (|cjInput| :int) (|lpInData| lpcstr) (|cjOutput| :int) (|lpOutData| lpstr))
(defcfun ("ExcludeClipRect" exclude-clip-rect :convention :stdcall) :int  (|hdc| hdc) (|left| :int) (|top| :int) (|right| :int) (|bottom| :int))
(defcfun ("ExtCreateRegion" ext-create-region :convention :stdcall) hrgn  (|lpx| :pointer) (|nCount| dword) (|lpData| :pointer))
(defcfun ("ExtFloodFill" ext-flood-fill :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int) (|color| colorref) (|type| uint))
(defcfun ("FillRgn" fill-rgn :convention :stdcall) winbool  (|hdc| hdc) (|hrgn| hrgn) (|hbr| hbrush))
(defcfun ("FloodFill" flood-fill :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int) (|color| colorref))
(defcfun ("FrameRgn" frame-rgn :convention :stdcall) winbool  (|hdc| hdc) (|hrgn| hrgn) (|hbr| hbrush) (|w| :int) (|h| :int))
(defcfun ("GetROP2" get-rop-2 :convention :stdcall) :int  (|hdc| hdc))
(defcfun ("GetAspectRatioFilterEx" get-aspect-ratio-filter-ex :convention :stdcall) winbool  (|hdc| hdc) (|lpsize| lpsize))
(defcfun ("GetBkColor" get-bk-color :convention :stdcall) colorref  (|hdc| hdc))
(defcfun ("GetDCBrushColor" get-dc-brush-color :convention :stdcall) colorref  (|hdc| hdc))
(defcfun ("GetDCPenColor" get-dc-pen-color :convention :stdcall) colorref  (|hdc| hdc))
(defcfun ("GetBkMode" get-bk-mode :convention :stdcall) :int  (|hdc| hdc))
(defcfun ("GetBitmapBits" get-bitmap-bits :convention :stdcall) long  (|hbit| hbitmap) (|cb| long) (|lpvBits| lpvoid))
(defcfun ("GetBitmapDimensionEx" get-bitmap-dimension-ex :convention :stdcall) winbool  (|hbit| hbitmap) (|lpsize| lpsize))
(defcfun ("GetBoundsRect" get-bounds-rect :convention :stdcall) uint  (|hdc| hdc) (|lprect| lprect) (|flags| uint))
(defcfun ("GetBrushOrgEx" get-brush-org-ex :convention :stdcall) winbool  (|hdc| hdc) (|lppt| lppoint))
(defcfun ("GetCharWidthA" get-char-width-a :convention :stdcall) winbool  (|hdc| hdc) (|iFirst| uint) (|iLast| uint) (|lpBuffer| lpint))
(defcfun ("GetCharWidthW" get-char-width-w :convention :stdcall) winbool  (|hdc| hdc) (|iFirst| uint) (|iLast| uint) (|lpBuffer| lpint))
(defcfun ("GetCharWidth32A" get-char-width-32-a :convention :stdcall) winbool  (|hdc| hdc) (|iFirst| uint) (|iLast| uint) (|lpBuffer| lpint))
(defcfun ("GetCharWidth32W" get-char-width-32-w :convention :stdcall) winbool  (|hdc| hdc) (|iFirst| uint) (|iLast| uint) (|lpBuffer| lpint))
(defcfun ("GetCharWidthFloatA" get-char-width-float-a :convention :stdcall) winbool  (|hdc| hdc) (|iFirst| uint) (|iLast| uint) (|lpBuffer| pfloat))
(defcfun ("GetCharWidthFloatW" get-char-width-float-w :convention :stdcall) winbool  (|hdc| hdc) (|iFirst| uint) (|iLast| uint) (|lpBuffer| pfloat))
(defcfun ("GetCharABCWidthsA" get-char-abc-widths-a :convention :stdcall) winbool  (|hdc| hdc) (|wFirst| uint) (|wLast| uint) (|lpABC| lpabc))
(defcfun ("GetCharABCWidthsW" get-char-abc-widths-w :convention :stdcall) winbool  (|hdc| hdc) (|wFirst| uint) (|wLast| uint) (|lpABC| lpabc))
(defcfun ("GetCharABCWidthsFloatA" get-char-abc-widths-float-a :convention :stdcall) winbool  (|hdc| hdc) (|iFirst| uint) (|iLast| uint) (|lpABC| lpabcfloat))
(defcfun ("GetCharABCWidthsFloatW" get-char-abc-widths-float-w :convention :stdcall) winbool  (|hdc| hdc) (|iFirst| uint) (|iLast| uint) (|lpABC| lpabcfloat))
(defcfun ("GetClipBox" get-clip-box :convention :stdcall) :int  (|hdc| hdc) (|lprect| lprect))
(defcfun ("GetClipRgn" get-clip-rgn :convention :stdcall) :int  (|hdc| hdc) (|hrgn| hrgn))
(defcfun ("GetMetaRgn" get-meta-rgn :convention :stdcall) :int  (|hdc| hdc) (|hrgn| hrgn))
(defcfun ("GetCurrentObject" get-current-object :convention :stdcall) hgdiobj  (|hdc| hdc) (|type| uint))
(defcfun ("GetCurrentPositionEx" get-current-position-ex :convention :stdcall) winbool  (|hdc| hdc) (|lppt| lppoint))
(defcfun ("GetDeviceCaps" get-device-caps :convention :stdcall) :int  (|hdc| hdc) (|index| :int))
(defcfun ("GetDIBits" get-di-bits :convention :stdcall) :int  (|hdc| hdc) (|hbm| hbitmap) (|start| uint) (|cLines| uint) (|lpvBits| lpvoid) (|lpbmi| lpbitmapinfo) (|usage| uint))
(defcfun ("GetFontData" get-font-data :convention :stdcall) dword  (|hdc| hdc) (|dwTable| dword) (|dwOffset| dword) (|pvBuffer| pvoid) (|cjBuffer| dword))
(defcfun ("GetGlyphOutlineA" get-glyph-outline-a :convention :stdcall) dword  (|hdc| hdc) (|uChar| uint) (|fuFormat| uint) (|lpgm| lpglyphmetrics) (|cjBuffer| dword) (|pvBuffer| lpvoid) (|lpmat2| :pointer))
(defcfun ("GetGlyphOutlineW" get-glyph-outline-w :convention :stdcall) dword  (|hdc| hdc) (|uChar| uint) (|fuFormat| uint) (|lpgm| lpglyphmetrics) (|cjBuffer| dword) (|pvBuffer| lpvoid) (|lpmat2| :pointer))
(defcfun ("GetGraphicsMode" get-graphics-mode :convention :stdcall) :int  (|hdc| hdc))
(defcfun ("GetMapMode" get-map-mode :convention :stdcall) :int  (|hdc| hdc))
(defcfun ("GetMetaFileBitsEx" get-meta-file-bits-ex :convention :stdcall) uint  (|hMF| hmetafile) (|cbBuffer| uint) (|lpData| lpvoid))
(defcfun ("GetMetaFileA" get-meta-file-a :convention :stdcall) hmetafile  (|lpName| lpcstr))
(defcfun ("GetMetaFileW" get-meta-file-w :convention :stdcall) hmetafile  (|lpName| lpcwstr))
(defcfun ("GetNearestColor" get-nearest-color :convention :stdcall) colorref  (|hdc| hdc) (|color| colorref))
(defcfun ("GetNearestPaletteIndex" get-nearest-palette-index :convention :stdcall) uint  (|h| hpalette) (|color| colorref))
(defcfun ("GetObjectType" get-object-type :convention :stdcall) dword  (|h| hgdiobj))
(defcfun ("GetOutlineTextMetricsA" get-outline-text-metrics-a :convention :stdcall) uint  (|hdc| hdc) (|cjCopy| uint) (|potm| lpoutlinetextmetrica))
(defcfun ("GetOutlineTextMetricsW" get-outline-text-metrics-w :convention :stdcall) uint  (|hdc| hdc) (|cjCopy| uint) (|potm| lpoutlinetextmetricw))
(defcfun ("GetPaletteEntries" get-palette-entries :convention :stdcall) uint  (|hpal| hpalette) (|iStart| uint) (|cEntries| uint) (|pPalEntries| lppaletteentry))
(defcfun ("GetPixel" get-pixel :convention :stdcall) colorref  (|hdc| hdc) (|x| :int) (|y| :int))
(defcfun ("GetPixelFormat" get-pixel-format :convention :stdcall) :int  (|hdc| hdc))
(defcfun ("GetPolyFillMode" get-poly-fill-mode :convention :stdcall) :int  (|hdc| hdc))
(defcfun ("GetRasterizerCaps" get-rasterizer-caps :convention :stdcall) winbool  (|lpraststat| lprasterizer_status) (|cjBytes| uint))
(defcfun ("GetRandomRgn" get-random-rgn :convention :stdcall) :int  (|hdc| hdc) (|hrgn| hrgn) (|i| int))
(defcfun ("GetRegionData" get-region-data :convention :stdcall) dword  (|hrgn| hrgn) (|nCount| dword) (|lpRgnData| lprgndata))
(defcfun ("GetRgnBox" get-rgn-box :convention :stdcall) :int  (|hrgn| hrgn) (|lprc| lprect))
(defcfun ("GetStockObject" get-stock-object :convention :stdcall) hgdiobj  (|i| :int))
(defcfun ("GetStretchBltMode" get-stretch-blt-mode :convention :stdcall) :int  (|hdc| hdc))
(defcfun ("GetSystemPaletteEntries" get-system-palette-entries :convention :stdcall) uint  (|hdc| hdc) (|iStart| uint) (|cEntries| uint) (|pPalEntries| lppaletteentry))
(defcfun ("GetSystemPaletteUse" get-system-palette-use :convention :stdcall) uint  (|hdc| hdc))
(defcfun ("GetTextCharacterExtra" get-text-character-extra :convention :stdcall) :int  (|hdc| hdc))
(defcfun ("GetTextAlign" get-text-align :convention :stdcall) uint  (|hdc| hdc))
(defcfun ("GetTextColor" get-text-color :convention :stdcall) colorref  (|hdc| hdc))
(defcfun ("GetTextExtentPointA" get-text-extent-point-a :convention :stdcall) winbool  (|hdc| hdc) (|lpString| lpcstr) (|c| :int) (|lpsz| lpsize))
(defcfun ("GetTextExtentPointW" get-text-extent-point-w :convention :stdcall) winbool  (|hdc| hdc) (|lpString| lpcwstr) (|c| :int) (|lpsz| lpsize))
(defcfun ("GetTextExtentPoint32A" get-text-extent-point-32-a :convention :stdcall) winbool  (|hdc| hdc) (|lpString| lpcstr) (|c| :int) (|psizl| lpsize))
(defcfun ("GetTextExtentPoint32W" get-text-extent-point-32-w :convention :stdcall) winbool  (|hdc| hdc) (|lpString| lpcwstr) (|c| :int) (|psizl| lpsize))
(defcfun ("GetTextExtentExPointA" get-text-extent-ex-point-a :convention :stdcall) winbool  (|hdc| hdc) (|lpszString| lpcstr) (|cchString| :int) (|nMaxExtent| :int) (|lpnFit| lpint) (|lpnDx| lpint) (|lpSize| lpsize))
(defcfun ("GetTextExtentExPointW" get-text-extent-ex-point-w :convention :stdcall) winbool  (|hdc| hdc) (|lpszString| lpcwstr) (|cchString| :int) (|nMaxExtent| :int) (|lpnFit| lpint) (|lpnDx| lpint) (|lpSize| lpsize))
(defcfun ("GetTextCharset" get-text-charset :convention :stdcall) :int  (|hdc| hdc))
(defcfun ("GetTextCharsetInfo" get-text-charset-info :convention :stdcall) :int  (|hdc| hdc) (|lpSig| lpfontsignature) (|dwFlags| dword))
(defcfun ("TranslateCharsetInfo" translate-charset-info :convention :stdcall) winbool  (|lpSrc| :pointer) (|lpCs| lpcharsetinfo) (|dwFlags| dword))
(defcfun ("GetFontLanguageInfo" get-font-language-info :convention :stdcall) dword  (|hdc| hdc))
(defcfun ("GetCharacterPlacementA" get-character-placement-a :convention :stdcall) dword  (|hdc| hdc) (|lpString| lpcstr) (|nCount| :int) (|nMexExtent| :int) (|lpResults| lpgcp_resultsa) (|dwFlags| dword))
(defcfun ("GetCharacterPlacementW" get-character-placement-w :convention :stdcall) dword  (|hdc| hdc) (|lpString| lpcwstr) (|nCount| :int) (|nMexExtent| :int) (|lpResults| lpgcp_resultsw) (|dwFlags| dword))
(defcfun ("GetFontUnicodeRanges" get-font-unicode-ranges :convention :stdcall) dword  (|hdc| hdc) (|lpgs| lpglyphset))
(defcfun ("GetGlyphIndicesA" get-glyph-indices-a :convention :stdcall) dword  (|hdc| hdc) (|lpstr| lpcstr) (|c| :int) (|pgi| lpword) (|fl| dword))
(defcfun ("GetGlyphIndicesW" get-glyph-indices-w :convention :stdcall) dword  (|hdc| hdc) (|lpstr| lpcwstr) (|c| :int) (|pgi| lpword) (|fl| dword))
(defcfun ("GetTextExtentPointI" get-text-extent-point-i :convention :stdcall) winbool  (|hdc| hdc) (|pgiIn| lpword) (|cgi| :int) (|psize| lpsize))
(defcfun ("GetTextExtentExPointI" get-text-extent-ex-point-i :convention :stdcall) winbool  (|hdc| hdc) (|lpwszString| lpword) (|cwchString| :int) (|nMaxExtent| :int) (|lpnFit| lpint) (|lpnDx| lpint) (|lpSize| lpsize))
(defcfun ("GetCharWidthI" get-char-width-i :convention :stdcall) winbool  (|hdc| hdc) (|giFirst| uint) (|cgi| uint) (|pgi| lpword) (|piWidths| lpint))
(defcfun ("GetCharABCWidthsI" get-char-abc-widths-i :convention :stdcall) winbool  (|hdc| hdc) (|giFirst| uint) (|cgi| uint) (|pgi| lpword) (|pabc| lpabc))
(defcfun ("AddFontResourceExA" add-font-resource-ex-a :convention :stdcall) :int  (|name| lpcstr) (|fl| dword) (|res| pvoid))
(defcfun ("AddFontResourceExW" add-font-resource-ex-w :convention :stdcall) :int  (|name| lpcwstr) (|fl| dword) (|res| pvoid))
(defcfun ("RemoveFontResourceExA" remove-font-resource-ex-a :convention :stdcall) winbool  (|name| lpcstr) (|fl| dword) (|pdv| pvoid))
(defcfun ("RemoveFontResourceExW" remove-font-resource-ex-w :convention :stdcall) winbool  (|name| lpcwstr) (|fl| dword) (|pdv| pvoid))
(defcfun ("AddFontMemResourceEx" add-font-mem-resource-ex :convention :stdcall) handle  (|pFileView| pvoid) (|cjSize| dword) (|pvResrved| pvoid) (|pNumFonts| :pointer))
(defcfun ("RemoveFontMemResourceEx" remove-font-mem-resource-ex :convention :stdcall) winbool  (|h| handle))
(defcfun ("CreateFontIndirectExA" create-font-indirect-ex-a :convention :stdcall) hfont  (arg0 :pointer))
(defcfun ("CreateFontIndirectExW" create-font-indirect-ex-w :convention :stdcall) hfont  (arg0 :pointer))
(defcfun ("GetViewportExtEx" get-viewport-ext-ex :convention :stdcall) winbool  (|hdc| hdc) (|lpsize| lpsize))
(defcfun ("GetViewportOrgEx" get-viewport-org-ex :convention :stdcall) winbool  (|hdc| hdc) (|lppoint| lppoint))
(defcfun ("GetWindowExtEx" get-window-ext-ex :convention :stdcall) winbool  (|hdc| hdc) (|lpsize| lpsize))
(defcfun ("GetWindowOrgEx" get-window-org-ex :convention :stdcall) winbool  (|hdc| hdc) (|lppoint| lppoint))
(defcfun ("IntersectClipRect" intersect-clip-rect :convention :stdcall) :int  (|hdc| hdc) (|left| :int) (|top| :int) (|right| :int) (|bottom| :int))
(defcfun ("InvertRgn" invert-rgn :convention :stdcall) winbool  (|hdc| hdc) (|hrgn| hrgn))
(defcfun ("LineDDA" line-dda :convention :stdcall) winbool  (|xStart| :int) (|yStart| :int) (|xEnd| :int) (|yEnd| :int) (|lpProc| lineddaproc) (|data| lparam))
(defcfun ("LineTo" line-to :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int))
(defcfun ("MaskBlt" mask-blt :convention :stdcall) winbool  (|hdcDest| hdc) (|xDest| :int) (|yDest| :int) (|width| :int) (|height| :int) (|hdcSrc| hdc) (|xSrc| :int) (|ySrc| :int) (|hbmMask| hbitmap) (|xMask| :int) (|yMask| :int) (|rop| dword))
(defcfun ("PlgBlt" plg-blt :convention :stdcall) winbool  (|hdcDest| hdc) (|lpPoint| :pointer) (|hdcSrc| hdc) (|xSrc| :int) (|ySrc| :int) (|width| :int) (|height| :int) (|hbmMask| hbitmap) (|xMask| :int) (|yMask| :int))
(defcfun ("OffsetClipRgn" offset-clip-rgn :convention :stdcall) :int  (|hdc| hdc) (|x| :int) (|y| :int))
(defcfun ("OffsetRgn" offset-rgn :convention :stdcall) :int  (|hrgn| hrgn) (|x| :int) (|y| :int))
(defcfun ("PatBlt" pat-blt :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int) (|w| :int) (|h| :int) (|rop| dword))
(defcfun ("Pie" pie :convention :stdcall) winbool  (|hdc| hdc) (|left| :int) (|top| :int) (|right| :int) (|bottom| :int) (|xr1| :int) (|yr1| :int) (|xr2| :int) (|yr2| :int))
(defcfun ("PlayMetaFile" play-meta-file :convention :stdcall) winbool  (|hdc| hdc) (|hmf| hmetafile))
(defcfun ("PaintRgn" paint-rgn :convention :stdcall) winbool  (|hdc| hdc) (|hrgn| hrgn))
(defcfun ("PolyPolygon" poly-polygon :convention :stdcall) winbool  (|hdc| hdc) (|apt| :pointer) (|asz| :pointer) (|csz| :int))
(defcfun ("PtInRegion" pt-in-region :convention :stdcall) winbool  (|hrgn| hrgn) (|x| :int) (|y| :int))
(defcfun ("PtVisible" pt-visible :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int))
(defcfun ("RectInRegion" rect-in-region :convention :stdcall) winbool  (|hrgn| hrgn) (|lprect| :pointer))
(defcfun ("RectVisible" rect-visible :convention :stdcall) winbool  (|hdc| hdc) (|lprect| :pointer))
(defcfun ("Rectangle" rectangle :convention :stdcall) winbool  (|hdc| hdc) (|left| :int) (|top| :int) (|right| :int) (|bottom| :int))
(defcfun ("RestoreDC" restore-dc :convention :stdcall) winbool  (|hdc| hdc) (|nSavedDC| :int))
(defcfun ("ResetDCA" reset-dca :convention :stdcall) hdc  (|hdc| hdc) (|lpdm| :pointer))
(defcfun ("ResetDCW" reset-dcw :convention :stdcall) hdc  (|hdc| hdc) (|lpdm| :pointer))
(defcfun ("RealizePalette" realize-palette :convention :stdcall) uint  (|hdc| hdc))
(defcfun ("RemoveFontResourceA" remove-font-resource-a :convention :stdcall) winbool  (|lpFileName| lpcstr))
(defcfun ("RemoveFontResourceW" remove-font-resource-w :convention :stdcall) winbool  (|lpFileName| lpcwstr))
(defcfun ("RoundRect" round-rect :convention :stdcall) winbool  (|hdc| hdc) (|left| :int) (|top| :int) (|right| :int) (|bottom| :int) (|width| :int) (|height| :int))
(defcfun ("ResizePalette" resize-palette :convention :stdcall) winbool  (|hpal| hpalette) (|n| uint))
(defcfun ("SaveDC" save-dc :convention :stdcall) :int  (|hdc| hdc))
(defcfun ("SelectClipRgn" select-clip-rgn :convention :stdcall) :int  (|hdc| hdc) (|hrgn| hrgn))
(defcfun ("ExtSelectClipRgn" ext-select-clip-rgn :convention :stdcall) :int  (|hdc| hdc) (|hrgn| hrgn) (|mode| :int))
(defcfun ("SetMetaRgn" set-meta-rgn :convention :stdcall) :int  (|hdc| hdc))
(defcfun ("SelectObject" select-object :convention :stdcall) hgdiobj  (|hdc| hdc) (|h| hgdiobj))
(defcfun ("SelectPalette" select-palette :convention :stdcall) hpalette  (|hdc| hdc) (|hPal| hpalette) (|bForceBkgd| winbool))
(defcfun ("SetBkColor" set-bk-color :convention :stdcall) colorref  (|hdc| hdc) (|color| colorref))
(defcfun ("SetDCBrushColor" set-dc-brush-color :convention :stdcall) colorref  (|hdc| hdc) (|color| colorref))
(defcfun ("SetDCPenColor" set-dc-pen-color :convention :stdcall) colorref  (|hdc| hdc) (|color| colorref))
(defcfun ("SetBkMode" set-bk-mode :convention :stdcall) :int  (|hdc| hdc) (|mode| :int))
(defcfun ("SetBitmapBits" set-bitmap-bits :convention :stdcall) long  (|hbm| hbitmap) (|cb| dword) (|pvBits| :pointer))
(defcfun ("SetBoundsRect" set-bounds-rect :convention :stdcall) uint  (|hdc| hdc) (|lprect| :pointer) (|flags| uint))
(defcfun ("SetDIBits" set-di-bits :convention :stdcall) :int  (|hdc| hdc) (|hbm| hbitmap) (|start| uint) (|cLines| uint) (|lpBits| :pointer) (|lpbmi| :pointer) (|ColorUse| uint))
(defcfun ("SetDIBitsToDevice" set-di-bits-to-device :convention :stdcall) :int  (|hdc| hdc) (|xDest| :int) (|yDest| :int) (|w| dword) (|h| dword) (|xSrc| :int) (|ySrc| :int) (|StartScan| uint) (|cLines| uint) (|lpvBits| :pointer) (|lpbmi| :pointer) (|ColorUse| uint))
(defcfun ("SetMapperFlags" set-mapper-flags :convention :stdcall) dword  (|hdc| hdc) (|flags| dword))
(defcfun ("SetGraphicsMode" set-graphics-mode :convention :stdcall) :int  (|hdc| hdc) (|iMode| :int))
(defcfun ("SetMapMode" set-map-mode :convention :stdcall) :int  (|hdc| hdc) (|iMode| :int))
(defcfun ("SetLayout" set-layout :convention :stdcall) dword  (|hdc| hdc) (|l| dword))
(defcfun ("GetLayout" get-layout :convention :stdcall) dword  (|hdc| hdc))
(defcfun ("SetMetaFileBitsEx" set-meta-file-bits-ex :convention :stdcall) hmetafile  (|cbBuffer| uint) (|lpData| :pointer))
(defcfun ("SetPaletteEntries" set-palette-entries :convention :stdcall) uint  (|hpal| hpalette) (|iStart| uint) (|cEntries| uint) (|pPalEntries| :pointer))
(defcfun ("SetPixel" set-pixel :convention :stdcall) colorref  (|hdc| hdc) (|x| :int) (|y| :int) (|color| colorref))
(defcfun ("SetPixelV" set-pixel-v :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int) (|color| colorref))
(defcfun ("SetPixelFormat" set-pixel-format :convention :stdcall) winbool  (|hdc| hdc) (|format| :int) (|ppfd| :pointer))
(defcfun ("SetPolyFillMode" set-poly-fill-mode :convention :stdcall) :int  (|hdc| hdc) (|mode| :int))
(defcfun ("StretchBlt" stretch-blt :convention :stdcall) winbool  (|hdcDest| hdc) (|xDest| :int) (|yDest| :int) (|wDest| :int) (|hDest| :int) (|hdcSrc| hdc) (|xSrc| :int) (|ySrc| :int) (|wSrc| :int) (|hSrc| :int) (|rop| dword))
(defcfun ("SetRectRgn" set-rect-rgn :convention :stdcall) winbool  (|hrgn| hrgn) (|left| :int) (|top| :int) (|right| :int) (|bottom| :int))
(defcfun ("StretchDIBits" stretch-di-bits :convention :stdcall) :int  (|hdc| hdc) (|xDest| :int) (|yDest| :int) (|DestWidth| :int) (|DestHeight| :int) (|xSrc| :int) (|ySrc| :int) (|SrcWidth| :int) (|SrcHeight| :int) (|lpBits| :pointer) (|lpbmi| :pointer) (|iUsage| uint) (|rop| dword))
(defcfun ("SetROP2" set-rop-2 :convention :stdcall) :int  (|hdc| hdc) (|rop2| :int))
(defcfun ("SetStretchBltMode" set-stretch-blt-mode :convention :stdcall) :int  (|hdc| hdc) (|mode| :int))
(defcfun ("SetSystemPaletteUse" set-system-palette-use :convention :stdcall) uint  (|hdc| hdc) (|use| uint))
(defcfun ("SetTextCharacterExtra" set-text-character-extra :convention :stdcall) :int  (|hdc| hdc) (|extra| :int))
(defcfun ("SetTextColor" set-text-color :convention :stdcall) colorref  (|hdc| hdc) (|color| colorref))
(defcfun ("SetTextAlign" set-text-align :convention :stdcall) uint  (|hdc| hdc) (|align| uint))
(defcfun ("SetTextJustification" set-text-justification :convention :stdcall) winbool  (|hdc| hdc) (|extra| :int) (|count| :int))
(defcfun ("UpdateColors" update-colors :convention :stdcall) winbool  (|hdc| hdc))
(defcfun ("AlphaBlend" alpha-blend :convention :stdcall) winbool  (|hdcDest| hdc) (|xoriginDest| :int) (|yoriginDest| :int) (|wDest| :int) (|hDest| :int) (|hdcSrc| hdc) (|xoriginSrc| :int) (|yoriginSrc| :int) (|wSrc| :int) (|hSrc| :int) (|ftn| blendfunction))
(defcfun ("TransparentBlt" transparent-blt :convention :stdcall) winbool  (|hdcDest| hdc) (|xoriginDest| :int) (|yoriginDest| :int) (|wDest| :int) (|hDest| :int) (|hdcSrc| hdc) (|xoriginSrc| :int) (|yoriginSrc| :int) (|wSrc| :int) (|hSrc| :int) (|crTransparent| uint))
(defcfun ("GradientFill" gradient-fill :convention :stdcall) winbool  (|hdc| hdc) (|pVertex| ptrivertex) (|nVertex| ulong) (|pMesh| pvoid) (|nMesh| ulong) (|ulMode| ulong))
(defcfun ("PlayMetaFileRecord" play-meta-file-record :convention :stdcall) winbool  (|hdc| hdc) (|lpHandleTable| lphandletable) (|lpMR| lpmetarecord) (|noObjs| uint))
(defcfun ("EnumMetaFile" enum-meta-file :convention :stdcall) winbool  (|hdc| hdc) (|hmf| hmetafile) (|proc| mfenumproc) (|param| lparam))
(defcfun ("CloseEnhMetaFile" close-enh-meta-file :convention :stdcall) henhmetafile  (|hdc| hdc))
(defcfun ("CopyEnhMetaFileA" copy-enh-meta-file-a :convention :stdcall) henhmetafile  (|hEnh| henhmetafile) (|lpFileName| lpcstr))
(defcfun ("CopyEnhMetaFileW" copy-enh-meta-file-w :convention :stdcall) henhmetafile  (|hEnh| henhmetafile) (|lpFileName| lpcwstr))
(defcfun ("CreateEnhMetaFileA" create-enh-meta-file-a :convention :stdcall) hdc  (|hdc| hdc) (|lpFilename| lpcstr) (|lprc| :pointer) (|lpDesc| lpcstr))
(defcfun ("CreateEnhMetaFileW" create-enh-meta-file-w :convention :stdcall) hdc  (|hdc| hdc) (|lpFilename| lpcwstr) (|lprc| :pointer) (|lpDesc| lpcwstr))
(defcfun ("DeleteEnhMetaFile" delete-enh-meta-file :convention :stdcall) winbool  (|hmf| henhmetafile))
(defcfun ("EnumEnhMetaFile" enum-enh-meta-file :convention :stdcall) winbool  (|hdc| hdc) (|hmf| henhmetafile) (|proc| enhmfenumproc) (|param| lpvoid) (|lpRect| :pointer))
(defcfun ("GetEnhMetaFileA" get-enh-meta-file-a :convention :stdcall) henhmetafile  (|lpName| lpcstr))
(defcfun ("GetEnhMetaFileW" get-enh-meta-file-w :convention :stdcall) henhmetafile  (|lpName| lpcwstr))
(defcfun ("GetEnhMetaFileBits" get-enh-meta-file-bits :convention :stdcall) uint  (|hEMF| henhmetafile) (|nSize| uint) (|lpData| lpbyte))
(defcfun ("GetEnhMetaFileDescriptionA" get-enh-meta-file-description-a :convention :stdcall) uint  (|hemf| henhmetafile) (|cchBuffer| uint) (|lpDescription| lpstr))
(defcfun ("GetEnhMetaFileDescriptionW" get-enh-meta-file-description-w :convention :stdcall) uint  (|hemf| henhmetafile) (|cchBuffer| uint) (|lpDescription| lpwstr))
(defcfun ("GetEnhMetaFileHeader" get-enh-meta-file-header :convention :stdcall) uint  (|hemf| henhmetafile) (|nSize| uint) (|lpEnhMetaHeader| lpenhmetaheader))
(defcfun ("GetEnhMetaFilePaletteEntries" get-enh-meta-file-palette-entries :convention :stdcall) uint  (|hemf| henhmetafile) (|nNumEntries| uint) (|lpPaletteEntries| lppaletteentry))
(defcfun ("GetEnhMetaFilePixelFormat" get-enh-meta-file-pixel-format :convention :stdcall) uint  (|hemf| henhmetafile) (|cbBuffer| uint) (|ppfd| :pointer))
(defcfun ("GetWinMetaFileBits" get-win-meta-file-bits :convention :stdcall) uint  (|hemf| henhmetafile) (|cbData16| uint) (|pData16| lpbyte) (|iMapMode| int) (|hdcRef| hdc))
(defcfun ("PlayEnhMetaFile" play-enh-meta-file :convention :stdcall) winbool  (|hdc| hdc) (|hmf| henhmetafile) (|lprect| :pointer))
(defcfun ("PlayEnhMetaFileRecord" play-enh-meta-file-record :convention :stdcall) winbool  (|hdc| hdc) (|pht| lphandletable) (|pmr| :pointer) (|cht| uint))
(defcfun ("SetEnhMetaFileBits" set-enh-meta-file-bits :convention :stdcall) henhmetafile  (|nSize| uint) (|pb| :pointer))
(defcfun ("SetWinMetaFileBits" set-win-meta-file-bits :convention :stdcall) henhmetafile  (|nSize| uint) (|lpMeta16Data| :pointer) (|hdcRef| hdc) (|lpMFP| :pointer))
(defcfun ("GdiComment" gdi-comment :convention :stdcall) winbool  (|hdc| hdc) (|nSize| uint) (|lpData| :pointer))
(defcfun ("GetTextMetricsA" get-text-metrics-a :convention :stdcall) winbool  (|hdc| hdc) (|lptm| lptextmetrica))
(defcfun ("GetTextMetricsW" get-text-metrics-w :convention :stdcall) winbool  (|hdc| hdc) (|lptm| lptextmetricw))
(defcfun ("AngleArc" angle-arc :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int) (|r| dword) (|StartAngle| float) (|SweepAngle| float))
(defcfun ("PolyPolyline" poly-polyline :convention :stdcall) winbool  (|hdc| hdc) (|apt| :pointer) (|asz| :pointer) (|csz| dword))
(defcfun ("GetWorldTransform" get-world-transform :convention :stdcall) winbool  (|hdc| hdc) (|lpxf| lpxform))
(defcfun ("SetWorldTransform" set-world-transform :convention :stdcall) winbool  (|hdc| hdc) (|lpxf| :pointer))
(defcfun ("ModifyWorldTransform" modify-world-transform :convention :stdcall) winbool  (|hdc| hdc) (|lpxf| :pointer) (|mode| dword))
(defcfun ("CombineTransform" combine-transform :convention :stdcall) winbool  (|lpxfOut| lpxform) (|lpxf1| :pointer) (|lpxf2| :pointer))
(defcfun ("CreateDIBSection" create-dib-section :convention :stdcall) hbitmap  (|hdc| hdc) (|lpbmi| :pointer) (|usage| uint) (|ppvBits| :pointer) (|hSection| handle) (|offset| dword))
(defcfun ("GetDIBColorTable" get-dib-color-table :convention :stdcall) uint  (|hdc| hdc) (|iStart| uint) (|cEntries| uint) (|prgbq| :pointer))
(defcfun ("SetDIBColorTable" set-dib-color-table :convention :stdcall) uint  (|hdc| hdc) (|iStart| uint) (|cEntries| uint) (|prgbq| :pointer))
(defcfun ("SetColorAdjustment" set-color-adjustment :convention :stdcall) winbool  (|hdc| hdc) (|lpca| :pointer))
(defcfun ("GetColorAdjustment" get-color-adjustment :convention :stdcall) winbool  (|hdc| hdc) (|lpca| lpcoloradjustment))
(defcfun ("CreateHalftonePalette" create-halftone-palette :convention :stdcall) hpalette  (|hdc| hdc))
(defcfun ("StartDocA" start-doc-a :convention :stdcall) :int  (|hdc| hdc) (|lpdi| :pointer))
(defcfun ("StartDocW" start-doc-w :convention :stdcall) :int  (|hdc| hdc) (|lpdi| :pointer))
(defcfun ("EndDoc" end-doc :convention :stdcall) :int  (|hdc| hdc))
(defcfun ("StartPage" start-page :convention :stdcall) :int  (|hdc| hdc))
(defcfun ("EndPage" end-page :convention :stdcall) :int  (|hdc| hdc))
(defcfun ("AbortDoc" abort-doc :convention :stdcall) :int  (|hdc| hdc))
(defcfun ("SetAbortProc" set-abort-proc :convention :stdcall) :int  (|hdc| hdc) (|proc| abortproc))
(defcfun ("AbortPath" abort-path :convention :stdcall) winbool  (|hdc| hdc))
(defcfun ("ArcTo" arc-to :convention :stdcall) winbool  (|hdc| hdc) (|left| :int) (|top| :int) (|right| :int) (|bottom| :int) (|xr1| :int) (|yr1| :int) (|xr2| :int) (|yr2| :int))
(defcfun ("BeginPath" begin-path :convention :stdcall) winbool  (|hdc| hdc))
(defcfun ("CloseFigure" close-figure :convention :stdcall) winbool  (|hdc| hdc))
(defcfun ("EndPath" end-path :convention :stdcall) winbool  (|hdc| hdc))
(defcfun ("FillPath" fill-path :convention :stdcall) winbool  (|hdc| hdc))
(defcfun ("FlattenPath" flatten-path :convention :stdcall) winbool  (|hdc| hdc))
(defcfun ("GetPath" get-path :convention :stdcall) :int  (|hdc| hdc) (|apt| lppoint) (|aj| lpbyte) (|cpt| :int))
(defcfun ("PathToRegion" path-to-region :convention :stdcall) hrgn  (|hdc| hdc))
(defcfun ("PolyDraw" poly-draw :convention :stdcall) winbool  (|hdc| hdc) (|apt| :pointer) (|aj| :pointer) (|cpt| :int))
(defcfun ("SelectClipPath" select-clip-path :convention :stdcall) winbool  (|hdc| hdc) (|mode| :int))
(defcfun ("SetArcDirection" set-arc-direction :convention :stdcall) :int  (|hdc| hdc) (|dir| :int))
(defcfun ("SetMiterLimit" set-miter-limit :convention :stdcall) winbool  (|hdc| hdc) (|limit| float) (|old| pfloat))
(defcfun ("StrokeAndFillPath" stroke-and-fill-path :convention :stdcall) winbool  (|hdc| hdc))
(defcfun ("StrokePath" stroke-path :convention :stdcall) winbool  (|hdc| hdc))
(defcfun ("WidenPath" widen-path :convention :stdcall) winbool  (|hdc| hdc))
(defcfun ("ExtCreatePen" ext-create-pen :convention :stdcall) hpen  (|iPenStyle| dword) (|cWidth| dword) (|plbrush| :pointer) (|cStyle| dword) (|pstyle| :pointer))
(defcfun ("GetMiterLimit" get-miter-limit :convention :stdcall) winbool  (|hdc| hdc) (|plimit| pfloat))
(defcfun ("GetArcDirection" get-arc-direction :convention :stdcall) :int  (|hdc| hdc))
(defcfun ("GetObjectA" get-object-a :convention :stdcall) :int  (|h| handle) (|c| :int) (|pv| lpvoid))
(defcfun ("GetObjectW" get-object-w :convention :stdcall) :int  (|h| handle) (|c| :int) (|pv| lpvoid))
(defcfun ("MoveToEx" move-to-ex :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int) (|lppt| lppoint))
(defcfun ("TextOutA" text-out-a :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int) (|lpString| lpcstr) (|c| :int))
(defcfun ("TextOutW" text-out-w :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int) (|lpString| lpcwstr) (|c| :int))
(defcfun ("ExtTextOutA" ext-text-out-a :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int) (|options| uint) (|lprect| :pointer) (|lpString| lpcstr) (|c| uint) (|lpDx| :pointer))
(defcfun ("ExtTextOutW" ext-text-out-w :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int) (|options| uint) (|lprect| :pointer) (|lpString| lpcwstr) (|c| uint) (|lpDx| :pointer))
(defcfun ("PolyTextOutA" poly-text-out-a :convention :stdcall) winbool  (|hdc| hdc) (|ppt| :pointer) (|nstrings| :int))
(defcfun ("PolyTextOutW" poly-text-out-w :convention :stdcall) winbool  (|hdc| hdc) (|ppt| :pointer) (|nstrings| :int))
(defcfun ("CreatePolygonRgn" create-polygon-rgn :convention :stdcall) hrgn  (|pptl| :pointer) (|cPoint| :int) (|iMode| :int))
(defcfun ("DPtoLP" dpto-lp :convention :stdcall) winbool  (|hdc| hdc) (|lppt| lppoint) (|c| :int))
(defcfun ("LPtoDP" lpto-dp :convention :stdcall) winbool  (|hdc| hdc) (|lppt| lppoint) (|c| :int))
(defcfun ("Polygon" polygon :convention :stdcall) winbool  (|hdc| hdc) (|apt| :pointer) (|cpt| :int))
(defcfun ("Polyline" polyline :convention :stdcall) winbool  (|hdc| hdc) (|apt| :pointer) (|cpt| :int))
(defcfun ("PolyBezier" poly-bezier :convention :stdcall) winbool  (|hdc| hdc) (|apt| :pointer) (|cpt| dword))
(defcfun ("PolyBezierTo" poly-bezier-to :convention :stdcall) winbool  (|hdc| hdc) (|apt| :pointer) (|cpt| dword))
(defcfun ("PolylineTo" polyline-to :convention :stdcall) winbool  (|hdc| hdc) (|apt| :pointer) (|cpt| dword))
(defcfun ("SetViewportExtEx" set-viewport-ext-ex :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int) (|lpsz| lpsize))
(defcfun ("SetViewportOrgEx" set-viewport-org-ex :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int) (|lppt| lppoint))
(defcfun ("SetWindowExtEx" set-window-ext-ex :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int) (|lpsz| lpsize))
(defcfun ("SetWindowOrgEx" set-window-org-ex :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int) (|lppt| lppoint))
(defcfun ("OffsetViewportOrgEx" offset-viewport-org-ex :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int) (|lppt| lppoint))
(defcfun ("OffsetWindowOrgEx" offset-window-org-ex :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int) (|lppt| lppoint))
(defcfun ("ScaleViewportExtEx" scale-viewport-ext-ex :convention :stdcall) winbool  (|hdc| hdc) (|xn| :int) (|dx| :int) (|yn| :int) (|yd| :int) (|lpsz| lpsize))
(defcfun ("ScaleWindowExtEx" scale-window-ext-ex :convention :stdcall) winbool  (|hdc| hdc) (|xn| :int) (|xd| :int) (|yn| :int) (|yd| :int) (|lpsz| lpsize))
(defcfun ("SetBitmapDimensionEx" set-bitmap-dimension-ex :convention :stdcall) winbool  (|hbm| hbitmap) (|w| :int) (|h| :int) (|lpsz| lpsize))
(defcfun ("SetBrushOrgEx" set-brush-org-ex :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int) (|lppt| lppoint))
(defcfun ("GetTextFaceA" get-text-face-a :convention :stdcall) :int  (|hdc| hdc) (|c| :int) (|lpName| lpstr))
(defcfun ("GetTextFaceW" get-text-face-w :convention :stdcall) :int  (|hdc| hdc) (|c| :int) (|lpName| lpwstr))
(defcfun ("GetKerningPairsA" get-kerning-pairs-a :convention :stdcall) dword  (|hdc| hdc) (|nPairs| dword) (|lpKernPair| lpkerningpair))
(defcfun ("GetKerningPairsW" get-kerning-pairs-w :convention :stdcall) dword  (|hdc| hdc) (|nPairs| dword) (|lpKernPair| lpkerningpair))
(defcfun ("GetDCOrgEx" get-dc-org-ex :convention :stdcall) winbool  (|hdc| hdc) (|lppt| lppoint))
(defcfun ("FixBrushOrgEx" fix-brush-org-ex :convention :stdcall) winbool  (|hdc| hdc) (|x| :int) (|y| :int) (|ptl| lppoint))
(defcfun ("UnrealizeObject" unrealize-object :convention :stdcall) winbool  (|h| hgdiobj))
(defcfun ("GdiFlush" gdi-flush :convention :stdcall) winbool )
(defcfun ("GdiSetBatchLimit" gdi-set-batch-limit :convention :stdcall) dword  (|dw| dword))
(defcfun ("GdiGetBatchLimit" gdi-get-batch-limit :convention :stdcall) dword )
(defcfun ("SetICMMode" set-icm-mode :convention :stdcall) :int  (|hdc| hdc) (|mode| :int))
(defcfun ("CheckColorsInGamut" check-colors-in-gamut :convention :stdcall) winbool  (|hdc| hdc) (|lpRGBTriple| lpvoid) (|dlpBuffer| lpvoid) (|nCount| dword))
(defcfun ("GetColorSpace" get-color-space :convention :stdcall) hcolorspace  (|hdc| hdc))
(defcfun ("GetLogColorSpaceA" get-log-color-space-a :convention :stdcall) winbool  (|hColorSpace| hcolorspace) (|lpBuffer| lplogcolorspacea) (|nSize| dword))
(defcfun ("GetLogColorSpaceW" get-log-color-space-w :convention :stdcall) winbool  (|hColorSpace| hcolorspace) (|lpBuffer| lplogcolorspacew) (|nSize| dword))
(defcfun ("CreateColorSpaceA" create-color-space-a :convention :stdcall) hcolorspace  (|lplcs| lplogcolorspacea))
(defcfun ("CreateColorSpaceW" create-color-space-w :convention :stdcall) hcolorspace  (|lplcs| lplogcolorspacew))
(defcfun ("SetColorSpace" set-color-space :convention :stdcall) hcolorspace  (|hdc| hdc) (|hcs| hcolorspace))
(defcfun ("DeleteColorSpace" delete-color-space :convention :stdcall) winbool  (|hcs| hcolorspace))
(defcfun ("GetICMProfileA" get-icm-profile-a :convention :stdcall) winbool  (|hdc| hdc) (|pBufSize| lpdword) (|pszFilename| lpstr))
(defcfun ("GetICMProfileW" get-icm-profile-w :convention :stdcall) winbool  (|hdc| hdc) (|pBufSize| lpdword) (|pszFilename| lpwstr))
(defcfun ("SetICMProfileA" set-icm-profile-a :convention :stdcall) winbool  (|hdc| hdc) (|lpFileName| lpstr))
(defcfun ("SetICMProfileW" set-icm-profile-w :convention :stdcall) winbool  (|hdc| hdc) (|lpFileName| lpwstr))
(defcfun ("GetDeviceGammaRamp" get-device-gamma-ramp :convention :stdcall) winbool  (|hdc| hdc) (|lpRamp| lpvoid))
(defcfun ("SetDeviceGammaRamp" set-device-gamma-ramp :convention :stdcall) winbool  (|hdc| hdc) (|lpRamp| lpvoid))
(defcfun ("ColorMatchToTarget" color-match-to-target :convention :stdcall) winbool  (|hdc| hdc) (|hdcTarget| hdc) (|action| dword))
(defcfun ("EnumICMProfilesA" enum-icm-profiles-a :convention :stdcall) :int  (|hdc| hdc) (|proc| icmenumproca) (|param| lparam))
(defcfun ("EnumICMProfilesW" enum-icm-profiles-w :convention :stdcall) :int  (|hdc| hdc) (|proc| icmenumprocw) (|param| lparam))
(defcfun ("UpdateICMRegKeyA" update-icm-reg-key-a :convention :stdcall) winbool  (|reserved| dword) (|lpszCMID| lpstr) (|lpszFileName| lpstr) (|command| uint))
(defcfun ("UpdateICMRegKeyW" update-icm-reg-key-w :convention :stdcall) winbool  (|reserved| dword) (|lpszCMID| lpwstr) (|lpszFileName| lpwstr) (|command| uint))
(defcfun ("ColorCorrectPalette" color-correct-palette :convention :stdcall) winbool  (|hdc| hdc) (|hPal| hpalette) (|deFirst| dword) (|num| dword))
(defcfun ("wglCopyContext" wglcopycontext :convention :stdcall) winbool  (arg0 hglrc) (arg1 hglrc) (arg2 uint))
(defcfun ("wglCreateContext" wglcreatecontext :convention :stdcall) hglrc  (arg0 hdc))
(defcfun ("wglCreateLayerContext" wglcreatelayercontext :convention :stdcall) hglrc  (arg0 hdc) (arg1 :int))
(defcfun ("wglDeleteContext" wgldeletecontext :convention :stdcall) winbool  (arg0 hglrc))
(defcfun ("wglGetCurrentContext" wglgetcurrentcontext :convention :stdcall) hglrc )
(defcfun ("wglGetCurrentDC" wglgetcurrentdc :convention :stdcall) hdc )
(defcfun ("wglGetProcAddress" wglgetprocaddress :convention :stdcall) proc  (arg0 lpcstr))
(defcfun ("wglMakeCurrent" wglmakecurrent :convention :stdcall) winbool  (arg0 hdc) (arg1 hglrc))
(defcfun ("wglShareLists" wglsharelists :convention :stdcall) winbool  (arg0 hglrc) (arg1 hglrc))
(defcfun ("wglUseFontBitmapsA" wglusefontbitmapsa :convention :stdcall) winbool  (arg0 hdc) (arg1 dword) (arg2 dword) (arg3 dword))
(defcfun ("wglUseFontBitmapsW" wglusefontbitmapsw :convention :stdcall) winbool  (arg0 hdc) (arg1 dword) (arg2 dword) (arg3 dword))
(defcfun ("SwapBuffers" swap-buffers :convention :stdcall) winbool  (arg0 hdc))
(defcfun ("wglUseFontOutlinesA" wglusefontoutlinesa :convention :stdcall) winbool  (arg0 hdc) (arg1 dword) (arg2 dword) (arg3 dword) (arg4 float) (arg5 float) (arg6 :int) (arg7 lpglyphmetricsfloat))
(defcfun ("wglUseFontOutlinesW" wglusefontoutlinesw :convention :stdcall) winbool  (arg0 hdc) (arg1 dword) (arg2 dword) (arg3 dword) (arg4 float) (arg5 float) (arg6 :int) (arg7 lpglyphmetricsfloat))
(defcfun ("wglDescribeLayerPlane" wgldescribelayerplane :convention :stdcall) winbool  (arg0 hdc) (arg1 :int) (arg2 :int) (arg3 uint) (arg4 lplayerplanedescriptor))
(defcfun ("wglSetLayerPaletteEntries" wglsetlayerpaletteentries :convention :stdcall) :int  (arg0 hdc) (arg1 :int) (arg2 :int) (arg3 :int) (arg4 :pointer))
(defcfun ("wglGetLayerPaletteEntries" wglgetlayerpaletteentries :convention :stdcall) :int  (arg0 hdc) (arg1 :int) (arg2 :int) (arg3 :int) (arg4 :pointer))
(defcfun ("wglRealizeLayerPalette" wglrealizelayerpalette :convention :stdcall) winbool  (arg0 hdc) (arg1 :int) (arg2 winbool))
(defcfun ("wglSwapLayerBuffers" wglswaplayerbuffers :convention :stdcall) winbool  (arg0 hdc) (arg1 uint))
(defcfun ("wglSwapMultipleBuffers" wglswapmultiplebuffers :convention :stdcall) dword  (arg0 uint) (arg1 :pointer))
(defcfun ("wvsprintfA" wvsprintfa :convention :stdcall) :int  (arg0 lpstr) (arg1 lpcstr) (|arglist| |va_list|))
(defcfun ("wvsprintfW" wvsprintfw :convention :stdcall) :int  (arg0 lpwstr) (arg1 lpcwstr) (|arglist| |va_list|))
(defcfun ("wsprintfA" wsprintfa) :int  (arg0 lpstr) (arg1 lpcstr) &rest)
(defcfun ("wsprintfW" wsprintfw) :int  (arg0 lpwstr) (arg1 lpcwstr) &rest)
(defcfun ("LoadKeyboardLayoutA" load-keyboard-layout-a :convention :stdcall) hkl  (|pwszKLID| lpcstr) (|Flags| uint))
(defcfun ("LoadKeyboardLayoutW" load-keyboard-layout-w :convention :stdcall) hkl  (|pwszKLID| lpcwstr) (|Flags| uint))
(defcfun ("ActivateKeyboardLayout" activate-keyboard-layout :convention :stdcall) hkl  (|hkl| hkl) (|Flags| uint))
(defcfun ("ToUnicodeEx" to-unicode-ex :convention :stdcall) :int  (|wVirtKey| uint) (|wScanCode| uint) (|lpKeyState| :pointer) (|pwszBuff| lpwstr) (|cchBuff| :int) (|wFlags| uint) (|dwhkl| hkl))
(defcfun ("UnloadKeyboardLayout" unload-keyboard-layout :convention :stdcall) winbool  (|hkl| hkl))
(defcfun ("GetKeyboardLayoutNameA" get-keyboard-layout-name-a :convention :stdcall) winbool  (|pwszKLID| lpstr))
(defcfun ("GetKeyboardLayoutNameW" get-keyboard-layout-name-w :convention :stdcall) winbool  (|pwszKLID| lpwstr))
(defcfun ("GetKeyboardLayoutList" get-keyboard-layout-list :convention :stdcall) :int  (|nBuff| :int) (|lpList| :pointer))
(defcfun ("GetKeyboardLayout" get-keyboard-layout :convention :stdcall) hkl  (|idThread| dword))
(defcfun ("GetMouseMovePointsEx" get-mouse-move-points-ex :convention :stdcall) :int  (|cbSize| uint) (|lppt| lpmousemovepoint) (|lpptBuf| lpmousemovepoint) (|nBufPoints| :int) (|resolution| dword))
(defcfun ("CreateDesktopA" create-desktop-a :convention :stdcall) hdesk  (|lpszDesktop| lpcstr) (|lpszDevice| lpcstr) (|pDevmode| lpdevmodea) (|dwFlags| dword) (|dwDesiredAccess| access_mask) (|lpsa| lpsecurity_attributes))
(defcfun ("CreateDesktopW" create-desktop-w :convention :stdcall) hdesk  (|lpszDesktop| lpcwstr) (|lpszDevice| lpcwstr) (|pDevmode| lpdevmodew) (|dwFlags| dword) (|dwDesiredAccess| access_mask) (|lpsa| lpsecurity_attributes))
(defcfun ("OpenDesktopA" open-desktop-a :convention :stdcall) hdesk  (|lpszDesktop| lpcstr) (|dwFlags| dword) (|fInherit| winbool) (|dwDesiredAccess| access_mask))
(defcfun ("OpenDesktopW" open-desktop-w :convention :stdcall) hdesk  (|lpszDesktop| lpcwstr) (|dwFlags| dword) (|fInherit| winbool) (|dwDesiredAccess| access_mask))
(defcfun ("OpenInputDesktop" open-input-desktop :convention :stdcall) hdesk  (|dwFlags| dword) (|fInherit| winbool) (|dwDesiredAccess| access_mask))
(defcfun ("EnumDesktopsA" enum-desktops-a :convention :stdcall) winbool  (|hwinsta| hwinsta) (|lpEnumFunc| desktopenumproca) (|lParam| lparam))
(defcfun ("EnumDesktopsW" enum-desktops-w :convention :stdcall) winbool  (|hwinsta| hwinsta) (|lpEnumFunc| desktopenumprocw) (|lParam| lparam))
(defcfun ("EnumDesktopWindows" enum-desktop-windows :convention :stdcall) winbool  (|hDesktop| hdesk) (|lpfn| wndenumproc) (|lParam| lparam))
(defcfun ("SwitchDesktop" switch-desktop :convention :stdcall) winbool  (|hDesktop| hdesk))
(defcfun ("SetThreadDesktop" set-thread-desktop :convention :stdcall) winbool  (|hDesktop| hdesk))
(defcfun ("CloseDesktop" close-desktop :convention :stdcall) winbool  (|hDesktop| hdesk))
(defcfun ("GetThreadDesktop" get-thread-desktop :convention :stdcall) hdesk  (|dwThreadId| dword))
(defcfun ("CreateWindowStationA" create-window-station-a :convention :stdcall) hwinsta  (|lpwinsta| lpcstr) (|dwFlags| dword) (|dwDesiredAccess| access_mask) (|lpsa| lpsecurity_attributes))
(defcfun ("CreateWindowStationW" create-window-station-w :convention :stdcall) hwinsta  (|lpwinsta| lpcwstr) (|dwFlags| dword) (|dwDesiredAccess| access_mask) (|lpsa| lpsecurity_attributes))
(defcfun ("OpenWindowStationA" open-window-station-a :convention :stdcall) hwinsta  (|lpszWinSta| lpcstr) (|fInherit| winbool) (|dwDesiredAccess| access_mask))
(defcfun ("OpenWindowStationW" open-window-station-w :convention :stdcall) hwinsta  (|lpszWinSta| lpcwstr) (|fInherit| winbool) (|dwDesiredAccess| access_mask))
(defcfun ("EnumWindowStationsA" enum-window-stations-a :convention :stdcall) winbool  (|lpEnumFunc| winstaenumproca) (|lParam| lparam))
(defcfun ("EnumWindowStationsW" enum-window-stations-w :convention :stdcall) winbool  (|lpEnumFunc| winstaenumprocw) (|lParam| lparam))
(defcfun ("CloseWindowStation" close-window-station :convention :stdcall) winbool  (|hWinSta| hwinsta))
(defcfun ("SetProcessWindowStation" set-process-window-station :convention :stdcall) winbool  (|hWinSta| hwinsta))
(defcfun ("GetProcessWindowStation" get-process-window-station :convention :stdcall) hwinsta )
(defcfun ("SetUserObjectSecurity" set-user-object-security :convention :stdcall) winbool  (|hObj| handle) (|pSIRequested| psecurity_information) (|pSID| psecurity_descriptor))
(defcfun ("GetUserObjectSecurity" get-user-object-security :convention :stdcall) winbool  (|hObj| handle) (|pSIRequested| psecurity_information) (|pSID| psecurity_descriptor) (|nLength| dword) (|lpnLengthNeeded| lpdword))
(defcfun ("GetUserObjectInformationA" get-user-object-information-a :convention :stdcall) winbool  (|hObj| handle) (|nIndex| :int) (|pvInfo| pvoid) (|nLength| dword) (|lpnLengthNeeded| lpdword))
(defcfun ("GetUserObjectInformationW" get-user-object-information-w :convention :stdcall) winbool  (|hObj| handle) (|nIndex| :int) (|pvInfo| pvoid) (|nLength| dword) (|lpnLengthNeeded| lpdword))
(defcfun ("SetUserObjectInformationA" set-user-object-information-a :convention :stdcall) winbool  (|hObj| handle) (|nIndex| :int) (|pvInfo| pvoid) (|nLength| dword))
(defcfun ("SetUserObjectInformationW" set-user-object-information-w :convention :stdcall) winbool  (|hObj| handle) (|nIndex| :int) (|pvInfo| pvoid) (|nLength| dword))
(defcfun ("IsHungAppWindow" is-hung-app-window :convention :stdcall) winbool  (|hwnd| hwnd))
(defcfun ("DisableProcessWindowsGhosting" disable-process-windows-ghosting :convention :stdcall) :void )
(defcfun ("RegisterWindowMessageA" register-window-message-a :convention :stdcall) uint  (|lpString| lpcstr))
(defcfun ("RegisterWindowMessageW" register-window-message-w :convention :stdcall) uint  (|lpString| lpcwstr))
(defcfun ("TrackMouseEvent" track-mouse-event :convention :stdcall) winbool  (|lpEventTrack| lptrackmouseevent))
(defcfun ("DrawEdge" draw-edge :convention :stdcall) winbool  (|hdc| hdc) (|qrc| lprect) (|edge| uint) (|grfFlags| uint))
(defcfun ("DrawFrameControl" draw-frame-control :convention :stdcall) winbool  (arg0 hdc) (arg1 lprect) (arg2 uint) (arg3 uint))
(defcfun ("DrawCaption" draw-caption :convention :stdcall) winbool  (|hwnd| hwnd) (|hdc| hdc) (|lprect| :pointer) (|flags| uint))
(defcfun ("DrawAnimatedRects" draw-animated-rects :convention :stdcall) winbool  (|hwnd| hwnd) (|idAni| :int) (|lprcFrom| :pointer) (|lprcTo| :pointer))
(defcfun ("GetMessageA" get-message-a :convention :stdcall) winbool  (|lpMsg| lpmsg) (|hWnd| hwnd) (|wMsgFilterMin| uint) (|wMsgFilterMax| uint))
(defcfun ("GetMessageW" get-message-w :convention :stdcall) winbool  (|lpMsg| lpmsg) (|hWnd| hwnd) (|wMsgFilterMin| uint) (|wMsgFilterMax| uint))
(defcfun ("TranslateMessage" translate-message :convention :stdcall) winbool  (|lpMsg| :pointer))
(defcfun ("DispatchMessageA" dispatch-message-a :convention :stdcall) lresult  (|lpMsg| :pointer))
(defcfun ("DispatchMessageW" dispatch-message-w :convention :stdcall) lresult  (|lpMsg| :pointer))
(defcfun ("SetMessageQueue" set-message-queue :convention :stdcall) winbool  (|cMessagesMax| :int))
(defcfun ("PeekMessageA" peek-message-a :convention :stdcall) winbool  (|lpMsg| lpmsg) (|hWnd| hwnd) (|wMsgFilterMin| uint) (|wMsgFilterMax| uint) (|wRemoveMsg| uint))
(defcfun ("PeekMessageW" peek-message-w :convention :stdcall) winbool  (|lpMsg| lpmsg) (|hWnd| hwnd) (|wMsgFilterMin| uint) (|wMsgFilterMax| uint) (|wRemoveMsg| uint))
(defcfun ("RegisterHotKey" register-hot-key :convention :stdcall) winbool  (|hWnd| hwnd) (|id| :int) (|fsModifiers| uint) (|vk| uint))
(defcfun ("UnregisterHotKey" unregister-hot-key :convention :stdcall) winbool  (|hWnd| hwnd) (|id| :int))
(defcfun ("ExitWindowsEx" exit-windows-ex :convention :stdcall) winbool  (|uFlags| uint) (|dwReason| dword))
(defcfun ("SwapMouseButton" swap-mouse-button :convention :stdcall) winbool  (|fSwap| winbool))
(defcfun ("GetMessagePos" get-message-pos :convention :stdcall) dword )
(defcfun ("GetMessageTime" get-message-time :convention :stdcall) long )
(defcfun ("GetMessageExtraInfo" get-message-extra-info :convention :stdcall) lparam )
(defcfun ("IsWow64Message" is-wow-64-message :convention :stdcall) winbool )
(defcfun ("SetMessageExtraInfo" set-message-extra-info :convention :stdcall) lparam  (|lParam| lparam))
(defcfun ("SendMessageA" send-message-a :convention :stdcall) lresult  (|hWnd| hwnd) (|Msg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("SendMessageW" send-message-w :convention :stdcall) lresult  (|hWnd| hwnd) (|Msg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("SendMessageTimeoutA" send-message-timeout-a :convention :stdcall) lresult  (|hWnd| hwnd) (|Msg| uint) (|wParam| wparam) (|lParam| lparam) (|fuFlags| uint) (|uTimeout| uint) (|lpdwResult| pdword_ptr))
(defcfun ("SendMessageTimeoutW" send-message-timeout-w :convention :stdcall) lresult  (|hWnd| hwnd) (|Msg| uint) (|wParam| wparam) (|lParam| lparam) (|fuFlags| uint) (|uTimeout| uint) (|lpdwResult| pdword_ptr))
(defcfun ("SendNotifyMessageA" send-notify-message-a :convention :stdcall) winbool  (|hWnd| hwnd) (|Msg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("SendNotifyMessageW" send-notify-message-w :convention :stdcall) winbool  (|hWnd| hwnd) (|Msg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("SendMessageCallbackA" send-message-callback-a :convention :stdcall) winbool  (|hWnd| hwnd) (|Msg| uint) (|wParam| wparam) (|lParam| lparam) (|lpResultCallBack| sendasyncproc) (|dwData| ulong_ptr))
(defcfun ("SendMessageCallbackW" send-message-callback-w :convention :stdcall) winbool  (|hWnd| hwnd) (|Msg| uint) (|wParam| wparam) (|lParam| lparam) (|lpResultCallBack| sendasyncproc) (|dwData| ulong_ptr))
(defcfun ("BroadcastSystemMessageExA" broadcast-system-message-ex-a :convention :stdcall) :long  (|flags| dword) (|lpInfo| lpdword) (|Msg| uint) (|wParam| wparam) (|lParam| lparam) (|pbsmInfo| pbsminfo))
(defcfun ("BroadcastSystemMessageExW" broadcast-system-message-ex-w :convention :stdcall) :long  (|flags| dword) (|lpInfo| lpdword) (|Msg| uint) (|wParam| wparam) (|lParam| lparam) (|pbsmInfo| pbsminfo))
(defcfun ("BroadcastSystemMessageA" broadcast-system-message-a :convention :stdcall) :long  (|flags| dword) (|lpInfo| lpdword) (|Msg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("BroadcastSystemMessageW" broadcast-system-message-w :convention :stdcall) :long  (|flags| dword) (|lpInfo| lpdword) (|Msg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("RegisterDeviceNotificationA" register-device-notification-a :convention :stdcall) hdevnotify  (|hRecipient| handle) (|NotificationFilter| lpvoid) (|Flags| dword))
(defcfun ("RegisterDeviceNotificationW" register-device-notification-w :convention :stdcall) hdevnotify  (|hRecipient| handle) (|NotificationFilter| lpvoid) (|Flags| dword))
(defcfun ("UnregisterDeviceNotification" unregister-device-notification :convention :stdcall) winbool  (|Handle| hdevnotify))
(defcfun ("PostMessageA" post-message-a :convention :stdcall) winbool  (|hWnd| hwnd) (|Msg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("PostMessageW" post-message-w :convention :stdcall) winbool  (|hWnd| hwnd) (|Msg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("PostThreadMessageA" post-thread-message-a :convention :stdcall) winbool  (|idThread| dword) (|Msg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("PostThreadMessageW" post-thread-message-w :convention :stdcall) winbool  (|idThread| dword) (|Msg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("AttachThreadInput" attach-thread-input :convention :stdcall) winbool  (|idAttach| dword) (|idAttachTo| dword) (|fAttach| winbool))
(defcfun ("ReplyMessage" reply-message :convention :stdcall) winbool  (|lResult| lresult))
(defcfun ("WaitMessage" wait-message :convention :stdcall) winbool )
(defcfun ("WaitForInputIdle" wait-for-input-idle :convention :stdcall) dword  (|hProcess| handle) (|dwMilliseconds| dword))
(defcfun ("DefWindowProcA" def-window-proc-a :convention :stdcall) lresult  (|hWnd| hwnd) (|Msg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("DefWindowProcW" def-window-proc-w :convention :stdcall) lresult  (|hWnd| hwnd) (|Msg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("PostQuitMessage" post-quit-message :convention :stdcall) :void  (|nExitCode| :int))
(defcfun ("CallWindowProcA" call-window-proc-a :convention :stdcall) lresult  (|lpPrevWndFunc| wndproc) (|hWnd| hwnd) (|Msg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("CallWindowProcW" call-window-proc-w :convention :stdcall) lresult  (|lpPrevWndFunc| wndproc) (|hWnd| hwnd) (|Msg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("InSendMessage" in-send-message :convention :stdcall) winbool )
(defcfun ("InSendMessageEx" in-send-message-ex :convention :stdcall) dword  (|lpReserved| lpvoid))
(defcfun ("GetDoubleClickTime" get-double-click-time :convention :stdcall) uint )
(defcfun ("SetDoubleClickTime" set-double-click-time :convention :stdcall) winbool  (arg0 uint))
(defcfun ("RegisterClassA" register-class-a :convention :stdcall) atom  (|lpWndClass| :pointer))
(defcfun ("RegisterClassW" register-class-w :convention :stdcall) atom  (|lpWndClass| :pointer))
(defcfun ("UnregisterClassA" unregister-class-a :convention :stdcall) winbool  (|lpClassName| lpcstr) (|hInstance| hinstance))
(defcfun ("UnregisterClassW" unregister-class-w :convention :stdcall) winbool  (|lpClassName| lpcwstr) (|hInstance| hinstance))
(defcfun ("GetClassInfoA" get-class-info-a :convention :stdcall) winbool  (|hInstance| hinstance) (|lpClassName| lpcstr) (|lpWndClass| lpwndclassa))
(defcfun ("GetClassInfoW" get-class-info-w :convention :stdcall) winbool  (|hInstance| hinstance) (|lpClassName| lpcwstr) (|lpWndClass| lpwndclassw))
(defcfun ("RegisterClassExA" register-class-ex-a :convention :stdcall) atom  (arg0 :pointer))
(defcfun ("RegisterClassExW" register-class-ex-w :convention :stdcall) atom  (arg0 :pointer))
(defcfun ("GetClassInfoExA" get-class-info-ex-a :convention :stdcall) winbool  (|hInstance| hinstance) (|lpszClass| lpcstr) (|lpwcx| lpwndclassexa))
(defcfun ("GetClassInfoExW" get-class-info-ex-w :convention :stdcall) winbool  (|hInstance| hinstance) (|lpszClass| lpcwstr) (|lpwcx| lpwndclassexw))
(defcfun ("CreateWindowExA" create-window-ex-a :convention :stdcall) hwnd  (|dwExStyle| dword) (|lpClassName| lpcstr) (|lpWindowName| lpcstr) (|dwStyle| dword) (x :int) (y :int) (|nWidth| :int) (|nHeight| :int) (|hWndParent| hwnd) (|hMenu| hmenu) (|hInstance| hinstance) (|lpParam| lpvoid))
(defcfun ("CreateWindowExW" create-window-ex-w :convention :stdcall) hwnd  (|dwExStyle| dword) (|lpClassName| lpcwstr) (|lpWindowName| lpcwstr) (|dwStyle| dword) (x :int) (y :int) (|nWidth| :int) (|nHeight| :int) (|hWndParent| hwnd) (|hMenu| hmenu) (|hInstance| hinstance) (|lpParam| lpvoid))
(defcfun ("IsWindow" is-window :convention :stdcall) winbool  (|hWnd| hwnd))
(defcfun ("IsMenu" is-menu :convention :stdcall) winbool  (|hMenu| hmenu))
(defcfun ("IsChild" is-child :convention :stdcall) winbool  (|hWndParent| hwnd) (|hWnd| hwnd))
(defcfun ("DestroyWindow" destroy-window :convention :stdcall) winbool  (|hWnd| hwnd))
(defcfun ("ShowWindow" show-window :convention :stdcall) winbool  (|hWnd| hwnd) (|nCmdShow| :int))
(defcfun ("AnimateWindow" animate-window :convention :stdcall) winbool  (|hWnd| hwnd) (|dwTime| dword) (|dwFlags| dword))
(defcfun ("UpdateLayeredWindow" update-layered-window :convention :stdcall) winbool  (|hWnd| hwnd) (|hdcDst| hdc) (|pptDst| :pointer) (|psize| :pointer) (|hdcSrc| hdc) (|pptSrc| :pointer) (|crKey| colorref) (|pblend| :pointer) (|dwFlags| dword))
(defcfun ("UpdateLayeredWindowIndirect" update-layered-window-indirect :convention :stdcall) winbool  (|hWnd| hwnd) (|pULWInfo| :pointer))
(defcfun ("GetLayeredWindowAttributes" get-layered-window-attributes :convention :stdcall) winbool  (|hwnd| hwnd) (|pcrKey| :pointer) (|pbAlpha| :pointer) (|pdwFlags| :pointer))
(defcfun ("PrintWindow" print-window :convention :stdcall) winbool  (|hwnd| hwnd) (|hdcBlt| hdc) (|nFlags| uint))
(defcfun ("SetLayeredWindowAttributes" set-layered-window-attributes :convention :stdcall) winbool  (|hwnd| hwnd) (|crKey| colorref) (|bAlpha| byte) (|dwFlags| dword))
(defcfun ("ShowWindowAsync" show-window-async :convention :stdcall) winbool  (|hWnd| hwnd) (|nCmdShow| :int))
(defcfun ("FlashWindow" flash-window :convention :stdcall) winbool  (|hWnd| hwnd) (|bInvert| winbool))
(defcfun ("FlashWindowEx" flash-window-ex :convention :stdcall) winbool  (|pfwi| pflashwinfo))
(defcfun ("ShowOwnedPopups" show-owned-popups :convention :stdcall) winbool  (|hWnd| hwnd) (|fShow| winbool))
(defcfun ("OpenIcon" open-icon :convention :stdcall) winbool  (|hWnd| hwnd))
(defcfun ("CloseWindow" close-window :convention :stdcall) winbool  (|hWnd| hwnd))
(defcfun ("MoveWindow" move-window :convention :stdcall) winbool  (|hWnd| hwnd) (x :int) (y :int) (|nWidth| :int) (|nHeight| :int) (|bRepaint| winbool))
(defcfun ("SetWindowPos" set-window-pos :convention :stdcall) winbool  (|hWnd| hwnd) (|hWndInsertAfter| hwnd) (x :int) (y :int) (|cx| :int) (|cy| :int) (|uFlags| uint))
(defcfun ("GetWindowPlacement" get-window-placement :convention :stdcall) winbool  (|hWnd| hwnd) (|lpwndpl| :pointer))
(defcfun ("SetWindowPlacement" set-window-placement :convention :stdcall) winbool  (|hWnd| hwnd) (|lpwndpl| :pointer))
(defcfun ("BeginDeferWindowPos" begin-defer-window-pos :convention :stdcall) hdwp  (|nNumWindows| :int))
(defcfun ("DeferWindowPos" defer-window-pos :convention :stdcall) hdwp  (|hWinPosInfo| hdwp) (|hWnd| hwnd) (|hWndInsertAfter| hwnd) (|x| :int) (|y| :int) (|cx| :int) (|cy| :int) (|uFlags| uint))
(defcfun ("EndDeferWindowPos" end-defer-window-pos :convention :stdcall) winbool  (|hWinPosInfo| hdwp))
(defcfun ("IsWindowVisible" is-window-visible :convention :stdcall) winbool  (|hWnd| hwnd))
(defcfun ("IsIconic" is-iconic :convention :stdcall) winbool  (|hWnd| hwnd))
(defcfun ("AnyPopup" any-popup :convention :stdcall) winbool )
(defcfun ("BringWindowToTop" bring-window-to-top :convention :stdcall) winbool  (|hWnd| hwnd))
(defcfun ("IsZoomed" is-zoomed :convention :stdcall) winbool  (|hWnd| hwnd))
(defcfun ("CreateDialogParamA" create-dialog-param-a :convention :stdcall) hwnd  (|hInstance| hinstance) (|lpTemplateName| lpcstr) (|hWndParent| hwnd) (|lpDialogFunc| dlgproc) (|dwInitParam| lparam))
(defcfun ("CreateDialogParamW" create-dialog-param-w :convention :stdcall) hwnd  (|hInstance| hinstance) (|lpTemplateName| lpcwstr) (|hWndParent| hwnd) (|lpDialogFunc| dlgproc) (|dwInitParam| lparam))
(defcfun ("CreateDialogIndirectParamA" create-dialog-indirect-param-a :convention :stdcall) hwnd  (|hInstance| hinstance) (|lpTemplate| lpcdlgtemplatea) (|hWndParent| hwnd) (|lpDialogFunc| dlgproc) (|dwInitParam| lparam))
(defcfun ("CreateDialogIndirectParamW" create-dialog-indirect-param-w :convention :stdcall) hwnd  (|hInstance| hinstance) (|lpTemplate| lpcdlgtemplatew) (|hWndParent| hwnd) (|lpDialogFunc| dlgproc) (|dwInitParam| lparam))
(defcfun ("DialogBoxParamA" dialog-box-param-a :convention :stdcall) int_ptr  (|hInstance| hinstance) (|lpTemplateName| lpcstr) (|hWndParent| hwnd) (|lpDialogFunc| dlgproc) (|dwInitParam| lparam))
(defcfun ("DialogBoxParamW" dialog-box-param-w :convention :stdcall) int_ptr  (|hInstance| hinstance) (|lpTemplateName| lpcwstr) (|hWndParent| hwnd) (|lpDialogFunc| dlgproc) (|dwInitParam| lparam))
(defcfun ("DialogBoxIndirectParamA" dialog-box-indirect-param-a :convention :stdcall) int_ptr  (|hInstance| hinstance) (|hDialogTemplate| lpcdlgtemplatea) (|hWndParent| hwnd) (|lpDialogFunc| dlgproc) (|dwInitParam| lparam))
(defcfun ("DialogBoxIndirectParamW" dialog-box-indirect-param-w :convention :stdcall) int_ptr  (|hInstance| hinstance) (|hDialogTemplate| lpcdlgtemplatew) (|hWndParent| hwnd) (|lpDialogFunc| dlgproc) (|dwInitParam| lparam))
(defcfun ("EndDialog" end-dialog :convention :stdcall) winbool  (|hDlg| hwnd) (|nResult| int_ptr))
(defcfun ("GetDlgItem" get-dlg-item :convention :stdcall) hwnd  (|hDlg| hwnd) (|nIDDlgItem| :int))
(defcfun ("SetDlgItemInt" set-dlg-item-int :convention :stdcall) winbool  (|hDlg| hwnd) (|nIDDlgItem| :int) (|uValue| uint) (|bSigned| winbool))
(defcfun ("GetDlgItemInt" get-dlg-item-int :convention :stdcall) uint  (|hDlg| hwnd) (|nIDDlgItem| :int) (|lpTranslated| :pointer) (|bSigned| winbool))
(defcfun ("SetDlgItemTextA" set-dlg-item-text-a :convention :stdcall) winbool  (|hDlg| hwnd) (|nIDDlgItem| :int) (|lpString| lpcstr))
(defcfun ("SetDlgItemTextW" set-dlg-item-text-w :convention :stdcall) winbool  (|hDlg| hwnd) (|nIDDlgItem| :int) (|lpString| lpcwstr))
(defcfun ("GetDlgItemTextA" get-dlg-item-text-a :convention :stdcall) uint  (|hDlg| hwnd) (|nIDDlgItem| :int) (|lpString| lpstr) (|cchMax| :int))
(defcfun ("GetDlgItemTextW" get-dlg-item-text-w :convention :stdcall) uint  (|hDlg| hwnd) (|nIDDlgItem| :int) (|lpString| lpwstr) (|cchMax| :int))
(defcfun ("CheckDlgButton" check-dlg-button :convention :stdcall) winbool  (|hDlg| hwnd) (|nIDButton| :int) (|uCheck| uint))
(defcfun ("CheckRadioButton" check-radio-button :convention :stdcall) winbool  (|hDlg| hwnd) (|nIDFirstButton| :int) (|nIDLastButton| :int) (|nIDCheckButton| :int))
(defcfun ("IsDlgButtonChecked" is-dlg-button-checked :convention :stdcall) uint  (|hDlg| hwnd) (|nIDButton| :int))
(defcfun ("SendDlgItemMessageA" send-dlg-item-message-a :convention :stdcall) lresult  (|hDlg| hwnd) (|nIDDlgItem| :int) (|Msg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("SendDlgItemMessageW" send-dlg-item-message-w :convention :stdcall) lresult  (|hDlg| hwnd) (|nIDDlgItem| :int) (|Msg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("GetNextDlgGroupItem" get-next-dlg-group-item :convention :stdcall) hwnd  (|hDlg| hwnd) (|hCtl| hwnd) (|bPrevious| winbool))
(defcfun ("GetNextDlgTabItem" get-next-dlg-tab-item :convention :stdcall) hwnd  (|hDlg| hwnd) (|hCtl| hwnd) (|bPrevious| winbool))
(defcfun ("GetDlgCtrlID" get-dlg-ctrl-id :convention :stdcall) :int  (|hWnd| hwnd))
(defcfun ("GetDialogBaseUnits" get-dialog-base-units :convention :stdcall) :long )
(defcfun ("DefDlgProcA" def-dlg-proc-a :convention :stdcall) lresult  (|hDlg| hwnd) (|Msg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("DefDlgProcW" def-dlg-proc-w :convention :stdcall) lresult  (|hDlg| hwnd) (|Msg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("CallMsgFilterA" call-msg-filter-a :convention :stdcall) winbool  (|lpMsg| lpmsg) (|nCode| :int))
(defcfun ("CallMsgFilterW" call-msg-filter-w :convention :stdcall) winbool  (|lpMsg| lpmsg) (|nCode| :int))
(defcfun ("OpenClipboard" open-clipboard :convention :stdcall) winbool  (|hWndNewOwner| hwnd))
(defcfun ("CloseClipboard" close-clipboard :convention :stdcall) winbool )
(defcfun ("GetClipboardSequenceNumber" get-clipboard-sequence-number :convention :stdcall) dword )
(defcfun ("GetClipboardOwner" get-clipboard-owner :convention :stdcall) hwnd )
(defcfun ("SetClipboardViewer" set-clipboard-viewer :convention :stdcall) hwnd  (|hWndNewViewer| hwnd))
(defcfun ("GetClipboardViewer" get-clipboard-viewer :convention :stdcall) hwnd )
(defcfun ("ChangeClipboardChain" change-clipboard-chain :convention :stdcall) winbool  (|hWndRemove| hwnd) (|hWndNewNext| hwnd))
(defcfun ("SetClipboardData" set-clipboard-data :convention :stdcall) handle  (|uFormat| uint) (|hMem| handle))
(defcfun ("GetClipboardData" get-clipboard-data :convention :stdcall) handle  (|uFormat| uint))
(defcfun ("RegisterClipboardFormatA" register-clipboard-format-a :convention :stdcall) uint  (|lpszFormat| lpcstr))
(defcfun ("RegisterClipboardFormatW" register-clipboard-format-w :convention :stdcall) uint  (|lpszFormat| lpcwstr))
(defcfun ("CountClipboardFormats" count-clipboard-formats :convention :stdcall) :int )
(defcfun ("EnumClipboardFormats" enum-clipboard-formats :convention :stdcall) uint  (|format| uint))
(defcfun ("GetClipboardFormatNameA" get-clipboard-format-name-a :convention :stdcall) :int  (|format| uint) (|lpszFormatName| lpstr) (|cchMaxCount| :int))
(defcfun ("GetClipboardFormatNameW" get-clipboard-format-name-w :convention :stdcall) :int  (|format| uint) (|lpszFormatName| lpwstr) (|cchMaxCount| :int))
(defcfun ("EmptyClipboard" empty-clipboard :convention :stdcall) winbool )
(defcfun ("IsClipboardFormatAvailable" is-clipboard-format-available :convention :stdcall) winbool  (|format| uint))
(defcfun ("GetPriorityClipboardFormat" get-priority-clipboard-format :convention :stdcall) :int  (|paFormatPriorityList| :pointer) (|cFormats| :int))
(defcfun ("GetOpenClipboardWindow" get-open-clipboard-window :convention :stdcall) hwnd )
(defcfun ("CharToOemA" char-to-oem-a :convention :stdcall) winbool  (|lpszSrc| lpcstr) (|lpszDst| lpstr))
(defcfun ("CharToOemW" char-to-oem-w :convention :stdcall) winbool  (|lpszSrc| lpcwstr) (|lpszDst| lpstr))
(defcfun ("OemToCharA" oem-to-char-a :convention :stdcall) winbool  (|lpszSrc| lpcstr) (|lpszDst| lpstr))
(defcfun ("OemToCharW" oem-to-char-w :convention :stdcall) winbool  (|lpszSrc| lpcstr) (|lpszDst| lpwstr))
(defcfun ("CharToOemBuffA" char-to-oem-buff-a :convention :stdcall) winbool  (|lpszSrc| lpcstr) (|lpszDst| lpstr) (|cchDstLength| dword))
(defcfun ("CharToOemBuffW" char-to-oem-buff-w :convention :stdcall) winbool  (|lpszSrc| lpcwstr) (|lpszDst| lpstr) (|cchDstLength| dword))
(defcfun ("OemToCharBuffA" oem-to-char-buff-a :convention :stdcall) winbool  (|lpszSrc| lpcstr) (|lpszDst| lpstr) (|cchDstLength| dword))
(defcfun ("OemToCharBuffW" oem-to-char-buff-w :convention :stdcall) winbool  (|lpszSrc| lpcstr) (|lpszDst| lpwstr) (|cchDstLength| dword))
(defcfun ("CharUpperA" char-upper-a :convention :stdcall) lpstr  (|lpsz| lpstr))
(defcfun ("CharUpperW" char-upper-w :convention :stdcall) lpwstr  (|lpsz| lpwstr))
(defcfun ("CharUpperBuffA" char-upper-buff-a :convention :stdcall) dword  (|lpsz| lpstr) (|cchLength| dword))
(defcfun ("CharUpperBuffW" char-upper-buff-w :convention :stdcall) dword  (|lpsz| lpwstr) (|cchLength| dword))
(defcfun ("CharLowerA" char-lower-a :convention :stdcall) lpstr  (|lpsz| lpstr))
(defcfun ("CharLowerW" char-lower-w :convention :stdcall) lpwstr  (|lpsz| lpwstr))
(defcfun ("CharLowerBuffA" char-lower-buff-a :convention :stdcall) dword  (|lpsz| lpstr) (|cchLength| dword))
(defcfun ("CharLowerBuffW" char-lower-buff-w :convention :stdcall) dword  (|lpsz| lpwstr) (|cchLength| dword))
(defcfun ("CharNextA" char-next-a :convention :stdcall) lpstr  (|lpsz| lpcstr))
(defcfun ("CharNextW" char-next-w :convention :stdcall) lpwstr  (|lpsz| lpcwstr))
(defcfun ("CharPrevA" char-prev-a :convention :stdcall) lpstr  (|lpszStart| lpcstr) (|lpszCurrent| lpcstr))
(defcfun ("CharPrevW" char-prev-w :convention :stdcall) lpwstr  (|lpszStart| lpcwstr) (|lpszCurrent| lpcwstr))
(defcfun ("CharNextExA" char-next-ex-a :convention :stdcall) lpstr  (|CodePage| word) (|lpCurrentChar| lpcstr) (|dwFlags| dword))
(defcfun ("CharPrevExA" char-prev-ex-a :convention :stdcall) lpstr  (|CodePage| word) (|lpStart| lpcstr) (|lpCurrentChar| lpcstr) (|dwFlags| dword))
(defcfun ("IsCharAlphaA" is-char-alpha-a :convention :stdcall) winbool  (|ch| char))
(defcfun ("IsCharAlphaW" is-char-alpha-w :convention :stdcall) winbool  (|ch| wchar))
(defcfun ("IsCharAlphaNumericA" is-char-alpha-numeric-a :convention :stdcall) winbool  (|ch| char))
(defcfun ("IsCharAlphaNumericW" is-char-alpha-numeric-w :convention :stdcall) winbool  (|ch| wchar))
(defcfun ("IsCharUpperA" is-char-upper-a :convention :stdcall) winbool  (|ch| char))
(defcfun ("IsCharUpperW" is-char-upper-w :convention :stdcall) winbool  (|ch| wchar))
(defcfun ("IsCharLowerA" is-char-lower-a :convention :stdcall) winbool  (|ch| char))
(defcfun ("IsCharLowerW" is-char-lower-w :convention :stdcall) winbool  (|ch| wchar))
(defcfun ("SetFocus" set-focus :convention :stdcall) hwnd  (|hWnd| hwnd))
(defcfun ("GetActiveWindow" get-active-window :convention :stdcall) hwnd )
(defcfun ("GetFocus" get-focus :convention :stdcall) hwnd )
(defcfun ("GetKBCodePage" get-kb-code-page :convention :stdcall) uint )
(defcfun ("GetKeyState" get-key-state :convention :stdcall) short  (|nVirtKey| :int))
(defcfun ("GetAsyncKeyState" get-async-key-state :convention :stdcall) short  (|vKey| :int))
(defcfun ("GetKeyboardState" get-keyboard-state :convention :stdcall) winbool  (|lpKeyState| pbyte))
(defcfun ("SetKeyboardState" set-keyboard-state :convention :stdcall) winbool  (|lpKeyState| lpbyte))
(defcfun ("GetKeyNameTextA" get-key-name-text-a :convention :stdcall) :int  (|lParam| long) (|lpString| lpstr) (|cchSize| :int))
(defcfun ("GetKeyNameTextW" get-key-name-text-w :convention :stdcall) :int  (|lParam| long) (|lpString| lpwstr) (|cchSize| :int))
(defcfun ("GetKeyboardType" get-keyboard-type :convention :stdcall) :int  (|nTypeFlag| :int))
(defcfun ("ToAscii" to-ascii :convention :stdcall) :int  (|uVirtKey| uint) (|uScanCode| uint) (|lpKeyState| :pointer) (|lpChar| lpword) (|uFlags| uint))
(defcfun ("ToAsciiEx" to-ascii-ex :convention :stdcall) :int  (|uVirtKey| uint) (|uScanCode| uint) (|lpKeyState| :pointer) (|lpChar| lpword) (|uFlags| uint) (|dwhkl| hkl))
(defcfun ("ToUnicode" to-unicode :convention :stdcall) :int  (|wVirtKey| uint) (|wScanCode| uint) (|lpKeyState| :pointer) (|pwszBuff| lpwstr) (|cchBuff| :int) (|wFlags| uint))
(defcfun ("OemKeyScan" oem-key-scan :convention :stdcall) dword  (|wOemChar| word))
(defcfun ("VkKeyScanA" vk-key-scan-a :convention :stdcall) short  (|ch| char))
(defcfun ("VkKeyScanW" vk-key-scan-w :convention :stdcall) short  (|ch| wchar))
(defcfun ("VkKeyScanExA" vk-key-scan-ex-a :convention :stdcall) short  (|ch| char) (|dwhkl| hkl))
(defcfun ("VkKeyScanExW" vk-key-scan-ex-w :convention :stdcall) short  (|ch| wchar) (|dwhkl| hkl))
(defcfun ("keybd_event" keybd-event :convention :stdcall) :void  (|bVk| byte) (|bScan| byte) (|dwFlags| dword) (|dwExtraInfo| ulong_ptr))
(defcfun ("mouse_event" mouse-event :convention :stdcall) :void  (|dwFlags| dword) (|dx| dword) (|dy| dword) (|dwData| dword) (|dwExtraInfo| ulong_ptr))
(defcfun ("SendInput" send-input :convention :stdcall) uint  (|cInputs| uint) (|pInputs| lpinput) (|cbSize| :int))
(defcfun ("GetLastInputInfo" get-last-input-info :convention :stdcall) winbool  (|plii| plastinputinfo))
(defcfun ("MapVirtualKeyA" map-virtual-key-a :convention :stdcall) uint  (|uCode| uint) (|uMapType| uint))
(defcfun ("MapVirtualKeyW" map-virtual-key-w :convention :stdcall) uint  (|uCode| uint) (|uMapType| uint))
(defcfun ("MapVirtualKeyExA" map-virtual-key-ex-a :convention :stdcall) uint  (|uCode| uint) (|uMapType| uint) (|dwhkl| hkl))
(defcfun ("MapVirtualKeyExW" map-virtual-key-ex-w :convention :stdcall) uint  (|uCode| uint) (|uMapType| uint) (|dwhkl| hkl))
(defcfun ("GetInputState" get-input-state :convention :stdcall) winbool )
(defcfun ("GetQueueStatus" get-queue-status :convention :stdcall) dword  (|flags| uint))
(defcfun ("GetCapture" get-capture :convention :stdcall) hwnd )
(defcfun ("SetCapture" set-capture :convention :stdcall) hwnd  (|hWnd| hwnd))
(defcfun ("ReleaseCapture" release-capture :convention :stdcall) winbool )
(defcfun ("MsgWaitForMultipleObjects" msg-wait-for-multiple-objects :convention :stdcall) dword  (|nCount| dword) (|pHandles| :pointer) (|fWaitAll| winbool) (|dwMilliseconds| dword) (|dwWakeMask| dword))
(defcfun ("MsgWaitForMultipleObjectsEx" msg-wait-for-multiple-objects-ex :convention :stdcall) dword  (|nCount| dword) (|pHandles| :pointer) (|dwMilliseconds| dword) (|dwWakeMask| dword) (|dwFlags| dword))
(defcfun ("SetTimer" set-timer :convention :stdcall) uint_ptr  (|hWnd| hwnd) (|nIDEvent| uint_ptr) (|uElapse| uint) (|lpTimerFunc| timerproc))
(defcfun ("KillTimer" kill-timer :convention :stdcall) winbool  (|hWnd| hwnd) (|uIDEvent| uint_ptr))
(defcfun ("IsWindowUnicode" is-window-unicode :convention :stdcall) winbool  (|hWnd| hwnd))
(defcfun ("EnableWindow" enable-window :convention :stdcall) winbool  (|hWnd| hwnd) (|bEnable| winbool))
(defcfun ("IsWindowEnabled" is-window-enabled :convention :stdcall) winbool  (|hWnd| hwnd))
(defcfun ("LoadAcceleratorsA" load-accelerators-a :convention :stdcall) haccel  (|hInstance| hinstance) (|lpTableName| lpcstr))
(defcfun ("LoadAcceleratorsW" load-accelerators-w :convention :stdcall) haccel  (|hInstance| hinstance) (|lpTableName| lpcwstr))
(defcfun ("CreateAcceleratorTableA" create-accelerator-table-a :convention :stdcall) haccel  (|paccel| lpaccel) (|cAccel| :int))
(defcfun ("CreateAcceleratorTableW" create-accelerator-table-w :convention :stdcall) haccel  (|paccel| lpaccel) (|cAccel| :int))
(defcfun ("DestroyAcceleratorTable" destroy-accelerator-table :convention :stdcall) winbool  (|hAccel| haccel))
(defcfun ("CopyAcceleratorTableA" copy-accelerator-table-a :convention :stdcall) :int  (|hAccelSrc| haccel) (|lpAccelDst| lpaccel) (|cAccelEntries| :int))
(defcfun ("CopyAcceleratorTableW" copy-accelerator-table-w :convention :stdcall) :int  (|hAccelSrc| haccel) (|lpAccelDst| lpaccel) (|cAccelEntries| :int))
(defcfun ("TranslateAcceleratorA" translate-accelerator-a :convention :stdcall) :int  (|hWnd| hwnd) (|hAccTable| haccel) (|lpMsg| lpmsg))
(defcfun ("TranslateAcceleratorW" translate-accelerator-w :convention :stdcall) :int  (|hWnd| hwnd) (|hAccTable| haccel) (|lpMsg| lpmsg))
(defcfun ("GetSystemMetrics" get-system-metrics :convention :stdcall) :int  (|nIndex| :int))
(defcfun ("LoadMenuA" load-menu-a :convention :stdcall) hmenu  (|hInstance| hinstance) (|lpMenuName| lpcstr))
(defcfun ("LoadMenuW" load-menu-w :convention :stdcall) hmenu  (|hInstance| hinstance) (|lpMenuName| lpcwstr))
(defcfun ("LoadMenuIndirectA" load-menu-indirect-a :convention :stdcall) hmenu  (|lpMenuTemplate| :pointer))
(defcfun ("LoadMenuIndirectW" load-menu-indirect-w :convention :stdcall) hmenu  (|lpMenuTemplate| :pointer))
(defcfun ("GetMenu" get-menu :convention :stdcall) hmenu  (|hWnd| hwnd))
(defcfun ("SetMenu" set-menu :convention :stdcall) winbool  (|hWnd| hwnd) (|hMenu| hmenu))
(defcfun ("ChangeMenuA" change-menu-a :convention :stdcall) winbool  (|hMenu| hmenu) (|cmd| uint) (|lpszNewItem| lpcstr) (|cmdInsert| uint) (|flags| uint))
(defcfun ("ChangeMenuW" change-menu-w :convention :stdcall) winbool  (|hMenu| hmenu) (|cmd| uint) (|lpszNewItem| lpcwstr) (|cmdInsert| uint) (|flags| uint))
(defcfun ("HiliteMenuItem" hilite-menu-item :convention :stdcall) winbool  (|hWnd| hwnd) (|hMenu| hmenu) (|uIDHiliteItem| uint) (|uHilite| uint))
(defcfun ("GetMenuStringA" get-menu-string-a :convention :stdcall) :int  (|hMenu| hmenu) (|uIDItem| uint) (|lpString| lpstr) (|cchMax| :int) (|flags| uint))
(defcfun ("GetMenuStringW" get-menu-string-w :convention :stdcall) :int  (|hMenu| hmenu) (|uIDItem| uint) (|lpString| lpwstr) (|cchMax| :int) (|flags| uint))
(defcfun ("GetMenuState" get-menu-state :convention :stdcall) uint  (|hMenu| hmenu) (|uId| uint) (|uFlags| uint))
(defcfun ("DrawMenuBar" draw-menu-bar :convention :stdcall) winbool  (|hWnd| hwnd))
(defcfun ("GetSystemMenu" get-system-menu :convention :stdcall) hmenu  (|hWnd| hwnd) (|bRevert| winbool))
(defcfun ("CreateMenu" create-menu :convention :stdcall) hmenu )
(defcfun ("CreatePopupMenu" create-popup-menu :convention :stdcall) hmenu )
(defcfun ("DestroyMenu" destroy-menu :convention :stdcall) winbool  (|hMenu| hmenu))
(defcfun ("CheckMenuItem" check-menu-item :convention :stdcall) dword  (|hMenu| hmenu) (|uIDCheckItem| uint) (|uCheck| uint))
(defcfun ("EnableMenuItem" enable-menu-item :convention :stdcall) winbool  (|hMenu| hmenu) (|uIDEnableItem| uint) (|uEnable| uint))
(defcfun ("GetSubMenu" get-sub-menu :convention :stdcall) hmenu  (|hMenu| hmenu) (|nPos| :int))
(defcfun ("GetMenuItemID" get-menu-item-id :convention :stdcall) uint  (|hMenu| hmenu) (|nPos| :int))
(defcfun ("GetMenuItemCount" get-menu-item-count :convention :stdcall) :int  (|hMenu| hmenu))
(defcfun ("InsertMenuA" insert-menu-a :convention :stdcall) winbool  (|hMenu| hmenu) (|uPosition| uint) (|uFlags| uint) (|uIDNewItem| uint_ptr) (|lpNewItem| lpcstr))
(defcfun ("InsertMenuW" insert-menu-w :convention :stdcall) winbool  (|hMenu| hmenu) (|uPosition| uint) (|uFlags| uint) (|uIDNewItem| uint_ptr) (|lpNewItem| lpcwstr))
(defcfun ("AppendMenuA" append-menu-a :convention :stdcall) winbool  (|hMenu| hmenu) (|uFlags| uint) (|uIDNewItem| uint_ptr) (|lpNewItem| lpcstr))
(defcfun ("AppendMenuW" append-menu-w :convention :stdcall) winbool  (|hMenu| hmenu) (|uFlags| uint) (|uIDNewItem| uint_ptr) (|lpNewItem| lpcwstr))
(defcfun ("ModifyMenuA" modify-menu-a :convention :stdcall) winbool  (|hMnu| hmenu) (|uPosition| uint) (|uFlags| uint) (|uIDNewItem| uint_ptr) (|lpNewItem| lpcstr))
(defcfun ("ModifyMenuW" modify-menu-w :convention :stdcall) winbool  (|hMnu| hmenu) (|uPosition| uint) (|uFlags| uint) (|uIDNewItem| uint_ptr) (|lpNewItem| lpcwstr))
(defcfun ("RemoveMenu" remove-menu :convention :stdcall) winbool  (|hMenu| hmenu) (|uPosition| uint) (|uFlags| uint))
(defcfun ("DeleteMenu" delete-menu :convention :stdcall) winbool  (|hMenu| hmenu) (|uPosition| uint) (|uFlags| uint))
(defcfun ("SetMenuItemBitmaps" set-menu-item-bitmaps :convention :stdcall) winbool  (|hMenu| hmenu) (|uPosition| uint) (|uFlags| uint) (|hBitmapUnchecked| hbitmap) (|hBitmapChecked| hbitmap))
(defcfun ("GetMenuCheckMarkDimensions" get-menu-check-mark-dimensions :convention :stdcall) long )
(defcfun ("TrackPopupMenu" track-popup-menu :convention :stdcall) winbool  (|hMenu| hmenu) (|uFlags| uint) (|x| :int) (|y| :int) (|nReserved| :int) (|hWnd| hwnd) (|prcRect| :pointer))
(defcfun ("TrackPopupMenuEx" track-popup-menu-ex :convention :stdcall) winbool  (arg0 hmenu) (arg1 uint) (arg2 :int) (arg3 :int) (arg4 hwnd) (arg5 lptpmparams))
(defcfun ("GetMenuInfo" get-menu-info :convention :stdcall) winbool  (arg0 hmenu) (arg1 lpmenuinfo))
(defcfun ("SetMenuInfo" set-menu-info :convention :stdcall) winbool  (arg0 hmenu) (arg1 lpcmenuinfo))
(defcfun ("EndMenu" end-menu :convention :stdcall) winbool )
(defcfun ("InsertMenuItemA" insert-menu-item-a :convention :stdcall) winbool  (|hmenu| hmenu) (|item| uint) (|fByPosition| winbool) (|lpmi| lpcmenuiteminfoa))
(defcfun ("InsertMenuItemW" insert-menu-item-w :convention :stdcall) winbool  (|hmenu| hmenu) (|item| uint) (|fByPosition| winbool) (|lpmi| lpcmenuiteminfow))
(defcfun ("GetMenuItemInfoA" get-menu-item-info-a :convention :stdcall) winbool  (|hmenu| hmenu) (|item| uint) (|fByPosition| winbool) (|lpmii| lpmenuiteminfoa))
(defcfun ("GetMenuItemInfoW" get-menu-item-info-w :convention :stdcall) winbool  (|hmenu| hmenu) (|item| uint) (|fByPosition| winbool) (|lpmii| lpmenuiteminfow))
(defcfun ("SetMenuItemInfoA" set-menu-item-info-a :convention :stdcall) winbool  (|hmenu| hmenu) (|item| uint) (|fByPositon| winbool) (|lpmii| lpcmenuiteminfoa))
(defcfun ("SetMenuItemInfoW" set-menu-item-info-w :convention :stdcall) winbool  (|hmenu| hmenu) (|item| uint) (|fByPositon| winbool) (|lpmii| lpcmenuiteminfow))
(defcfun ("GetMenuDefaultItem" get-menu-default-item :convention :stdcall) uint  (|hMenu| hmenu) (|fByPos| uint) (|gmdiFlags| uint))
(defcfun ("SetMenuDefaultItem" set-menu-default-item :convention :stdcall) winbool  (|hMenu| hmenu) (|uItem| uint) (|fByPos| uint))
(defcfun ("GetMenuItemRect" get-menu-item-rect :convention :stdcall) winbool  (|hWnd| hwnd) (|hMenu| hmenu) (|uItem| uint) (|lprcItem| lprect))
(defcfun ("MenuItemFromPoint" menu-item-from-point :convention :stdcall) :int  (|hWnd| hwnd) (|hMenu| hmenu) (|ptScreen| point))
(defcfun ("DragObject" drag-object :convention :stdcall) dword  (|hwndParent| hwnd) (|hwndFrom| hwnd) (|fmt| uint) (|data| ulong_ptr) (|hcur| hcursor))
(defcfun ("DragDetect" drag-detect :convention :stdcall) winbool  (|hwnd| hwnd) (|pt| point))
(defcfun ("DrawIcon" draw-icon :convention :stdcall) winbool  (|hDC| hdc) (x :int) (y :int) (|hIcon| hicon))
(defcfun ("DrawTextA" draw-text-a :convention :stdcall) :int  (|hdc| hdc) (|lpchText| lpcstr) (|cchText| :int) (|lprc| lprect) (|format| uint))
(defcfun ("DrawTextW" draw-text-w :convention :stdcall) :int  (|hdc| hdc) (|lpchText| lpcwstr) (|cchText| :int) (|lprc| lprect) (|format| uint))
(defcfun ("DrawTextExA" draw-text-ex-a :convention :stdcall) :int  (|hdc| hdc) (|lpchText| lpstr) (|cchText| :int) (|lprc| lprect) (|format| uint) (|lpdtp| lpdrawtextparams))
(defcfun ("DrawTextExW" draw-text-ex-w :convention :stdcall) :int  (|hdc| hdc) (|lpchText| lpwstr) (|cchText| :int) (|lprc| lprect) (|format| uint) (|lpdtp| lpdrawtextparams))
(defcfun ("GrayStringA" gray-string-a :convention :stdcall) winbool  (|hDC| hdc) (|hBrush| hbrush) (|lpOutputFunc| graystringproc) (|lpData| lparam) (|nCount| :int) (x :int) (y :int) (|nWidth| :int) (|nHeight| :int))
(defcfun ("GrayStringW" gray-string-w :convention :stdcall) winbool  (|hDC| hdc) (|hBrush| hbrush) (|lpOutputFunc| graystringproc) (|lpData| lparam) (|nCount| :int) (x :int) (y :int) (|nWidth| :int) (|nHeight| :int))
(defcfun ("DrawStateA" draw-state-a :convention :stdcall) winbool  (|hdc| hdc) (|hbrFore| hbrush) (|qfnCallBack| drawstateproc) (|lData| lparam) (|wData| wparam) (|x| :int) (|y| :int) (|cx| :int) (|cy| :int) (|uFlags| uint))
(defcfun ("DrawStateW" draw-state-w :convention :stdcall) winbool  (|hdc| hdc) (|hbrFore| hbrush) (|qfnCallBack| drawstateproc) (|lData| lparam) (|wData| wparam) (|x| :int) (|y| :int) (|cx| :int) (|cy| :int) (|uFlags| uint))
(defcfun ("TabbedTextOutA" tabbed-text-out-a :convention :stdcall) long  (|hdc| hdc) (|x| :int) (|y| :int) (|lpString| lpcstr) (|chCount| :int) (|nTabPositions| :int) (|lpnTabStopPositions| :pointer) (|nTabOrigin| :int))
(defcfun ("TabbedTextOutW" tabbed-text-out-w :convention :stdcall) long  (|hdc| hdc) (|x| :int) (|y| :int) (|lpString| lpcwstr) (|chCount| :int) (|nTabPositions| :int) (|lpnTabStopPositions| :pointer) (|nTabOrigin| :int))
(defcfun ("GetTabbedTextExtentA" get-tabbed-text-extent-a :convention :stdcall) dword  (|hdc| hdc) (|lpString| lpcstr) (|chCount| :int) (|nTabPositions| :int) (|lpnTabStopPositions| :pointer))
(defcfun ("GetTabbedTextExtentW" get-tabbed-text-extent-w :convention :stdcall) dword  (|hdc| hdc) (|lpString| lpcwstr) (|chCount| :int) (|nTabPositions| :int) (|lpnTabStopPositions| :pointer))
(defcfun ("UpdateWindow" update-window :convention :stdcall) winbool  (|hWnd| hwnd))
(defcfun ("SetActiveWindow" set-active-window :convention :stdcall) hwnd  (|hWnd| hwnd))
(defcfun ("GetForegroundWindow" get-foreground-window :convention :stdcall) hwnd )
(defcfun ("PaintDesktop" paint-desktop :convention :stdcall) winbool  (|hdc| hdc))
(defcfun ("SwitchToThisWindow" switch-to-this-window :convention :stdcall) :void  (|hwnd| hwnd) (|fUnknown| winbool))
(defcfun ("SetForegroundWindow" set-foreground-window :convention :stdcall) winbool  (|hWnd| hwnd))
(defcfun ("AllowSetForegroundWindow" allow-set-foreground-window :convention :stdcall) winbool  (|dwProcessId| dword))
(defcfun ("LockSetForegroundWindow" lock-set-foreground-window :convention :stdcall) winbool  (|uLockCode| uint))
(defcfun ("WindowFromDC" window-from-dc :convention :stdcall) hwnd  (|hDC| hdc))
(defcfun ("GetDC" get-dc :convention :stdcall) hdc  (|hWnd| hwnd))
(defcfun ("GetDCEx" get-dc-ex :convention :stdcall) hdc  (|hWnd| hwnd) (|hrgnClip| hrgn) (|flags| dword))
(defcfun ("GetWindowDC" get-window-dc :convention :stdcall) hdc  (|hWnd| hwnd))
(defcfun ("ReleaseDC" release-dc :convention :stdcall) :int  (|hWnd| hwnd) (|hDC| hdc))
(defcfun ("BeginPaint" begin-paint :convention :stdcall) hdc  (|hWnd| hwnd) (|lpPaint| lppaintstruct))
(defcfun ("EndPaint" end-paint :convention :stdcall) winbool  (|hWnd| hwnd) (|lpPaint| :pointer))
(defcfun ("GetUpdateRect" get-update-rect :convention :stdcall) winbool  (|hWnd| hwnd) (|lpRect| lprect) (|bErase| winbool))
(defcfun ("GetUpdateRgn" get-update-rgn :convention :stdcall) :int  (|hWnd| hwnd) (|hRgn| hrgn) (|bErase| winbool))
(defcfun ("SetWindowRgn" set-window-rgn :convention :stdcall) :int  (|hWnd| hwnd) (|hRgn| hrgn) (|bRedraw| winbool))
(defcfun ("GetWindowRgn" get-window-rgn :convention :stdcall) :int  (|hWnd| hwnd) (|hRgn| hrgn))
(defcfun ("GetWindowRgnBox" get-window-rgn-box :convention :stdcall) :int  (|hWnd| hwnd) (|lprc| lprect))
(defcfun ("ExcludeUpdateRgn" exclude-update-rgn :convention :stdcall) :int  (|hDC| hdc) (|hWnd| hwnd))
(defcfun ("InvalidateRect" invalidate-rect :convention :stdcall) winbool  (|hWnd| hwnd) (|lpRect| :pointer) (|bErase| winbool))
(defcfun ("ValidateRect" validate-rect :convention :stdcall) winbool  (|hWnd| hwnd) (|lpRect| :pointer))
(defcfun ("InvalidateRgn" invalidate-rgn :convention :stdcall) winbool  (|hWnd| hwnd) (|hRgn| hrgn) (|bErase| winbool))
(defcfun ("ValidateRgn" validate-rgn :convention :stdcall) winbool  (|hWnd| hwnd) (|hRgn| hrgn))
(defcfun ("RedrawWindow" redraw-window :convention :stdcall) winbool  (|hWnd| hwnd) (|lprcUpdate| :pointer) (|hrgnUpdate| hrgn) (|flags| uint))
(defcfun ("LockWindowUpdate" lock-window-update :convention :stdcall) winbool  (|hWndLock| hwnd))
(defcfun ("ScrollWindow" scroll-window :convention :stdcall) winbool  (|hWnd| hwnd) (|XAmount| :int) (|YAmount| :int) (|lpRect| :pointer) (|lpClipRect| :pointer))
(defcfun ("ScrollDC" scroll-dc :convention :stdcall) winbool  (|hDC| hdc) (|dx| :int) (|dy| :int) (|lprcScroll| :pointer) (|lprcClip| :pointer) (|hrgnUpdate| hrgn) (|lprcUpdate| lprect))
(defcfun ("ScrollWindowEx" scroll-window-ex :convention :stdcall) :int  (|hWnd| hwnd) (|dx| :int) (|dy| :int) (|prcScroll| :pointer) (|prcClip| :pointer) (|hrgnUpdate| hrgn) (|prcUpdate| lprect) (|flags| uint))
(defcfun ("SetScrollPos" set-scroll-pos :convention :stdcall) :int  (|hWnd| hwnd) (|nBar| :int) (|nPos| :int) (|bRedraw| winbool))
(defcfun ("GetScrollPos" get-scroll-pos :convention :stdcall) :int  (|hWnd| hwnd) (|nBar| :int))
(defcfun ("SetScrollRange" set-scroll-range :convention :stdcall) winbool  (|hWnd| hwnd) (|nBar| :int) (|nMinPos| :int) (|nMaxPos| :int) (|bRedraw| winbool))
(defcfun ("GetScrollRange" get-scroll-range :convention :stdcall) winbool  (|hWnd| hwnd) (|nBar| :int) (|lpMinPos| lpint) (|lpMaxPos| lpint))
(defcfun ("ShowScrollBar" show-scroll-bar :convention :stdcall) winbool  (|hWnd| hwnd) (|wBar| :int) (|bShow| winbool))
(defcfun ("EnableScrollBar" enable-scroll-bar :convention :stdcall) winbool  (|hWnd| hwnd) (|wSBflags| uint) (|wArrows| uint))
(defcfun ("SetPropA" set-prop-a :convention :stdcall) winbool  (|hWnd| hwnd) (|lpString| lpcstr) (|hData| handle))
(defcfun ("SetPropW" set-prop-w :convention :stdcall) winbool  (|hWnd| hwnd) (|lpString| lpcwstr) (|hData| handle))
(defcfun ("GetPropA" get-prop-a :convention :stdcall) handle  (|hWnd| hwnd) (|lpString| lpcstr))
(defcfun ("GetPropW" get-prop-w :convention :stdcall) handle  (|hWnd| hwnd) (|lpString| lpcwstr))
(defcfun ("RemovePropA" remove-prop-a :convention :stdcall) handle  (|hWnd| hwnd) (|lpString| lpcstr))
(defcfun ("RemovePropW" remove-prop-w :convention :stdcall) handle  (|hWnd| hwnd) (|lpString| lpcwstr))
(defcfun ("EnumPropsExA" enum-props-ex-a :convention :stdcall) :int  (|hWnd| hwnd) (|lpEnumFunc| propenumprocexa) (|lParam| lparam))
(defcfun ("EnumPropsExW" enum-props-ex-w :convention :stdcall) :int  (|hWnd| hwnd) (|lpEnumFunc| propenumprocexw) (|lParam| lparam))
(defcfun ("EnumPropsA" enum-props-a :convention :stdcall) :int  (|hWnd| hwnd) (|lpEnumFunc| propenumproca))
(defcfun ("EnumPropsW" enum-props-w :convention :stdcall) :int  (|hWnd| hwnd) (|lpEnumFunc| propenumprocw))
(defcfun ("SetWindowTextA" set-window-text-a :convention :stdcall) winbool  (|hWnd| hwnd) (|lpString| lpcstr))
(defcfun ("SetWindowTextW" set-window-text-w :convention :stdcall) winbool  (|hWnd| hwnd) (|lpString| lpcwstr))
(defcfun ("GetWindowTextA" get-window-text-a :convention :stdcall) :int  (|hWnd| hwnd) (|lpString| lpstr) (|nMaxCount| :int))
(defcfun ("GetWindowTextW" get-window-text-w :convention :stdcall) :int  (|hWnd| hwnd) (|lpString| lpwstr) (|nMaxCount| :int))
(defcfun ("GetWindowTextLengthA" get-window-text-length-a :convention :stdcall) :int  (|hWnd| hwnd))
(defcfun ("GetWindowTextLengthW" get-window-text-length-w :convention :stdcall) :int  (|hWnd| hwnd))
(defcfun ("GetClientRect" get-client-rect :convention :stdcall) winbool  (|hWnd| hwnd) (|lpRect| lprect))
(defcfun ("GetWindowRect" get-window-rect :convention :stdcall) winbool  (|hWnd| hwnd) (|lpRect| lprect))
(defcfun ("AdjustWindowRect" adjust-window-rect :convention :stdcall) winbool  (|lpRect| lprect) (|dwStyle| dword) (|bMenu| winbool))
(defcfun ("AdjustWindowRectEx" adjust-window-rect-ex :convention :stdcall) winbool  (|lpRect| lprect) (|dwStyle| dword) (|bMenu| winbool) (|dwExStyle| dword))
(defcfun ("SetWindowContextHelpId" set-window-context-help-id :convention :stdcall) winbool  (arg0 hwnd) (arg1 dword))
(defcfun ("GetWindowContextHelpId" get-window-context-help-id :convention :stdcall) dword  (arg0 hwnd))
(defcfun ("SetMenuContextHelpId" set-menu-context-help-id :convention :stdcall) winbool  (arg0 hmenu) (arg1 dword))
(defcfun ("GetMenuContextHelpId" get-menu-context-help-id :convention :stdcall) dword  (arg0 hmenu))
(defcfun ("MessageBoxA" message-box-a :convention :stdcall) :int  (|hWnd| hwnd) (|lpText| lpcstr) (|lpCaption| lpcstr) (|uType| uint))
(defcfun ("MessageBoxW" message-box-w :convention :stdcall) :int  (|hWnd| hwnd) (|lpText| lpcwstr) (|lpCaption| lpcwstr) (|uType| uint))
(defcfun ("MessageBoxExA" message-box-ex-a :convention :stdcall) :int  (|hWnd| hwnd) (|lpText| lpcstr) (|lpCaption| lpcstr) (|uType| uint) (|wLanguageId| word))
(defcfun ("MessageBoxExW" message-box-ex-w :convention :stdcall) :int  (|hWnd| hwnd) (|lpText| lpcwstr) (|lpCaption| lpcwstr) (|uType| uint) (|wLanguageId| word))
(defcfun ("MessageBoxIndirectA" message-box-indirect-a :convention :stdcall) :int  (|lpmbp| :pointer))
(defcfun ("MessageBoxIndirectW" message-box-indirect-w :convention :stdcall) :int  (|lpmbp| :pointer))
(defcfun ("MessageBeep" message-beep :convention :stdcall) winbool  (|uType| uint))
(defcfun ("ShowCursor" show-cursor :convention :stdcall) :int  (|bShow| winbool))
(defcfun ("SetCursorPos" set-cursor-pos :convention :stdcall) winbool  (x :int) (y :int))
(defcfun ("SetCursor" set-cursor :convention :stdcall) hcursor  (|hCursor| hcursor))
(defcfun ("GetCursorPos" get-cursor-pos :convention :stdcall) winbool  (|lpPoint| lppoint))
(defcfun ("ClipCursor" clip-cursor :convention :stdcall) winbool  (|lpRect| :pointer))
(defcfun ("GetClipCursor" get-clip-cursor :convention :stdcall) winbool  (|lpRect| lprect))
(defcfun ("GetCursor" get-cursor :convention :stdcall) hcursor )
(defcfun ("CreateCaret" create-caret :convention :stdcall) winbool  (|hWnd| hwnd) (|hBitmap| hbitmap) (|nWidth| :int) (|nHeight| :int))
(defcfun ("GetCaretBlinkTime" get-caret-blink-time :convention :stdcall) uint )
(defcfun ("SetCaretBlinkTime" set-caret-blink-time :convention :stdcall) winbool  (|uMSeconds| uint))
(defcfun ("DestroyCaret" destroy-caret :convention :stdcall) winbool )
(defcfun ("HideCaret" hide-caret :convention :stdcall) winbool  (|hWnd| hwnd))
(defcfun ("ShowCaret" show-caret :convention :stdcall) winbool  (|hWnd| hwnd))
(defcfun ("SetCaretPos" set-caret-pos :convention :stdcall) winbool  (x :int) (y :int))
(defcfun ("GetCaretPos" get-caret-pos :convention :stdcall) winbool  (|lpPoint| lppoint))
(defcfun ("ClientToScreen" client-to-screen :convention :stdcall) winbool  (|hWnd| hwnd) (|lpPoint| lppoint))
(defcfun ("ScreenToClient" screen-to-client :convention :stdcall) winbool  (|hWnd| hwnd) (|lpPoint| lppoint))
(defcfun ("MapWindowPoints" map-window-points :convention :stdcall) :int  (|hWndFrom| hwnd) (|hWndTo| hwnd) (|lpPoints| lppoint) (|cPoints| uint))
(defcfun ("WindowFromPoint" window-from-point :convention :stdcall) hwnd  (|Point| point))
(defcfun ("ChildWindowFromPoint" child-window-from-point :convention :stdcall) hwnd  (|hWndParent| hwnd) (|Point| point))
(defcfun ("ChildWindowFromPointEx" child-window-from-point-ex :convention :stdcall) hwnd  (|hwnd| hwnd) (|pt| point) (|flags| uint))
(defcfun ("GetSysColor" get-sys-color :convention :stdcall) dword  (|nIndex| :int))
(defcfun ("GetSysColorBrush" get-sys-color-brush :convention :stdcall) hbrush  (|nIndex| :int))
(defcfun ("SetSysColors" set-sys-colors :convention :stdcall) winbool  (|cElements| :int) (|lpaElements| :pointer) (|lpaRgbValues| :pointer))
(defcfun ("DrawFocusRect" draw-focus-rect :convention :stdcall) winbool  (|hDC| hdc) (|lprc| :pointer))
(defcfun ("FillRect" fill-rect :convention :stdcall) :int  (|hDC| hdc) (|lprc| :pointer) (|hbr| hbrush))
(defcfun ("FrameRect" frame-rect :convention :stdcall) :int  (|hDC| hdc) (|lprc| :pointer) (|hbr| hbrush))
(defcfun ("InvertRect" invert-rect :convention :stdcall) winbool  (|hDC| hdc) (|lprc| :pointer))
(defcfun ("SetRect" set-rect :convention :stdcall) winbool  (|lprc| lprect) (|xLeft| :int) (|yTop| :int) (|xRight| :int) (|yBottom| :int))
(defcfun ("SetRectEmpty" set-rect-empty :convention :stdcall) winbool  (|lprc| lprect))
(defcfun ("CopyRect" copy-rect :convention :stdcall) winbool  (|lprcDst| lprect) (|lprcSrc| :pointer))
(defcfun ("InflateRect" inflate-rect :convention :stdcall) winbool  (|lprc| lprect) (|dx| :int) (|dy| :int))
(defcfun ("IntersectRect" intersect-rect :convention :stdcall) winbool  (|lprcDst| lprect) (|lprcSrc1| :pointer) (|lprcSrc2| :pointer))
(defcfun ("UnionRect" union-rect :convention :stdcall) winbool  (|lprcDst| lprect) (|lprcSrc1| :pointer) (|lprcSrc2| :pointer))
(defcfun ("SubtractRect" subtract-rect :convention :stdcall) winbool  (|lprcDst| lprect) (|lprcSrc1| :pointer) (|lprcSrc2| :pointer))
(defcfun ("OffsetRect" offset-rect :convention :stdcall) winbool  (|lprc| lprect) (|dx| :int) (|dy| :int))
(defcfun ("IsRectEmpty" is-rect-empty :convention :stdcall) winbool  (|lprc| :pointer))
(defcfun ("EqualRect" equal-rect :convention :stdcall) winbool  (|lprc1| :pointer) (|lprc2| :pointer))
(defcfun ("PtInRect" pt-in-rect :convention :stdcall) winbool  (|lprc| :pointer) (|pt| point))
(defcfun ("GetWindowWord" get-window-word :convention :stdcall) word  (|hWnd| hwnd) (|nIndex| :int))
(defcfun ("SetWindowWord" set-window-word :convention :stdcall) word  (|hWnd| hwnd) (|nIndex| :int) (|wNewWord| word))
(defcfun ("GetWindowLongA" get-window-long-a :convention :stdcall) long  (|hWnd| hwnd) (|nIndex| :int))
(defcfun ("GetWindowLongW" get-window-long-w :convention :stdcall) long  (|hWnd| hwnd) (|nIndex| :int))
(defcfun ("SetWindowLongA" set-window-long-a :convention :stdcall) long  (|hWnd| hwnd) (|nIndex| :int) (|dwNewLong| long))
(defcfun ("SetWindowLongW" set-window-long-w :convention :stdcall) long  (|hWnd| hwnd) (|nIndex| :int) (|dwNewLong| long))
(defcfun ("GetClassWord" get-class-word :convention :stdcall) word  (|hWnd| hwnd) (|nIndex| :int))
(defcfun ("SetClassWord" set-class-word :convention :stdcall) word  (|hWnd| hwnd) (|nIndex| :int) (|wNewWord| word))
(defcfun ("GetClassLongA" get-class-long-a :convention :stdcall) dword  (|hWnd| hwnd) (|nIndex| :int))
(defcfun ("GetClassLongW" get-class-long-w :convention :stdcall) dword  (|hWnd| hwnd) (|nIndex| :int))
(defcfun ("SetClassLongA" set-class-long-a :convention :stdcall) dword  (|hWnd| hwnd) (|nIndex| :int) (|dwNewLong| long))
(defcfun ("SetClassLongW" set-class-long-w :convention :stdcall) dword  (|hWnd| hwnd) (|nIndex| :int) (|dwNewLong| long))
(defcfun ("GetProcessDefaultLayout" get-process-default-layout :convention :stdcall) winbool  (|pdwDefaultLayout| :pointer))
(defcfun ("SetProcessDefaultLayout" set-process-default-layout :convention :stdcall) winbool  (|dwDefaultLayout| dword))
(defcfun ("GetDesktopWindow" get-desktop-window :convention :stdcall) hwnd )
(defcfun ("GetParent" get-parent :convention :stdcall) hwnd  (|hWnd| hwnd))
(defcfun ("SetParent" set-parent :convention :stdcall) hwnd  (|hWndChild| hwnd) (|hWndNewParent| hwnd))
(defcfun ("EnumChildWindows" enum-child-windows :convention :stdcall) winbool  (|hWndParent| hwnd) (|lpEnumFunc| wndenumproc) (|lParam| lparam))
(defcfun ("FindWindowA" find-window-a :convention :stdcall) hwnd  (|lpClassName| lpcstr) (|lpWindowName| lpcstr))
(defcfun ("FindWindowW" find-window-w :convention :stdcall) hwnd  (|lpClassName| lpcwstr) (|lpWindowName| lpcwstr))
(defcfun ("FindWindowExA" find-window-ex-a :convention :stdcall) hwnd  (|hWndParent| hwnd) (|hWndChildAfter| hwnd) (|lpszClass| lpcstr) (|lpszWindow| lpcstr))
(defcfun ("FindWindowExW" find-window-ex-w :convention :stdcall) hwnd  (|hWndParent| hwnd) (|hWndChildAfter| hwnd) (|lpszClass| lpcwstr) (|lpszWindow| lpcwstr))
(defcfun ("GetShellWindow" get-shell-window :convention :stdcall) hwnd )
(defcfun ("RegisterShellHookWindow" register-shell-hook-window :convention :stdcall) winbool  (|hwnd| hwnd))
(defcfun ("DeregisterShellHookWindow" deregister-shell-hook-window :convention :stdcall) winbool  (|hwnd| hwnd))
(defcfun ("EnumWindows" enum-windows :convention :stdcall) winbool  (|lpEnumFunc| wndenumproc) (|lParam| lparam))
(defcfun ("EnumThreadWindows" enum-thread-windows :convention :stdcall) winbool  (|dwThreadId| dword) (|lpfn| wndenumproc) (|lParam| lparam))
(defcfun ("GetClassNameA" get-class-name-a :convention :stdcall) :int  (|hWnd| hwnd) (|lpClassName| lpstr) (|nMaxCount| :int))
(defcfun ("GetClassNameW" get-class-name-w :convention :stdcall) :int  (|hWnd| hwnd) (|lpClassName| lpwstr) (|nMaxCount| :int))
(defcfun ("GetTopWindow" get-top-window :convention :stdcall) hwnd  (|hWnd| hwnd))
(defcfun ("GetWindowThreadProcessId" get-window-thread-process-id :convention :stdcall) dword  (|hWnd| hwnd) (|lpdwProcessId| lpdword))
(defcfun ("IsGUIThread" is-gui-thread :convention :stdcall) winbool  (|bConvert| winbool))
(defcfun ("GetLastActivePopup" get-last-active-popup :convention :stdcall) hwnd  (|hWnd| hwnd))
(defcfun ("GetWindow" get-window :convention :stdcall) hwnd  (|hWnd| hwnd) (|uCmd| uint))
(defcfun ("SetWindowsHookA" set-windows-hook-a :convention :stdcall) hhook  (|nFilterType| :int) (|pfnFilterProc| hookproc))
(defcfun ("SetWindowsHookW" set-windows-hook-w :convention :stdcall) hhook  (|nFilterType| :int) (|pfnFilterProc| hookproc))
(defcfun ("UnhookWindowsHook" unhook-windows-hook :convention :stdcall) winbool  (|nCode| :int) (|pfnFilterProc| hookproc))
(defcfun ("SetWindowsHookExA" set-windows-hook-ex-a :convention :stdcall) hhook  (|idHook| :int) (|lpfn| hookproc) (|hmod| hinstance) (|dwThreadId| dword))
(defcfun ("SetWindowsHookExW" set-windows-hook-ex-w :convention :stdcall) hhook  (|idHook| :int) (|lpfn| hookproc) (|hmod| hinstance) (|dwThreadId| dword))
(defcfun ("UnhookWindowsHookEx" unhook-windows-hook-ex :convention :stdcall) winbool  (|hhk| hhook))
(defcfun ("CallNextHookEx" call-next-hook-ex :convention :stdcall) lresult  (|hhk| hhook) (|nCode| :int) (|wParam| wparam) (|lParam| lparam))
(defcfun ("CheckMenuRadioItem" check-menu-radio-item :convention :stdcall) winbool  (|hmenu| hmenu) (|first| uint) (|last| uint) (|check| uint) (|flags| uint))
(defcfun ("LoadBitmapA" load-bitmap-a :convention :stdcall) hbitmap  (|hInstance| hinstance) (|lpBitmapName| lpcstr))
(defcfun ("LoadBitmapW" load-bitmap-w :convention :stdcall) hbitmap  (|hInstance| hinstance) (|lpBitmapName| lpcwstr))
(defcfun ("LoadCursorA" load-cursor-a :convention :stdcall) hcursor  (|hInstance| hinstance) (|lpCursorName| lpcstr))
(defcfun ("LoadCursorW" load-cursor-w :convention :stdcall) hcursor  (|hInstance| hinstance) (|lpCursorName| lpcwstr))
(defcfun ("LoadCursorFromFileA" load-cursor-from-file-a :convention :stdcall) hcursor  (|lpFileName| lpcstr))
(defcfun ("LoadCursorFromFileW" load-cursor-from-file-w :convention :stdcall) hcursor  (|lpFileName| lpcwstr))
(defcfun ("CreateCursor" create-cursor :convention :stdcall) hcursor  (|hInst| hinstance) (|xHotSpot| :int) (|yHotSpot| :int) (|nWidth| :int) (|nHeight| :int) (|pvANDPlane| :pointer) (|pvXORPlane| :pointer))
(defcfun ("DestroyCursor" destroy-cursor :convention :stdcall) winbool  (|hCursor| hcursor))
(defcfun ("SetSystemCursor" set-system-cursor :convention :stdcall) winbool  (|hcur| hcursor) (|id| dword))
(defcfun ("LoadIconA" load-icon-a :convention :stdcall) hicon  (|hInstance| hinstance) (|lpIconName| lpcstr))
(defcfun ("LoadIconW" load-icon-w :convention :stdcall) hicon  (|hInstance| hinstance) (|lpIconName| lpcwstr))
(defcfun ("PrivateExtractIconsA" private-extract-icons-a :convention :stdcall) uint  (|szFileName| lpcstr) (|nIconIndex| :int) (|cxIcon| :int) (|cyIcon| :int) (|phicon| :pointer) (|piconid| :pointer) (|nIcons| uint) (|flags| uint))
(defcfun ("PrivateExtractIconsW" private-extract-icons-w :convention :stdcall) uint  (|szFileName| lpcwstr) (|nIconIndex| :int) (|cxIcon| :int) (|cyIcon| :int) (|phicon| :pointer) (|piconid| :pointer) (|nIcons| uint) (|flags| uint))
(defcfun ("CreateIcon" create-icon :convention :stdcall) hicon  (|hInstance| hinstance) (|nWidth| :int) (|nHeight| :int) (|cPlanes| byte) (|cBitsPixel| byte) (|lpbANDbits| :pointer) (|lpbXORbits| :pointer))
(defcfun ("DestroyIcon" destroy-icon :convention :stdcall) winbool  (|hIcon| hicon))
(defcfun ("LookupIconIdFromDirectory" lookup-icon-id-from-directory :convention :stdcall) :int  (|presbits| pbyte) (|fIcon| winbool))
(defcfun ("LookupIconIdFromDirectoryEx" lookup-icon-id-from-directory-ex :convention :stdcall) :int  (|presbits| pbyte) (|fIcon| winbool) (|cxDesired| :int) (|cyDesired| :int) (|Flags| uint))
(defcfun ("CreateIconFromResource" create-icon-from-resource :convention :stdcall) hicon  (|presbits| pbyte) (|dwResSize| dword) (|fIcon| winbool) (|dwVer| dword))
(defcfun ("CreateIconFromResourceEx" create-icon-from-resource-ex :convention :stdcall) hicon  (|presbits| pbyte) (|dwResSize| dword) (|fIcon| winbool) (|dwVer| dword) (|cxDesired| :int) (|cyDesired| :int) (|Flags| uint))
(defcfun ("LoadImageA" load-image-a :convention :stdcall) handle  (|hInst| hinstance) (|name| lpcstr) (|type| uint) (|cx| :int) (|cy| :int) (|fuLoad| uint))
(defcfun ("LoadImageW" load-image-w :convention :stdcall) handle  (|hInst| hinstance) (|name| lpcwstr) (|type| uint) (|cx| :int) (|cy| :int) (|fuLoad| uint))
(defcfun ("CopyImage" copy-image :convention :stdcall) handle  (|h| handle) (|type| uint) (|cx| :int) (|cy| :int) (|flags| uint))
(defcfun ("DrawIconEx" draw-icon-ex :convention :stdcall) winbool  (|hdc| hdc) (|xLeft| :int) (|yTop| :int) (|hIcon| hicon) (|cxWidth| :int) (|cyWidth| :int) (|istepIfAniCur| uint) (|hbrFlickerFreeDraw| hbrush) (|diFlags| uint))
(defcfun ("CreateIconIndirect" create-icon-indirect :convention :stdcall) hicon  (|piconinfo| piconinfo))
(defcfun ("CopyIcon" copy-icon :convention :stdcall) hicon  (|hIcon| hicon))
(defcfun ("GetIconInfo" get-icon-info :convention :stdcall) winbool  (|hIcon| hicon) (|piconinfo| piconinfo))
(defcfun ("LoadStringA" load-string-a :convention :stdcall) :int  (|hInstance| hinstance) (|uID| uint) (|lpBuffer| lpstr) (|cchBufferMax| :int))
(defcfun ("LoadStringW" load-string-w :convention :stdcall) :int  (|hInstance| hinstance) (|uID| uint) (|lpBuffer| lpwstr) (|cchBufferMax| :int))
(defcfun ("IsDialogMessageA" is-dialog-message-a :convention :stdcall) winbool  (|hDlg| hwnd) (|lpMsg| lpmsg))
(defcfun ("IsDialogMessageW" is-dialog-message-w :convention :stdcall) winbool  (|hDlg| hwnd) (|lpMsg| lpmsg))
(defcfun ("MapDialogRect" map-dialog-rect :convention :stdcall) winbool  (|hDlg| hwnd) (|lpRect| lprect))
(defcfun ("DlgDirListA" dlg-dir-list-a :convention :stdcall) :int  (|hDlg| hwnd) (|lpPathSpec| lpstr) (|nIDListBox| :int) (|nIDStaticPath| :int) (|uFileType| uint))
(defcfun ("DlgDirListW" dlg-dir-list-w :convention :stdcall) :int  (|hDlg| hwnd) (|lpPathSpec| lpwstr) (|nIDListBox| :int) (|nIDStaticPath| :int) (|uFileType| uint))
(defcfun ("DlgDirSelectExA" dlg-dir-select-ex-a :convention :stdcall) winbool  (|hwndDlg| hwnd) (|lpString| lpstr) (|chCount| :int) (|idListBox| :int))
(defcfun ("DlgDirSelectExW" dlg-dir-select-ex-w :convention :stdcall) winbool  (|hwndDlg| hwnd) (|lpString| lpwstr) (|chCount| :int) (|idListBox| :int))
(defcfun ("DlgDirListComboBoxA" dlg-dir-list-combo-box-a :convention :stdcall) :int  (|hDlg| hwnd) (|lpPathSpec| lpstr) (|nIDComboBox| :int) (|nIDStaticPath| :int) (|uFiletype| uint))
(defcfun ("DlgDirListComboBoxW" dlg-dir-list-combo-box-w :convention :stdcall) :int  (|hDlg| hwnd) (|lpPathSpec| lpwstr) (|nIDComboBox| :int) (|nIDStaticPath| :int) (|uFiletype| uint))
(defcfun ("DlgDirSelectComboBoxExA" dlg-dir-select-combo-box-ex-a :convention :stdcall) winbool  (|hwndDlg| hwnd) (|lpString| lpstr) (|cchOut| :int) (|idComboBox| :int))
(defcfun ("DlgDirSelectComboBoxExW" dlg-dir-select-combo-box-ex-w :convention :stdcall) winbool  (|hwndDlg| hwnd) (|lpString| lpwstr) (|cchOut| :int) (|idComboBox| :int))
(defcfun ("SetScrollInfo" set-scroll-info :convention :stdcall) :int  (|hwnd| hwnd) (|nBar| :int) (|lpsi| lpcscrollinfo) (|redraw| winbool))
(defcfun ("GetScrollInfo" get-scroll-info :convention :stdcall) winbool  (|hwnd| hwnd) (|nBar| :int) (|lpsi| lpscrollinfo))
(defcfun ("DefFrameProcA" def-frame-proc-a :convention :stdcall) lresult  (|hWnd| hwnd) (|hWndMDIClient| hwnd) (|uMsg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("DefFrameProcW" def-frame-proc-w :convention :stdcall) lresult  (|hWnd| hwnd) (|hWndMDIClient| hwnd) (|uMsg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("DefMDIChildProcA" def-mdi-child-proc-a :convention :stdcall) lresult  (|hWnd| hwnd) (|uMsg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("DefMDIChildProcW" def-mdi-child-proc-w :convention :stdcall) lresult  (|hWnd| hwnd) (|uMsg| uint) (|wParam| wparam) (|lParam| lparam))
(defcfun ("TranslateMDISysAccel" translate-mdi-sys-accel :convention :stdcall) winbool  (|hWndClient| hwnd) (|lpMsg| lpmsg))
(defcfun ("ArrangeIconicWindows" arrange-iconic-windows :convention :stdcall) uint  (|hWnd| hwnd))
(defcfun ("CreateMDIWindowA" create-mdi-window-a :convention :stdcall) hwnd  (|lpClassName| lpcstr) (|lpWindowName| lpcstr) (|dwStyle| dword) (x :int) (y :int) (|nWidth| :int) (|nHeight| :int) (|hWndParent| hwnd) (|hInstance| hinstance) (|lParam| lparam))
(defcfun ("CreateMDIWindowW" create-mdi-window-w :convention :stdcall) hwnd  (|lpClassName| lpcwstr) (|lpWindowName| lpcwstr) (|dwStyle| dword) (x :int) (y :int) (|nWidth| :int) (|nHeight| :int) (|hWndParent| hwnd) (|hInstance| hinstance) (|lParam| lparam))
(defcfun ("TileWindows" tile-windows :convention :stdcall) word  (|hwndParent| hwnd) (|wHow| uint) (|lpRect| :pointer) (|cKids| uint) (|lpKids| :pointer))
(defcfun ("CascadeWindows" cascade-windows :convention :stdcall) word  (|hwndParent| hwnd) (|wHow| uint) (|lpRect| :pointer) (|cKids| uint) (|lpKids| :pointer))
(defcfun ("WinHelpA" win-help-a :convention :stdcall) winbool  (|hWndMain| hwnd) (|lpszHelp| lpcstr) (|uCommand| uint) (|dwData| ulong_ptr))
(defcfun ("WinHelpW" win-help-w :convention :stdcall) winbool  (|hWndMain| hwnd) (|lpszHelp| lpcwstr) (|uCommand| uint) (|dwData| ulong_ptr))
(defcfun ("GetGuiResources" get-gui-resources :convention :stdcall) dword  (|hProcess| handle) (|uiFlags| dword))
(defcfun ("ChangeDisplaySettingsA" change-display-settings-a :convention :stdcall) long  (|lpDevMode| lpdevmodea) (|dwFlags| dword))
(defcfun ("ChangeDisplaySettingsW" change-display-settings-w :convention :stdcall) long  (|lpDevMode| lpdevmodew) (|dwFlags| dword))
(defcfun ("ChangeDisplaySettingsExA" change-display-settings-ex-a :convention :stdcall) long  (|lpszDeviceName| lpcstr) (|lpDevMode| lpdevmodea) (|hwnd| hwnd) (|dwflags| dword) (|lParam| lpvoid))
(defcfun ("ChangeDisplaySettingsExW" change-display-settings-ex-w :convention :stdcall) long  (|lpszDeviceName| lpcwstr) (|lpDevMode| lpdevmodew) (|hwnd| hwnd) (|dwflags| dword) (|lParam| lpvoid))
(defcfun ("EnumDisplaySettingsA" enum-display-settings-a :convention :stdcall) winbool  (|lpszDeviceName| lpcstr) (|iModeNum| dword) (|lpDevMode| lpdevmodea))
(defcfun ("EnumDisplaySettingsW" enum-display-settings-w :convention :stdcall) winbool  (|lpszDeviceName| lpcwstr) (|iModeNum| dword) (|lpDevMode| lpdevmodew))
(defcfun ("EnumDisplaySettingsExA" enum-display-settings-ex-a :convention :stdcall) winbool  (|lpszDeviceName| lpcstr) (|iModeNum| dword) (|lpDevMode| lpdevmodea) (|dwFlags| dword))
(defcfun ("EnumDisplaySettingsExW" enum-display-settings-ex-w :convention :stdcall) winbool  (|lpszDeviceName| lpcwstr) (|iModeNum| dword) (|lpDevMode| lpdevmodew) (|dwFlags| dword))
(defcfun ("EnumDisplayDevicesA" enum-display-devices-a :convention :stdcall) winbool  (|lpDevice| lpcstr) (|iDevNum| dword) (|lpDisplayDevice| pdisplay_devicea) (|dwFlags| dword))
(defcfun ("EnumDisplayDevicesW" enum-display-devices-w :convention :stdcall) winbool  (|lpDevice| lpcwstr) (|iDevNum| dword) (|lpDisplayDevice| pdisplay_devicew) (|dwFlags| dword))
(defcfun ("SystemParametersInfoA" system-parameters-info-a :convention :stdcall) winbool  (|uiAction| uint) (|uiParam| uint) (|pvParam| pvoid) (|fWinIni| uint))
(defcfun ("SystemParametersInfoW" system-parameters-info-w :convention :stdcall) winbool  (|uiAction| uint) (|uiParam| uint) (|pvParam| pvoid) (|fWinIni| uint))
(defcfun ("SetDebugErrorLevel" set-debug-error-level :convention :stdcall) :void  (|dwLevel| dword))
(defcfun ("SetLastErrorEx" set-last-error-ex :convention :stdcall) :void  (|dwErrCode| dword) (|dwType| dword))
(defcfun ("InternalGetWindowText" internal-get-window-text :convention :stdcall) :int  (|hWnd| hwnd) (|pString| lpwstr) (|cchMaxCount| :int))
(defcfun ("EndTask" end-task :convention :stdcall) winbool  (|hWnd| hwnd) (|fShutDown| winbool) (|fForce| winbool))
(defcfun ("MonitorFromPoint" monitor-from-point :convention :stdcall) hmonitor  (|pt| point) (|dwFlags| dword))
(defcfun ("MonitorFromRect" monitor-from-rect :convention :stdcall) hmonitor  (|lprc| lpcrect) (|dwFlags| dword))
(defcfun ("MonitorFromWindow" monitor-from-window :convention :stdcall) hmonitor  (|hwnd| hwnd) (|dwFlags| dword))
(defcfun ("GetMonitorInfoA" get-monitor-info-a :convention :stdcall) winbool  (|hMonitor| hmonitor) (|lpmi| lpmonitorinfo))
(defcfun ("GetMonitorInfoW" get-monitor-info-w :convention :stdcall) winbool  (|hMonitor| hmonitor) (|lpmi| lpmonitorinfo))
(defcfun ("EnumDisplayMonitors" enum-display-monitors :convention :stdcall) winbool  (|hdc| hdc) (|lprcClip| lpcrect) (|lpfnEnum| monitorenumproc) (|dwData| lparam))
(defcfun ("NotifyWinEvent" notify-win-event :convention :stdcall) :void  (|event| dword) (|hwnd| hwnd) (|idObject| long) (|idChild| long))
(defcfun ("SetWinEventHook" set-win-event-hook :convention :stdcall) hwineventhook  (|eventMin| dword) (|eventMax| dword) (|hmodWinEventProc| hmodule) (|pfnWinEventProc| wineventproc) (|idProcess| dword) (|idThread| dword) (|dwFlags| dword))
(defcfun ("IsWinEventHookInstalled" is-win-event-hook-installed :convention :stdcall) winbool  (|event| dword))
(defcfun ("UnhookWinEvent" unhook-win-event :convention :stdcall) winbool  (|hWinEventHook| hwineventhook))
(defcfun ("GetGUIThreadInfo" get-gui-thread-info :convention :stdcall) winbool  (|idThread| dword) (|pgui| pguithreadinfo))
(defcfun ("GetWindowModuleFileNameA" get-window-module-file-name-a :convention :stdcall) uint  (|hwnd| hwnd) (|pszFileName| lpstr) (|cchFileNameMax| uint))
(defcfun ("GetWindowModuleFileNameW" get-window-module-file-name-w :convention :stdcall) uint  (|hwnd| hwnd) (|pszFileName| lpwstr) (|cchFileNameMax| uint))
(defcfun ("GetCursorInfo" get-cursor-info :convention :stdcall) winbool  (|pci| pcursorinfo))
(defcfun ("GetWindowInfo" get-window-info :convention :stdcall) winbool  (|hwnd| hwnd) (|pwi| pwindowinfo))
(defcfun ("GetTitleBarInfo" get-title-bar-info :convention :stdcall) winbool  (|hwnd| hwnd) (|pti| ptitlebarinfo))
(defcfun ("GetMenuBarInfo" get-menu-bar-info :convention :stdcall) winbool  (|hwnd| hwnd) (|idObject| long) (|idItem| long) (|pmbi| pmenubarinfo))
(defcfun ("GetScrollBarInfo" get-scroll-bar-info :convention :stdcall) winbool  (|hwnd| hwnd) (|idObject| long) (|psbi| pscrollbarinfo))
(defcfun ("GetComboBoxInfo" get-combo-box-info :convention :stdcall) winbool  (|hwndCombo| hwnd) (|pcbi| pcomboboxinfo))
(defcfun ("GetAncestor" get-ancestor :convention :stdcall) hwnd  (|hwnd| hwnd) (|gaFlags| uint))
(defcfun ("RealChildWindowFromPoint" real-child-window-from-point :convention :stdcall) hwnd  (|hwndParent| hwnd) (|ptParentClientCoords| point))
(defcfun ("RealGetWindowClassA" real-get-window-class-a :convention :stdcall) uint  (|hwnd| hwnd) (|ptszClassName| lpstr) (|cchClassNameMax| uint))
(defcfun ("RealGetWindowClassW" real-get-window-class-w :convention :stdcall) uint  (|hwnd| hwnd) (|ptszClassName| lpwstr) (|cchClassNameMax| uint))
(defcfun ("GetAltTabInfoA" get-alt-tab-info-a :convention :stdcall) winbool  (|hwnd| hwnd) (|iItem| :int) (|pati| palttabinfo) (|pszItemText| lpstr) (|cchItemText| uint))
(defcfun ("GetAltTabInfoW" get-alt-tab-info-w :convention :stdcall) winbool  (|hwnd| hwnd) (|iItem| :int) (|pati| palttabinfo) (|pszItemText| lpwstr) (|cchItemText| uint))
(defcfun ("GetListBoxInfo" get-list-box-info :convention :stdcall) dword  (|hwnd| hwnd))
(defcfun ("LockWorkStation" lock-work-station :convention :stdcall) winbool )
(defcfun ("UserHandleGrantAccess" user-handle-grant-access :convention :stdcall) winbool  (|hUserHandle| handle) (|hJob| handle) (|bGrant| winbool))
(defcfun ("GetRawInputData" get-raw-input-data :convention :stdcall) uint  (|hRawInput| hrawinput) (|uiCommand| uint) (|pData| lpvoid) (|pcbSize| puint) (|cbSizeHeader| uint))
(defcfun ("GetRawInputDeviceInfoA" get-raw-input-device-info-a :convention :stdcall) uint  (|hDevice| handle) (|uiCommand| uint) (|pData| lpvoid) (|pcbSize| puint))
(defcfun ("GetRawInputDeviceInfoW" get-raw-input-device-info-w :convention :stdcall) uint  (|hDevice| handle) (|uiCommand| uint) (|pData| lpvoid) (|pcbSize| puint))
(defcfun ("GetRawInputBuffer" get-raw-input-buffer :convention :stdcall) uint  (|pData| prawinput) (|pcbSize| puint) (|cbSizeHeader| uint))
(defcfun ("RegisterRawInputDevices" register-raw-input-devices :convention :stdcall) winbool  (|pRawInputDevices| pcrawinputdevice) (|uiNumDevices| uint) (|cbSize| uint))
(defcfun ("GetRegisteredRawInputDevices" get-registered-raw-input-devices :convention :stdcall) uint  (|pRawInputDevices| prawinputdevice) (|puiNumDevices| puint) (|cbSize| uint))
(defcfun ("GetRawInputDeviceList" get-raw-input-device-list :convention :stdcall) uint  (|pRawInputDeviceList| prawinputdevicelist) (|puiNumDevices| puint) (|cbSize| uint))
(defcfun ("DefRawInputProc" def-raw-input-proc :convention :stdcall) lresult  (|paRawInput| :pointer) (|nInput| int) (|cbSizeHeader| uint))
(defcfun ("IsValidCodePage" is-valid-code-page :convention :stdcall) winbool  (|CodePage| uint))
(defcfun ("GetACP" get-acp :convention :stdcall) uint )
(defcfun ("GetOEMCP" get-oemcp :convention :stdcall) uint )
(defcfun ("GetCPInfo" get-cp-info :convention :stdcall) winbool  (|CodePage| uint) (|lpCPInfo| lpcpinfo))
(defcfun ("GetCPInfoExA" get-cp-info-ex-a :convention :stdcall) winbool  (|CodePage| uint) (|dwFlags| dword) (|lpCPInfoEx| lpcpinfoexa))
(defcfun ("GetCPInfoExW" get-cp-info-ex-w :convention :stdcall) winbool  (|CodePage| uint) (|dwFlags| dword) (|lpCPInfoEx| lpcpinfoexw))
(defcfun ("IsDBCSLeadByte" is-dbcs-lead-byte :convention :stdcall) winbool  (|TestChar| byte))
(defcfun ("IsDBCSLeadByteEx" is-dbcs-lead-byte-ex :convention :stdcall) winbool  (|CodePage| uint) (|TestChar| byte))
(defcfun ("MultiByteToWideChar" multi-byte-to-wide-char :convention :stdcall) :int  (|CodePage| uint) (|dwFlags| dword) (|lpMultiByteStr| lpcstr) (|cbMultiByte| :int) (|lpWideCharStr| lpwstr) (|cchWideChar| :int))
(defcfun ("WideCharToMultiByte" wide-char-to-multi-byte :convention :stdcall) :int  (|CodePage| uint) (|dwFlags| dword) (|lpWideCharStr| lpcwstr) (|cchWideChar| :int) (|lpMultiByteStr| lpstr) (|cbMultiByte| :int) (|lpDefaultChar| lpcstr) (|lpUsedDefaultChar| lpbool))
(defcfun ("CompareStringA" compare-string-a :convention :stdcall) :int  (|Locale| lcid) (|dwCmpFlags| dword) (|lpString1| lpcstr) (|cchCount1| :int) (|lpString2| lpcstr) (|cchCount2| :int))
(defcfun ("CompareStringW" compare-string-w :convention :stdcall) :int  (|Locale| lcid) (|dwCmpFlags| dword) (|lpString1| lpcwstr) (|cchCount1| :int) (|lpString2| lpcwstr) (|cchCount2| :int))
(defcfun ("LCMapStringA" lc-map-string-a :convention :stdcall) :int  (|Locale| lcid) (|dwMapFlags| dword) (|lpSrcStr| lpcstr) (|cchSrc| :int) (|lpDestStr| lpstr) (|cchDest| :int))
(defcfun ("LCMapStringW" lc-map-string-w :convention :stdcall) :int  (|Locale| lcid) (|dwMapFlags| dword) (|lpSrcStr| lpcwstr) (|cchSrc| :int) (|lpDestStr| lpwstr) (|cchDest| :int))
(defcfun ("GetLocaleInfoA" get-locale-info-a :convention :stdcall) :int  (|Locale| lcid) (|LCType| lctype) (|lpLCData| lpstr) (|cchData| :int))
(defcfun ("GetLocaleInfoW" get-locale-info-w :convention :stdcall) :int  (|Locale| lcid) (|LCType| lctype) (|lpLCData| lpwstr) (|cchData| :int))
(defcfun ("SetLocaleInfoA" set-locale-info-a :convention :stdcall) winbool  (|Locale| lcid) (|LCType| lctype) (|lpLCData| lpcstr))
(defcfun ("SetLocaleInfoW" set-locale-info-w :convention :stdcall) winbool  (|Locale| lcid) (|LCType| lctype) (|lpLCData| lpcwstr))
(defcfun ("GetCalendarInfoA" get-calendar-info-a :convention :stdcall) :int  (|Locale| lcid) (|Calendar| calid) (|CalType| caltype) (|lpCalData| lpstr) (|cchData| :int) (|lpValue| lpdword))
(defcfun ("GetCalendarInfoW" get-calendar-info-w :convention :stdcall) :int  (|Locale| lcid) (|Calendar| calid) (|CalType| caltype) (|lpCalData| lpwstr) (|cchData| :int) (|lpValue| lpdword))
(defcfun ("SetCalendarInfoA" set-calendar-info-a :convention :stdcall) winbool  (|Locale| lcid) (|Calendar| calid) (|CalType| caltype) (|lpCalData| lpcstr))
(defcfun ("SetCalendarInfoW" set-calendar-info-w :convention :stdcall) winbool  (|Locale| lcid) (|Calendar| calid) (|CalType| caltype) (|lpCalData| lpcwstr))
(defcfun ("GetTimeFormatA" get-time-format-a :convention :stdcall) :int  (|Locale| lcid) (|dwFlags| dword) (|lpTime| :pointer) (|lpFormat| lpcstr) (|lpTimeStr| lpstr) (|cchTime| :int))
(defcfun ("GetTimeFormatW" get-time-format-w :convention :stdcall) :int  (|Locale| lcid) (|dwFlags| dword) (|lpTime| :pointer) (|lpFormat| lpcwstr) (|lpTimeStr| lpwstr) (|cchTime| :int))
(defcfun ("GetDateFormatA" get-date-format-a :convention :stdcall) :int  (|Locale| lcid) (|dwFlags| dword) (|lpDate| :pointer) (|lpFormat| lpcstr) (|lpDateStr| lpstr) (|cchDate| :int))
(defcfun ("GetDateFormatW" get-date-format-w :convention :stdcall) :int  (|Locale| lcid) (|dwFlags| dword) (|lpDate| :pointer) (|lpFormat| lpcwstr) (|lpDateStr| lpwstr) (|cchDate| :int))
(defcfun ("GetNumberFormatA" get-number-format-a :convention :stdcall) :int  (|Locale| lcid) (|dwFlags| dword) (|lpValue| lpcstr) (|lpFormat| :pointer) (|lpNumberStr| lpstr) (|cchNumber| :int))
(defcfun ("GetNumberFormatW" get-number-format-w :convention :stdcall) :int  (|Locale| lcid) (|dwFlags| dword) (|lpValue| lpcwstr) (|lpFormat| :pointer) (|lpNumberStr| lpwstr) (|cchNumber| :int))
(defcfun ("GetCurrencyFormatA" get-currency-format-a :convention :stdcall) :int  (|Locale| lcid) (|dwFlags| dword) (|lpValue| lpcstr) (|lpFormat| :pointer) (|lpCurrencyStr| lpstr) (|cchCurrency| :int))
(defcfun ("GetCurrencyFormatW" get-currency-format-w :convention :stdcall) :int  (|Locale| lcid) (|dwFlags| dword) (|lpValue| lpcwstr) (|lpFormat| :pointer) (|lpCurrencyStr| lpwstr) (|cchCurrency| :int))
(defcfun ("EnumCalendarInfoA" enum-calendar-info-a :convention :stdcall) winbool  (|lpCalInfoEnumProc| calinfo_enumproca) (|Locale| lcid) (|Calendar| calid) (|CalType| caltype))
(defcfun ("EnumCalendarInfoW" enum-calendar-info-w :convention :stdcall) winbool  (|lpCalInfoEnumProc| calinfo_enumprocw) (|Locale| lcid) (|Calendar| calid) (|CalType| caltype))
(defcfun ("EnumCalendarInfoExA" enum-calendar-info-ex-a :convention :stdcall) winbool  (|lpCalInfoEnumProcEx| calinfo_enumprocexa) (|Locale| lcid) (|Calendar| calid) (|CalType| caltype))
(defcfun ("EnumCalendarInfoExW" enum-calendar-info-ex-w :convention :stdcall) winbool  (|lpCalInfoEnumProcEx| calinfo_enumprocexw) (|Locale| lcid) (|Calendar| calid) (|CalType| caltype))
(defcfun ("EnumTimeFormatsA" enum-time-formats-a :convention :stdcall) winbool  (|lpTimeFmtEnumProc| timefmt_enumproca) (|Locale| lcid) (|dwFlags| dword))
(defcfun ("EnumTimeFormatsW" enum-time-formats-w :convention :stdcall) winbool  (|lpTimeFmtEnumProc| timefmt_enumprocw) (|Locale| lcid) (|dwFlags| dword))
(defcfun ("EnumDateFormatsA" enum-date-formats-a :convention :stdcall) winbool  (|lpDateFmtEnumProc| datefmt_enumproca) (|Locale| lcid) (|dwFlags| dword))
(defcfun ("EnumDateFormatsW" enum-date-formats-w :convention :stdcall) winbool  (|lpDateFmtEnumProc| datefmt_enumprocw) (|Locale| lcid) (|dwFlags| dword))
(defcfun ("EnumDateFormatsExA" enum-date-formats-ex-a :convention :stdcall) winbool  (|lpDateFmtEnumProcEx| datefmt_enumprocexa) (|Locale| lcid) (|dwFlags| dword))
(defcfun ("EnumDateFormatsExW" enum-date-formats-ex-w :convention :stdcall) winbool  (|lpDateFmtEnumProcEx| datefmt_enumprocexw) (|Locale| lcid) (|dwFlags| dword))
(defcfun ("IsValidLanguageGroup" is-valid-language-group :convention :stdcall) winbool  (|LanguageGroup| lgrpid) (|dwFlags| dword))
(defcfun ("GetNLSVersion" get-nls-version :convention :stdcall) winbool  (|Function| nls_function) (|Locale| lcid) (|lpVersionInformation| lpnlsversioninfo))
(defcfun ("IsNLSDefinedString" is-nls-defined-string :convention :stdcall) winbool  (|Function| nls_function) (|dwFlags| dword) (|lpVersionInformation| lpnlsversioninfo) (|lpString| lpcwstr) (|cchStr| int))
(defcfun ("IsValidLocale" is-valid-locale :convention :stdcall) winbool  (|Locale| lcid) (|dwFlags| dword))
(defcfun ("GetGeoInfoA" get-geo-info-a :convention :stdcall) :int  (|Location| geoid) (|GeoType| geotype) (|lpGeoData| lpstr) (|cchData| :int) (|LangId| langid))
(defcfun ("GetGeoInfoW" get-geo-info-w :convention :stdcall) :int  (|Location| geoid) (|GeoType| geotype) (|lpGeoData| lpwstr) (|cchData| :int) (|LangId| langid))
(defcfun ("EnumSystemGeoID" enum-system-geo-id :convention :stdcall) winbool  (|GeoClass| geoclass) (|ParentGeoId| geoid) (|lpGeoEnumProc| geo_enumproc))
(defcfun ("GetUserGeoID" get-user-geo-id :convention :stdcall) geoid  (|GeoClass| geoclass))
(defcfun ("SetUserGeoID" set-user-geo-id :convention :stdcall) winbool  (|GeoId| geoid))
(defcfun ("ConvertDefaultLocale" convert-default-locale :convention :stdcall) lcid  (|Locale| lcid))
(defcfun ("GetThreadLocale" get-thread-locale :convention :stdcall) lcid )
(defcfun ("SetThreadLocale" set-thread-locale :convention :stdcall) winbool  (|Locale| lcid))
(defcfun ("GetSystemDefaultUILanguage" get-system-default-ui-language :convention :stdcall) langid )
(defcfun ("GetUserDefaultUILanguage" get-user-default-ui-language :convention :stdcall) langid )
(defcfun ("GetSystemDefaultLangID" get-system-default-lang-id :convention :stdcall) langid )
(defcfun ("GetUserDefaultLangID" get-user-default-lang-id :convention :stdcall) langid )
(defcfun ("GetSystemDefaultLCID" get-system-default-lcid :convention :stdcall) lcid )
(defcfun ("GetUserDefaultLCID" get-user-default-lcid :convention :stdcall) lcid )
(defcfun ("GetStringTypeExA" get-string-type-ex-a :convention :stdcall) winbool  (|Locale| lcid) (|dwInfoType| dword) (|lpSrcStr| lpcstr) (|cchSrc| :int) (|lpCharType| lpword))
(defcfun ("GetStringTypeExW" get-string-type-ex-w :convention :stdcall) winbool  (|Locale| lcid) (|dwInfoType| dword) (|lpSrcStr| lpcwstr) (|cchSrc| :int) (|lpCharType| lpword))
(defcfun ("GetStringTypeA" get-string-type-a :convention :stdcall) winbool  (|Locale| lcid) (|dwInfoType| dword) (|lpSrcStr| lpcstr) (|cchSrc| :int) (|lpCharType| lpword))
(defcfun ("GetStringTypeW" get-string-type-w :convention :stdcall) winbool  (|dwInfoType| dword) (|lpSrcStr| lpcwstr) (|cchSrc| :int) (|lpCharType| lpword))
(defcfun ("FoldStringA" fold-string-a :convention :stdcall) :int  (|dwMapFlags| dword) (|lpSrcStr| lpcstr) (|cchSrc| :int) (|lpDestStr| lpstr) (|cchDest| :int))
(defcfun ("FoldStringW" fold-string-w :convention :stdcall) :int  (|dwMapFlags| dword) (|lpSrcStr| lpcwstr) (|cchSrc| :int) (|lpDestStr| lpwstr) (|cchDest| :int))
(defcfun ("EnumSystemLanguageGroupsA" enum-system-language-groups-a :convention :stdcall) winbool  (|lpLanguageGroupEnumProc| languagegroup_enumproca) (|dwFlags| dword) (|lParam| long_ptr))
(defcfun ("EnumSystemLanguageGroupsW" enum-system-language-groups-w :convention :stdcall) winbool  (|lpLanguageGroupEnumProc| languagegroup_enumprocw) (|dwFlags| dword) (|lParam| long_ptr))
(defcfun ("EnumLanguageGroupLocalesA" enum-language-group-locales-a :convention :stdcall) winbool  (|lpLangGroupLocaleEnumProc| langgrouplocale_enumproca) (|LanguageGroup| lgrpid) (|dwFlags| dword) (|lParam| long_ptr))
(defcfun ("EnumLanguageGroupLocalesW" enum-language-group-locales-w :convention :stdcall) winbool  (|lpLangGroupLocaleEnumProc| langgrouplocale_enumprocw) (|LanguageGroup| lgrpid) (|dwFlags| dword) (|lParam| long_ptr))
(defcfun ("EnumUILanguagesA" enum-ui-languages-a :convention :stdcall) winbool  (|lpUILanguageEnumProc| uilanguage_enumproca) (|dwFlags| dword) (|lParam| long_ptr))
(defcfun ("EnumUILanguagesW" enum-ui-languages-w :convention :stdcall) winbool  (|lpUILanguageEnumProc| uilanguage_enumprocw) (|dwFlags| dword) (|lParam| long_ptr))
(defcfun ("EnumSystemLocalesA" enum-system-locales-a :convention :stdcall) winbool  (|lpLocaleEnumProc| locale_enumproca) (|dwFlags| dword))
(defcfun ("EnumSystemLocalesW" enum-system-locales-w :convention :stdcall) winbool  (|lpLocaleEnumProc| locale_enumprocw) (|dwFlags| dword))
(defcfun ("EnumSystemCodePagesA" enum-system-code-pages-a :convention :stdcall) winbool  (|lpCodePageEnumProc| codepage_enumproca) (|dwFlags| dword))
(defcfun ("EnumSystemCodePagesW" enum-system-code-pages-w :convention :stdcall) winbool  (|lpCodePageEnumProc| codepage_enumprocw) (|dwFlags| dword))
(defcfun ("IsNormalizedString" is-normalized-string :convention :stdcall) winbool  (|NormForm| norm_form) (|lpString| lpcwstr) (|cwLength| :int))
(defcfun ("NormalizeString" normalize-string :convention :stdcall) :int  (|NormForm| norm_form) (|lpSrcString| lpcwstr) (|cwSrcLength| :int) (|lpDstString| lpwstr) (|cwDstLength| :int))
(defcfun ("IdnToAscii" idn-to-ascii :convention :stdcall) :int  (|dwFlags| dword) (|lpUnicodeCharStr| lpcwstr) (|cchUnicodeChar| :int) (|lpASCIICharStr| lpwstr) (|cchASCIIChar| :int))
(defcfun ("IdnToNameprepUnicode" idn-to-nameprep-unicode :convention :stdcall) :int  (|dwFlags| dword) (|lpUnicodeCharStr| lpcwstr) (|cchUnicodeChar| :int) (|lpNameprepCharStr| lpwstr) (|cchNameprepChar| :int))
(defcfun ("IdnToUnicode" idn-to-unicode :convention :stdcall) :int  (|dwFlags| dword) (|lpASCIICharStr| lpcwstr) (|cchASCIIChar| :int) (|lpUnicodeCharStr| lpwstr) (|cchUnicodeChar| :int))
(defcfun ("PeekConsoleInputA" peek-console-input-a :convention :stdcall) winbool  (|hConsoleInput| handle) (|lpBuffer| pinput_record) (|nLength| dword) (|lpNumberOfEventsRead| lpdword))
(defcfun ("PeekConsoleInputW" peek-console-input-w :convention :stdcall) winbool  (|hConsoleInput| handle) (|lpBuffer| pinput_record) (|nLength| dword) (|lpNumberOfEventsRead| lpdword))
(defcfun ("ReadConsoleInputA" read-console-input-a :convention :stdcall) winbool  (|hConsoleInput| handle) (|lpBuffer| pinput_record) (|nLength| dword) (|lpNumberOfEventsRead| lpdword))
(defcfun ("ReadConsoleInputW" read-console-input-w :convention :stdcall) winbool  (|hConsoleInput| handle) (|lpBuffer| pinput_record) (|nLength| dword) (|lpNumberOfEventsRead| lpdword))
(defcfun ("WriteConsoleInputA" write-console-input-a :convention :stdcall) winbool  (|hConsoleInput| handle) (|lpBuffer| :pointer) (|nLength| dword) (|lpNumberOfEventsWritten| lpdword))
(defcfun ("WriteConsoleInputW" write-console-input-w :convention :stdcall) winbool  (|hConsoleInput| handle) (|lpBuffer| :pointer) (|nLength| dword) (|lpNumberOfEventsWritten| lpdword))
(defcfun ("ReadConsoleOutputA" read-console-output-a :convention :stdcall) winbool  (|hConsoleOutput| handle) (|lpBuffer| pchar_info) (|dwBufferSize| coord) (|dwBufferCoord| coord) (|lpReadRegion| psmall_rect))
(defcfun ("ReadConsoleOutputW" read-console-output-w :convention :stdcall) winbool  (|hConsoleOutput| handle) (|lpBuffer| pchar_info) (|dwBufferSize| coord) (|dwBufferCoord| coord) (|lpReadRegion| psmall_rect))
(defcfun ("WriteConsoleOutputA" write-console-output-a :convention :stdcall) winbool  (|hConsoleOutput| handle) (|lpBuffer| :pointer) (|dwBufferSize| coord) (|dwBufferCoord| coord) (|lpWriteRegion| psmall_rect))
(defcfun ("WriteConsoleOutputW" write-console-output-w :convention :stdcall) winbool  (|hConsoleOutput| handle) (|lpBuffer| :pointer) (|dwBufferSize| coord) (|dwBufferCoord| coord) (|lpWriteRegion| psmall_rect))
(defcfun ("ReadConsoleOutputCharacterA" read-console-output-character-a :convention :stdcall) winbool  (|hConsoleOutput| handle) (|lpCharacter| lpstr) (|nLength| dword) (|dwReadCoord| coord) (|lpNumberOfCharsRead| lpdword))
(defcfun ("ReadConsoleOutputCharacterW" read-console-output-character-w :convention :stdcall) winbool  (|hConsoleOutput| handle) (|lpCharacter| lpwstr) (|nLength| dword) (|dwReadCoord| coord) (|lpNumberOfCharsRead| lpdword))
(defcfun ("ReadConsoleOutputAttribute" read-console-output-attribute :convention :stdcall) winbool  (|hConsoleOutput| handle) (|lpAttribute| lpword) (|nLength| dword) (|dwReadCoord| coord) (|lpNumberOfAttrsRead| lpdword))
(defcfun ("WriteConsoleOutputCharacterA" write-console-output-character-a :convention :stdcall) winbool  (|hConsoleOutput| handle) (|lpCharacter| lpcstr) (|nLength| dword) (|dwWriteCoord| coord) (|lpNumberOfCharsWritten| lpdword))
(defcfun ("WriteConsoleOutputCharacterW" write-console-output-character-w :convention :stdcall) winbool  (|hConsoleOutput| handle) (|lpCharacter| lpcwstr) (|nLength| dword) (|dwWriteCoord| coord) (|lpNumberOfCharsWritten| lpdword))
(defcfun ("WriteConsoleOutputAttribute" write-console-output-attribute :convention :stdcall) winbool  (|hConsoleOutput| handle) (|lpAttribute| :pointer) (|nLength| dword) (|dwWriteCoord| coord) (|lpNumberOfAttrsWritten| lpdword))
(defcfun ("FillConsoleOutputCharacterA" fill-console-output-character-a :convention :stdcall) winbool  (|hConsoleOutput| handle) (|cCharacter| char) (|nLength| dword) (|dwWriteCoord| coord) (|lpNumberOfCharsWritten| lpdword))
(defcfun ("FillConsoleOutputCharacterW" fill-console-output-character-w :convention :stdcall) winbool  (|hConsoleOutput| handle) (|cCharacter| wchar) (|nLength| dword) (|dwWriteCoord| coord) (|lpNumberOfCharsWritten| lpdword))
(defcfun ("FillConsoleOutputAttribute" fill-console-output-attribute :convention :stdcall) winbool  (|hConsoleOutput| handle) (|wAttribute| word) (|nLength| dword) (|dwWriteCoord| coord) (|lpNumberOfAttrsWritten| lpdword))
(defcfun ("GetConsoleMode" get-console-mode :convention :stdcall) winbool  (|hConsoleHandle| handle) (|lpMode| lpdword))
(defcfun ("GetNumberOfConsoleInputEvents" get-number-of-console-input-events :convention :stdcall) winbool  (|hConsoleInput| handle) (|lpNumberOfEvents| lpdword))
(defcfun ("GetConsoleScreenBufferInfo" get-console-screen-buffer-info :convention :stdcall) winbool  (|hConsoleOutput| handle) (|lpConsoleScreenBufferInfo| pconsole_screen_buffer_info))
(defcfun ("GetLargestConsoleWindowSize" get-largest-console-window-size :convention :stdcall) coord  (|hConsoleOutput| handle))
(defcfun ("GetConsoleCursorInfo" get-console-cursor-info :convention :stdcall) winbool  (|hConsoleOutput| handle) (|lpConsoleCursorInfo| pconsole_cursor_info))
(defcfun ("GetCurrentConsoleFont" get-current-console-font :convention :stdcall) winbool  (|hConsoleOutput| handle) (|bMaximumWindow| winbool) (|lpConsoleCurrentFont| pconsole_font_info))
(defcfun ("GetConsoleFontSize" get-console-font-size :convention :stdcall) coord  (|hConsoleOutput| handle) (|nFont| dword))
(defcfun ("GetConsoleSelectionInfo" get-console-selection-info :convention :stdcall) winbool  (|lpConsoleSelectionInfo| pconsole_selection_info))
(defcfun ("GetNumberOfConsoleMouseButtons" get-number-of-console-mouse-buttons :convention :stdcall) winbool  (|lpNumberOfMouseButtons| lpdword))
(defcfun ("SetConsoleMode" set-console-mode :convention :stdcall) winbool  (|hConsoleHandle| handle) (|dwMode| dword))
(defcfun ("SetConsoleActiveScreenBuffer" set-console-active-screen-buffer :convention :stdcall) winbool  (|hConsoleOutput| handle))
(defcfun ("FlushConsoleInputBuffer" flush-console-input-buffer :convention :stdcall) winbool  (|hConsoleInput| handle))
(defcfun ("SetConsoleScreenBufferSize" set-console-screen-buffer-size :convention :stdcall) winbool  (|hConsoleOutput| handle) (|dwSize| coord))
(defcfun ("SetConsoleCursorPosition" set-console-cursor-position :convention :stdcall) winbool  (|hConsoleOutput| handle) (|dwCursorPosition| coord))
(defcfun ("SetConsoleCursorInfo" set-console-cursor-info :convention :stdcall) winbool  (|hConsoleOutput| handle) (|lpConsoleCursorInfo| :pointer))
(defcfun ("ScrollConsoleScreenBufferA" scroll-console-screen-buffer-a :convention :stdcall) winbool  (|hConsoleOutput| handle) (|lpScrollRectangle| :pointer) (|lpClipRectangle| :pointer) (|dwDestinationOrigin| coord) (|lpFill| :pointer))
(defcfun ("ScrollConsoleScreenBufferW" scroll-console-screen-buffer-w :convention :stdcall) winbool  (|hConsoleOutput| handle) (|lpScrollRectangle| :pointer) (|lpClipRectangle| :pointer) (|dwDestinationOrigin| coord) (|lpFill| :pointer))
(defcfun ("SetConsoleWindowInfo" set-console-window-info :convention :stdcall) winbool  (|hConsoleOutput| handle) (|bAbsolute| winbool) (|lpConsoleWindow| :pointer))
(defcfun ("SetConsoleTextAttribute" set-console-text-attribute :convention :stdcall) winbool  (|hConsoleOutput| handle) (|wAttributes| word))
(defcfun ("SetConsoleCtrlHandler" set-console-ctrl-handler :convention :stdcall) winbool  (|HandlerRoutine| phandler_routine) (|Add| winbool))
(defcfun ("GenerateConsoleCtrlEvent" generate-console-ctrl-event :convention :stdcall) winbool  (|dwCtrlEvent| dword) (|dwProcessGroupId| dword))
(defcfun ("AllocConsole" alloc-console :convention :stdcall) winbool )
(defcfun ("FreeConsole" free-console :convention :stdcall) winbool )
(defcfun ("AttachConsole" attach-console :convention :stdcall) winbool  (|dwProcessId| dword))
(defcfun ("GetConsoleTitleA" get-console-title-a :convention :stdcall) dword  (|lpConsoleTitle| lpstr) (|nSize| dword))
(defcfun ("GetConsoleTitleW" get-console-title-w :convention :stdcall) dword  (|lpConsoleTitle| lpwstr) (|nSize| dword))
(defcfun ("SetConsoleTitleA" set-console-title-a :convention :stdcall) winbool  (|lpConsoleTitle| lpcstr))
(defcfun ("SetConsoleTitleW" set-console-title-w :convention :stdcall) winbool  (|lpConsoleTitle| lpcwstr))
(defcfun ("ReadConsoleA" read-console-a :convention :stdcall) winbool  (|hConsoleInput| handle) (|lpBuffer| lpvoid) (|nNumberOfCharsToRead| dword) (|lpNumberOfCharsRead| lpdword) (|lpReserved| lpvoid))
(defcfun ("ReadConsoleW" read-console-w :convention :stdcall) winbool  (|hConsoleInput| handle) (|lpBuffer| lpvoid) (|nNumberOfCharsToRead| dword) (|lpNumberOfCharsRead| lpdword) (|lpReserved| lpvoid))
(defcfun ("WriteConsoleA" write-console-a :convention :stdcall) winbool  (|hConsoleOutput| handle) (|lpBuffer| :pointer) (|nNumberOfCharsToWrite| dword) (|lpNumberOfCharsWritten| lpdword) (|lpReserved| lpvoid))
(defcfun ("WriteConsoleW" write-console-w :convention :stdcall) winbool  (|hConsoleOutput| handle) (|lpBuffer| :pointer) (|nNumberOfCharsToWrite| dword) (|lpNumberOfCharsWritten| lpdword) (|lpReserved| lpvoid))
(defcfun ("CreateConsoleScreenBuffer" create-console-screen-buffer :convention :stdcall) handle  (|dwDesiredAccess| dword) (|dwShareMode| dword) (|lpSecurityAttributes| :pointer) (|dwFlags| dword) (|lpScreenBufferData| lpvoid))
(defcfun ("GetConsoleCP" get-console-cp :convention :stdcall) uint )
(defcfun ("SetConsoleCP" set-console-cp :convention :stdcall) winbool  (|wCodePageID| uint))
(defcfun ("GetConsoleOutputCP" get-console-output-cp :convention :stdcall) uint )
(defcfun ("SetConsoleOutputCP" set-console-output-cp :convention :stdcall) winbool  (|wCodePageID| uint))
(defcfun ("GetConsoleDisplayMode" get-console-display-mode :convention :stdcall) winbool  (|lpModeFlags| lpdword))
(defcfun ("GetConsoleWindow" get-console-window :convention :stdcall) hwnd )
(defcfun ("GetConsoleProcessList" get-console-process-list :convention :stdcall) dword  (|lpdwProcessList| lpdword) (|dwProcessCount| dword))
(defcfun ("AddConsoleAliasA" add-console-alias-a :convention :stdcall) winbool  (|Source| lpstr) (|Target| lpstr) (|ExeName| lpstr))
(defcfun ("AddConsoleAliasW" add-console-alias-w :convention :stdcall) winbool  (|Source| lpwstr) (|Target| lpwstr) (|ExeName| lpwstr))
(defcfun ("GetConsoleAliasA" get-console-alias-a :convention :stdcall) dword  (|Source| lpstr) (|TargetBuffer| lpstr) (|TargetBufferLength| dword) (|ExeName| lpstr))
(defcfun ("GetConsoleAliasW" get-console-alias-w :convention :stdcall) dword  (|Source| lpwstr) (|TargetBuffer| lpwstr) (|TargetBufferLength| dword) (|ExeName| lpwstr))
(defcfun ("GetConsoleAliasesLengthA" get-console-aliases-length-a :convention :stdcall) dword  (|ExeName| lpstr))
(defcfun ("GetConsoleAliasesLengthW" get-console-aliases-length-w :convention :stdcall) dword  (|ExeName| lpwstr))
(defcfun ("GetConsoleAliasExesLengthA" get-console-alias-exes-length-a :convention :stdcall) dword )
(defcfun ("GetConsoleAliasExesLengthW" get-console-alias-exes-length-w :convention :stdcall) dword )
(defcfun ("GetConsoleAliasesA" get-console-aliases-a :convention :stdcall) dword  (|AliasBuffer| lpstr) (|AliasBufferLength| dword) (|ExeName| lpstr))
(defcfun ("GetConsoleAliasesW" get-console-aliases-w :convention :stdcall) dword  (|AliasBuffer| lpwstr) (|AliasBufferLength| dword) (|ExeName| lpwstr))
(defcfun ("GetConsoleAliasExesA" get-console-alias-exes-a :convention :stdcall) dword  (|ExeNameBuffer| lpstr) (|ExeNameBufferLength| dword))
(defcfun ("GetConsoleAliasExesW" get-console-alias-exes-w :convention :stdcall) dword  (|ExeNameBuffer| lpwstr) (|ExeNameBufferLength| dword))
(defcfun ("VerFindFileA" ver-find-file-a :convention :stdcall) dword  (|uFlags| dword) (|szFileName| lpstr) (|szWinDir| lpstr) (|szAppDir| lpstr) (|szCurDir| lpstr) (|lpuCurDirLen| puint) (|szDestDir| lpstr) (|lpuDestDirLen| puint))
(defcfun ("VerFindFileW" ver-find-file-w :convention :stdcall) dword  (|uFlags| dword) (|szFileName| lpwstr) (|szWinDir| lpwstr) (|szAppDir| lpwstr) (|szCurDir| lpwstr) (|lpuCurDirLen| puint) (|szDestDir| lpwstr) (|lpuDestDirLen| puint))
(defcfun ("VerInstallFileA" ver-install-file-a :convention :stdcall) dword  (|uFlags| dword) (|szSrcFileName| lpstr) (|szDestFileName| lpstr) (|szSrcDir| lpstr) (|szDestDir| lpstr) (|szCurDir| lpstr) (|szTmpFile| lpstr) (|lpuTmpFileLen| puint))
(defcfun ("VerInstallFileW" ver-install-file-w :convention :stdcall) dword  (|uFlags| dword) (|szSrcFileName| lpwstr) (|szDestFileName| lpwstr) (|szSrcDir| lpwstr) (|szDestDir| lpwstr) (|szCurDir| lpwstr) (|szTmpFile| lpwstr) (|lpuTmpFileLen| puint))
(defcfun ("GetFileVersionInfoSizeA" get-file-version-info-size-a :convention :stdcall) dword  (|lptstrFilename| lpcstr) (|lpdwHandle| lpdword))
(defcfun ("GetFileVersionInfoSizeW" get-file-version-info-size-w :convention :stdcall) dword  (|lptstrFilename| lpcwstr) (|lpdwHandle| lpdword))
(defcfun ("GetFileVersionInfoA" get-file-version-info-a :convention :stdcall) winbool  (|lptstrFilename| lpcstr) (|dwHandle| dword) (|dwLen| dword) (|lpData| lpvoid))
(defcfun ("GetFileVersionInfoW" get-file-version-info-w :convention :stdcall) winbool  (|lptstrFilename| lpcwstr) (|dwHandle| dword) (|dwLen| dword) (|lpData| lpvoid))
(defcfun ("VerLanguageNameA" ver-language-name-a :convention :stdcall) dword  (|wLang| dword) (|szLang| lpstr) (|nSize| dword))
(defcfun ("VerLanguageNameW" ver-language-name-w :convention :stdcall) dword  (|wLang| dword) (|szLang| lpwstr) (|nSize| dword))
(defcfun ("VerQueryValueA" ver-query-value-a :convention :stdcall) winbool  (|pBlock| lpvoid) (|lpSubBlock| lpstr) (|lplpBuffer| :pointer) (|puLen| puint))
(defcfun ("VerQueryValueW" ver-query-value-w :convention :stdcall) winbool  (|pBlock| lpvoid) (|lpSubBlock| lpwstr) (|lplpBuffer| :pointer) (|puLen| puint))
(defcfun ("QUERYHANDLER" queryhandler) dword  (|keycontext| lpvoid) (|val_list| pvalcontext) (|num_vals| dword) (|outputbuffer| lpvoid) (|total_outlen| :pointer) (|input_blen| dword))
(defcfun ("RegCloseKey" reg-close-key :convention :stdcall) long  (|hKey| hkey))
(defcfun ("RegOverridePredefKey" reg-override-predef-key :convention :stdcall) long  (|hKey| hkey) (|hNewHKey| hkey))
(defcfun ("RegOpenUserClassesRoot" reg-open-user-classes-root :convention :stdcall) long  (|hToken| handle) (|dwOptions| dword) (|samDesired| regsam) (|phkResult| phkey))
(defcfun ("RegOpenCurrentUser" reg-open-current-user :convention :stdcall) long  (|samDesired| regsam) (|phkResult| phkey))
(defcfun ("RegDisablePredefinedCache" reg-disable-predefined-cache :convention :stdcall) long )
(defcfun ("RegConnectRegistryA" reg-connect-registry-a :convention :stdcall) long  (|lpMachineName| lpcstr) (|hKey| hkey) (|phkResult| phkey))
(defcfun ("RegConnectRegistryW" reg-connect-registry-w :convention :stdcall) long  (|lpMachineName| lpcwstr) (|hKey| hkey) (|phkResult| phkey))
(defcfun ("RegConnectRegistryExA" reg-connect-registry-ex-a :convention :stdcall) long  (|lpMachineName| lpcstr) (|hKey| hkey) (|Flags| ulong) (|phkResult| phkey))
(defcfun ("RegConnectRegistryExW" reg-connect-registry-ex-w :convention :stdcall) long  (|lpMachineName| lpcwstr) (|hKey| hkey) (|Flags| ulong) (|phkResult| phkey))
(defcfun ("RegCreateKeyA" reg-create-key-a :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcstr) (|phkResult| phkey))
(defcfun ("RegCreateKeyW" reg-create-key-w :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcwstr) (|phkResult| phkey))
(defcfun ("RegCreateKeyExA" reg-create-key-ex-a :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcstr) (|Reserved| dword) (|lpClass| lpstr) (|dwOptions| dword) (|samDesired| regsam) (|lpSecurityAttributes| lpsecurity_attributes) (|phkResult| phkey) (|lpdwDisposition| lpdword))
(defcfun ("RegCreateKeyExW" reg-create-key-ex-w :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcwstr) (|Reserved| dword) (|lpClass| lpwstr) (|dwOptions| dword) (|samDesired| regsam) (|lpSecurityAttributes| lpsecurity_attributes) (|phkResult| phkey) (|lpdwDisposition| lpdword))
(defcfun ("RegDeleteKeyA" reg-delete-key-a :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcstr))
(defcfun ("RegDeleteKeyW" reg-delete-key-w :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcwstr))
(defcfun ("RegDeleteKeyExA" reg-delete-key-ex-a :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcstr) (|samDesired| regsam) (|Reserved| dword))
(defcfun ("RegDeleteKeyExW" reg-delete-key-ex-w :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcwstr) (|samDesired| regsam) (|Reserved| dword))
(defcfun ("RegDisableReflectionKey" reg-disable-reflection-key :convention :stdcall) long  (|hBase| hkey))
(defcfun ("RegEnableReflectionKey" reg-enable-reflection-key :convention :stdcall) long  (|hBase| hkey))
(defcfun ("RegQueryReflectionKey" reg-query-reflection-key :convention :stdcall) long  (|hBase| hkey) (|bIsReflectionDisabled| :pointer))
(defcfun ("RegDeleteValueA" reg-delete-value-a :convention :stdcall) long  (|hKey| hkey) (|lpValueName| lpcstr))
(defcfun ("RegDeleteValueW" reg-delete-value-w :convention :stdcall) long  (|hKey| hkey) (|lpValueName| lpcwstr))
(defcfun ("RegEnumKeyA" reg-enum-key-a :convention :stdcall) long  (|hKey| hkey) (|dwIndex| dword) (|lpName| lpstr) (|cchName| dword))
(defcfun ("RegEnumKeyW" reg-enum-key-w :convention :stdcall) long  (|hKey| hkey) (|dwIndex| dword) (|lpName| lpwstr) (|cchName| dword))
(defcfun ("RegEnumKeyExA" reg-enum-key-ex-a :convention :stdcall) long  (|hKey| hkey) (|dwIndex| dword) (|lpName| lpstr) (|lpcchName| lpdword) (|lpReserved| lpdword) (|lpClass| lpstr) (|lpcchClass| lpdword) (|lpftLastWriteTime| pfiletime))
(defcfun ("RegEnumKeyExW" reg-enum-key-ex-w :convention :stdcall) long  (|hKey| hkey) (|dwIndex| dword) (|lpName| lpwstr) (|lpcchName| lpdword) (|lpReserved| lpdword) (|lpClass| lpwstr) (|lpcchClass| lpdword) (|lpftLastWriteTime| pfiletime))
(defcfun ("RegEnumValueA" reg-enum-value-a :convention :stdcall) long  (|hKey| hkey) (|dwIndex| dword) (|lpValueName| lpstr) (|lpcchValueName| lpdword) (|lpReserved| lpdword) (|lpType| lpdword) (|lpData| lpbyte) (|lpcbData| lpdword))
(defcfun ("RegEnumValueW" reg-enum-value-w :convention :stdcall) long  (|hKey| hkey) (|dwIndex| dword) (|lpValueName| lpwstr) (|lpcchValueName| lpdword) (|lpReserved| lpdword) (|lpType| lpdword) (|lpData| lpbyte) (|lpcbData| lpdword))
(defcfun ("RegFlushKey" reg-flush-key :convention :stdcall) long  (|hKey| hkey))
(defcfun ("RegGetKeySecurity" reg-get-key-security :convention :stdcall) long  (|hKey| hkey) (|SecurityInformation| security_information) (|pSecurityDescriptor| psecurity_descriptor) (|lpcbSecurityDescriptor| lpdword))
(defcfun ("RegLoadKeyA" reg-load-key-a :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcstr) (|lpFile| lpcstr))
(defcfun ("RegLoadKeyW" reg-load-key-w :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcwstr) (|lpFile| lpcwstr))
(defcfun ("RegNotifyChangeKeyValue" reg-notify-change-key-value :convention :stdcall) long  (|hKey| hkey) (|bWatchSubtree| winbool) (|dwNotifyFilter| dword) (|hEvent| handle) (|fAsynchronous| winbool))
(defcfun ("RegOpenKeyA" reg-open-key-a :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcstr) (|phkResult| phkey))
(defcfun ("RegOpenKeyW" reg-open-key-w :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcwstr) (|phkResult| phkey))
(defcfun ("RegOpenKeyExA" reg-open-key-ex-a :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcstr) (|ulOptions| dword) (|samDesired| regsam) (|phkResult| phkey))
(defcfun ("RegOpenKeyExW" reg-open-key-ex-w :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcwstr) (|ulOptions| dword) (|samDesired| regsam) (|phkResult| phkey))
(defcfun ("RegQueryInfoKeyA" reg-query-info-key-a :convention :stdcall) long  (|hKey| hkey) (|lpClass| lpstr) (|lpcchClass| lpdword) (|lpReserved| lpdword) (|lpcSubKeys| lpdword) (|lpcbMaxSubKeyLen| lpdword) (|lpcbMaxClassLen| lpdword) (|lpcValues| lpdword) (|lpcbMaxValueNameLen| lpdword) (|lpcbMaxValueLen| lpdword) (|lpcbSecurityDescriptor| lpdword) (|lpftLastWriteTime| pfiletime))
(defcfun ("RegQueryInfoKeyW" reg-query-info-key-w :convention :stdcall) long  (|hKey| hkey) (|lpClass| lpwstr) (|lpcchClass| lpdword) (|lpReserved| lpdword) (|lpcSubKeys| lpdword) (|lpcbMaxSubKeyLen| lpdword) (|lpcbMaxClassLen| lpdword) (|lpcValues| lpdword) (|lpcbMaxValueNameLen| lpdword) (|lpcbMaxValueLen| lpdword) (|lpcbSecurityDescriptor| lpdword) (|lpftLastWriteTime| pfiletime))
(defcfun ("RegQueryValueA" reg-query-value-a :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcstr) (|lpData| lpstr) (|lpcbData| plong))
(defcfun ("RegQueryValueW" reg-query-value-w :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcwstr) (|lpData| lpwstr) (|lpcbData| plong))
(defcfun ("RegQueryMultipleValuesA" reg-query-multiple-values-a :convention :stdcall) long  (|hKey| hkey) (|val_list| pvalenta) (|num_vals| dword) (|lpValueBuf| lpstr) (|ldwTotsize| lpdword))
(defcfun ("RegQueryMultipleValuesW" reg-query-multiple-values-w :convention :stdcall) long  (|hKey| hkey) (|val_list| pvalentw) (|num_vals| dword) (|lpValueBuf| lpwstr) (|ldwTotsize| lpdword))
(defcfun ("RegQueryValueExA" reg-query-value-ex-a :convention :stdcall) long  (|hKey| hkey) (|lpValueName| lpcstr) (|lpReserved| lpdword) (|lpType| lpdword) (|lpData| lpbyte) (|lpcbData| lpdword))
(defcfun ("RegQueryValueExW" reg-query-value-ex-w :convention :stdcall) long  (|hKey| hkey) (|lpValueName| lpcwstr) (|lpReserved| lpdword) (|lpType| lpdword) (|lpData| lpbyte) (|lpcbData| lpdword))
(defcfun ("RegReplaceKeyA" reg-replace-key-a :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcstr) (|lpNewFile| lpcstr) (|lpOldFile| lpcstr))
(defcfun ("RegReplaceKeyW" reg-replace-key-w :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcwstr) (|lpNewFile| lpcwstr) (|lpOldFile| lpcwstr))
(defcfun ("RegRestoreKeyA" reg-restore-key-a :convention :stdcall) long  (|hKey| hkey) (|lpFile| lpcstr) (|dwFlags| dword))
(defcfun ("RegRestoreKeyW" reg-restore-key-w :convention :stdcall) long  (|hKey| hkey) (|lpFile| lpcwstr) (|dwFlags| dword))
(defcfun ("RegSaveKeyA" reg-save-key-a :convention :stdcall) long  (|hKey| hkey) (|lpFile| lpcstr) (|lpSecurityAttributes| lpsecurity_attributes))
(defcfun ("RegSaveKeyW" reg-save-key-w :convention :stdcall) long  (|hKey| hkey) (|lpFile| lpcwstr) (|lpSecurityAttributes| lpsecurity_attributes))
(defcfun ("RegSetKeySecurity" reg-set-key-security :convention :stdcall) long  (|hKey| hkey) (|SecurityInformation| security_information) (|pSecurityDescriptor| psecurity_descriptor))
(defcfun ("RegSetValueA" reg-set-value-a :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcstr) (|dwType| dword) (|lpData| lpcstr) (|cbData| dword))
(defcfun ("RegSetValueW" reg-set-value-w :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcwstr) (|dwType| dword) (|lpData| lpcwstr) (|cbData| dword))
(defcfun ("RegSetValueExA" reg-set-value-ex-a :convention :stdcall) long  (|hKey| hkey) (|lpValueName| lpcstr) (|Reserved| dword) (|dwType| dword) (|lpData| :pointer) (|cbData| dword))
(defcfun ("RegSetValueExW" reg-set-value-ex-w :convention :stdcall) long  (|hKey| hkey) (|lpValueName| lpcwstr) (|Reserved| dword) (|dwType| dword) (|lpData| :pointer) (|cbData| dword))
(defcfun ("RegUnLoadKeyA" reg-un-load-key-a :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcstr))
(defcfun ("RegUnLoadKeyW" reg-un-load-key-w :convention :stdcall) long  (|hKey| hkey) (|lpSubKey| lpcwstr))
(defcfun ("RegGetValueA" reg-get-value-a :convention :stdcall) long  (|hkey| hkey) (|lpSubKey| lpcstr) (|lpValue| lpcstr) (|dwFlags| dword) (|pdwType| lpdword) (|pvData| pvoid) (|pcbData| lpdword))
(defcfun ("RegGetValueW" reg-get-value-w :convention :stdcall) long  (|hkey| hkey) (|lpSubKey| lpcwstr) (|lpValue| lpcwstr) (|dwFlags| dword) (|pdwType| lpdword) (|pvData| pvoid) (|pcbData| lpdword))
(defcfun ("InitiateSystemShutdownA" initiate-system-shutdown-a :convention :stdcall) winbool  (|lpMachineName| lpstr) (|lpMessage| lpstr) (|dwTimeout| dword) (|bForceAppsClosed| winbool) (|bRebootAfterShutdown| winbool))
(defcfun ("InitiateSystemShutdownW" initiate-system-shutdown-w :convention :stdcall) winbool  (|lpMachineName| lpwstr) (|lpMessage| lpwstr) (|dwTimeout| dword) (|bForceAppsClosed| winbool) (|bRebootAfterShutdown| winbool))
(defcfun ("AbortSystemShutdownA" abort-system-shutdown-a :convention :stdcall) winbool  (|lpMachineName| lpstr))
(defcfun ("AbortSystemShutdownW" abort-system-shutdown-w :convention :stdcall) winbool  (|lpMachineName| lpwstr))
(defcfun ("InitiateSystemShutdownExA" initiate-system-shutdown-ex-a :convention :stdcall) winbool  (|lpMachineName| lpstr) (|lpMessage| lpstr) (|dwTimeout| dword) (|bForceAppsClosed| winbool) (|bRebootAfterShutdown| winbool) (|dwReason| dword))
(defcfun ("InitiateSystemShutdownExW" initiate-system-shutdown-ex-w :convention :stdcall) winbool  (|lpMachineName| lpwstr) (|lpMessage| lpwstr) (|dwTimeout| dword) (|bForceAppsClosed| winbool) (|bRebootAfterShutdown| winbool) (|dwReason| dword))
(defcfun ("RegSaveKeyExA" reg-save-key-ex-a :convention :stdcall) long  (|hKey| hkey) (|lpFile| lpcstr) (|lpSecurityAttributes| lpsecurity_attributes) (|Flags| dword))
(defcfun ("RegSaveKeyExW" reg-save-key-ex-w :convention :stdcall) long  (|hKey| hkey) (|lpFile| lpcwstr) (|lpSecurityAttributes| lpsecurity_attributes) (|Flags| dword))
(defcfun ("Wow64Win32ApiEntry" wow-64-win-32-api-entry :convention :stdcall) long  (|dwFuncNumber| dword) (|dwFlag| dword) (|dwRes| dword))
(defcfun ("WNetAddConnectionA" wnet-add-connection-a :convention :stdcall) dword  (|lpRemoteName| lpcstr) (|lpPassword| lpcstr) (|lpLocalName| lpcstr))
(defcfun ("WNetAddConnectionW" wnet-add-connection-w :convention :stdcall) dword  (|lpRemoteName| lpcwstr) (|lpPassword| lpcwstr) (|lpLocalName| lpcwstr))
(defcfun ("WNetAddConnection2A" wnet-add-connection-2-a :convention :stdcall) dword  (|lpNetResource| lpnetresourcea) (|lpPassword| lpcstr) (|lpUserName| lpcstr) (|dwFlags| dword))
(defcfun ("WNetAddConnection2W" wnet-add-connection-2-w :convention :stdcall) dword  (|lpNetResource| lpnetresourcew) (|lpPassword| lpcwstr) (|lpUserName| lpcwstr) (|dwFlags| dword))
(defcfun ("WNetAddConnection3A" wnet-add-connection-3-a :convention :stdcall) dword  (|hwndOwner| hwnd) (|lpNetResource| lpnetresourcea) (|lpPassword| lpcstr) (|lpUserName| lpcstr) (|dwFlags| dword))
(defcfun ("WNetAddConnection3W" wnet-add-connection-3-w :convention :stdcall) dword  (|hwndOwner| hwnd) (|lpNetResource| lpnetresourcew) (|lpPassword| lpcwstr) (|lpUserName| lpcwstr) (|dwFlags| dword))
(defcfun ("WNetCancelConnectionA" wnet-cancel-connection-a :convention :stdcall) dword  (|lpName| lpcstr) (|fForce| winbool))
(defcfun ("WNetCancelConnectionW" wnet-cancel-connection-w :convention :stdcall) dword  (|lpName| lpcwstr) (|fForce| winbool))
(defcfun ("WNetCancelConnection2A" wnet-cancel-connection-2-a :convention :stdcall) dword  (|lpName| lpcstr) (|dwFlags| dword) (|fForce| winbool))
(defcfun ("WNetCancelConnection2W" wnet-cancel-connection-2-w :convention :stdcall) dword  (|lpName| lpcwstr) (|dwFlags| dword) (|fForce| winbool))
(defcfun ("WNetGetConnectionA" wnet-get-connection-a :convention :stdcall) dword  (|lpLocalName| lpcstr) (|lpRemoteName| lpstr) (|lpnLength| lpdword))
(defcfun ("WNetGetConnectionW" wnet-get-connection-w :convention :stdcall) dword  (|lpLocalName| lpcwstr) (|lpRemoteName| lpwstr) (|lpnLength| lpdword))
(defcfun ("WNetRestoreConnectionA" wnet-restore-connection-a :convention :stdcall) dword  (|hwndParent| hwnd) (|lpDevice| lpcstr))
(defcfun ("WNetRestoreConnectionW" wnet-restore-connection-w :convention :stdcall) dword  (|hwndParent| hwnd) (|lpDevice| lpcwstr))
(defcfun ("WNetUseConnectionA" wnet-use-connection-a :convention :stdcall) dword  (|hwndOwner| hwnd) (|lpNetResource| lpnetresourcea) (|lpPassword| lpcstr) (|lpUserID| lpcstr) (|dwFlags| dword) (|lpAccessName| lpstr) (|lpBufferSize| lpdword) (|lpResult| lpdword))
(defcfun ("WNetUseConnectionW" wnet-use-connection-w :convention :stdcall) dword  (|hwndOwner| hwnd) (|lpNetResource| lpnetresourcew) (|lpPassword| lpcwstr) (|lpUserID| lpcwstr) (|dwFlags| dword) (|lpAccessName| lpwstr) (|lpBufferSize| lpdword) (|lpResult| lpdword))
(defcfun ("WNetConnectionDialog" wnet-connection-dialog :convention :stdcall) dword  (|hwnd| hwnd) (|dwType| dword))
(defcfun ("WNetDisconnectDialog" wnet-disconnect-dialog :convention :stdcall) dword  (|hwnd| hwnd) (|dwType| dword))
(defcfun ("WNetConnectionDialog1A" wnet-connection-dialog-1-a :convention :stdcall) dword  (|lpConnDlgStruct| lpconnectdlgstructa))
(defcfun ("WNetConnectionDialog1W" wnet-connection-dialog-1-w :convention :stdcall) dword  (|lpConnDlgStruct| lpconnectdlgstructw))
(defcfun ("WNetDisconnectDialog1A" wnet-disconnect-dialog-1-a :convention :stdcall) dword  (|lpConnDlgStruct| lpdiscdlgstructa))
(defcfun ("WNetDisconnectDialog1W" wnet-disconnect-dialog-1-w :convention :stdcall) dword  (|lpConnDlgStruct| lpdiscdlgstructw))
(defcfun ("WNetOpenEnumA" wnet-open-enum-a :convention :stdcall) dword  (|dwScope| dword) (|dwType| dword) (|dwUsage| dword) (|lpNetResource| lpnetresourcea) (|lphEnum| lphandle))
(defcfun ("WNetOpenEnumW" wnet-open-enum-w :convention :stdcall) dword  (|dwScope| dword) (|dwType| dword) (|dwUsage| dword) (|lpNetResource| lpnetresourcew) (|lphEnum| lphandle))
(defcfun ("WNetEnumResourceA" wnet-enum-resource-a :convention :stdcall) dword  (|hEnum| handle) (|lpcCount| lpdword) (|lpBuffer| lpvoid) (|lpBufferSize| lpdword))
(defcfun ("WNetEnumResourceW" wnet-enum-resource-w :convention :stdcall) dword  (|hEnum| handle) (|lpcCount| lpdword) (|lpBuffer| lpvoid) (|lpBufferSize| lpdword))
(defcfun ("WNetCloseEnum" wnet-close-enum :convention :stdcall) dword  (|hEnum| handle))
(defcfun ("WNetGetResourceParentA" wnet-get-resource-parent-a :convention :stdcall) dword  (|lpNetResource| lpnetresourcea) (|lpBuffer| lpvoid) (|lpcbBuffer| lpdword))
(defcfun ("WNetGetResourceParentW" wnet-get-resource-parent-w :convention :stdcall) dword  (|lpNetResource| lpnetresourcew) (|lpBuffer| lpvoid) (|lpcbBuffer| lpdword))
(defcfun ("WNetGetResourceInformationA" wnet-get-resource-information-a :convention :stdcall) dword  (|lpNetResource| lpnetresourcea) (|lpBuffer| lpvoid) (|lpcbBuffer| lpdword) (|lplpSystem| :pointer))
(defcfun ("WNetGetResourceInformationW" wnet-get-resource-information-w :convention :stdcall) dword  (|lpNetResource| lpnetresourcew) (|lpBuffer| lpvoid) (|lpcbBuffer| lpdword) (|lplpSystem| :pointer))
(defcfun ("WNetGetUniversalNameA" wnet-get-universal-name-a :convention :stdcall) dword  (|lpLocalPath| lpcstr) (|dwInfoLevel| dword) (|lpBuffer| lpvoid) (|lpBufferSize| lpdword))
(defcfun ("WNetGetUniversalNameW" wnet-get-universal-name-w :convention :stdcall) dword  (|lpLocalPath| lpcwstr) (|dwInfoLevel| dword) (|lpBuffer| lpvoid) (|lpBufferSize| lpdword))
(defcfun ("WNetGetUserA" wnet-get-user-a :convention :stdcall) dword  (|lpName| lpcstr) (|lpUserName| lpstr) (|lpnLength| lpdword))
(defcfun ("WNetGetUserW" wnet-get-user-w :convention :stdcall) dword  (|lpName| lpcwstr) (|lpUserName| lpwstr) (|lpnLength| lpdword))
(defcfun ("WNetGetProviderNameA" wnet-get-provider-name-a :convention :stdcall) dword  (|dwNetType| dword) (|lpProviderName| lpstr) (|lpBufferSize| lpdword))
(defcfun ("WNetGetProviderNameW" wnet-get-provider-name-w :convention :stdcall) dword  (|dwNetType| dword) (|lpProviderName| lpwstr) (|lpBufferSize| lpdword))
(defcfun ("WNetGetNetworkInformationA" wnet-get-network-information-a :convention :stdcall) dword  (|lpProvider| lpcstr) (|lpNetInfoStruct| lpnetinfostruct))
(defcfun ("WNetGetNetworkInformationW" wnet-get-network-information-w :convention :stdcall) dword  (|lpProvider| lpcwstr) (|lpNetInfoStruct| lpnetinfostruct))
(defcfun ("WNetGetLastErrorA" wnet-get-last-error-a :convention :stdcall) dword  (|lpError| lpdword) (|lpErrorBuf| lpstr) (|nErrorBufSize| dword) (|lpNameBuf| lpstr) (|nNameBufSize| dword))
(defcfun ("WNetGetLastErrorW" wnet-get-last-error-w :convention :stdcall) dword  (|lpError| lpdword) (|lpErrorBuf| lpwstr) (|nErrorBufSize| dword) (|lpNameBuf| lpwstr) (|nNameBufSize| dword))
(defcfun ("MultinetGetConnectionPerformanceA" multinet-get-connection-performance-a :convention :stdcall) dword  (|lpNetResource| lpnetresourcea) (|lpNetConnectInfoStruct| lpnetconnectinfostruct))
(defcfun ("MultinetGetConnectionPerformanceW" multinet-get-connection-performance-w :convention :stdcall) dword  (|lpNetResource| lpnetresourcew) (|lpNetConnectInfoStruct| lpnetconnectinfostruct))
(defcfun ("DdeSetQualityOfService" dde-set-quality-of-service :convention :stdcall) winbool  (|hwndClient| hwnd) (|pqosNew| :pointer) (|pqosPrev| psecurity_quality_of_service))
(defcfun ("ImpersonateDdeClientWindow" impersonate-dde-client-window :convention :stdcall) winbool  (|hWndClient| hwnd) (|hWndServer| hwnd))
(defcfun ("PackDDElParam" pack-dd-el-param :convention :stdcall) lparam  (|msg| uint) (|uiLo| uint_ptr) (|uiHi| uint_ptr))
(defcfun ("UnpackDDElParam" unpack-dd-el-param :convention :stdcall) winbool  (|msg| uint) (|lParam| lparam) (|puiLo| puint_ptr) (|puiHi| puint_ptr))
(defcfun ("FreeDDElParam" free-dd-el-param :convention :stdcall) winbool  (|msg| uint) (|lParam| lparam))
(defcfun ("ReuseDDElParam" reuse-dd-el-param :convention :stdcall) lparam  (|lParam| lparam) (|msgIn| uint) (|msgOut| uint) (|uiLo| uint_ptr) (|uiHi| uint_ptr))
(defcfun ("FNCALLBACK" fncallback :convention :stdcall) hddedata  (|wType| uint) (|wFmt| uint) (|hConv| hconv) (|hsz1| hsz) (|hsz2| hsz) (|hData| hddedata) (|dwData1| ulong_ptr) (|dwData2| ulong_ptr))
(defcfun ("DdeInitializeA" dde-initialize-a :convention :stdcall) uint  (|pidInst| lpdword) (|pfnCallback| pfncallback) (|afCmd| dword) (|ulRes| dword))
(defcfun ("DdeInitializeW" dde-initialize-w :convention :stdcall) uint  (|pidInst| lpdword) (|pfnCallback| pfncallback) (|afCmd| dword) (|ulRes| dword))
(defcfun ("DdeUninitialize" dde-uninitialize :convention :stdcall) winbool  (|idInst| dword))
(defcfun ("DdeConnectList" dde-connect-list :convention :stdcall) hconvlist  (|idInst| dword) (|hszService| hsz) (|hszTopic| hsz) (|hConvList| hconvlist) (|pCC| pconvcontext))
(defcfun ("DdeQueryNextServer" dde-query-next-server :convention :stdcall) hconv  (|hConvList| hconvlist) (|hConvPrev| hconv))
(defcfun ("DdeDisconnectList" dde-disconnect-list :convention :stdcall) winbool  (|hConvList| hconvlist))
(defcfun ("DdeConnect" dde-connect :convention :stdcall) hconv  (|idInst| dword) (|hszService| hsz) (|hszTopic| hsz) (|pCC| pconvcontext))
(defcfun ("DdeDisconnect" dde-disconnect :convention :stdcall) winbool  (|hConv| hconv))
(defcfun ("DdeReconnect" dde-reconnect :convention :stdcall) hconv  (|hConv| hconv))
(defcfun ("DdeQueryConvInfo" dde-query-conv-info :convention :stdcall) uint  (|hConv| hconv) (|idTransaction| dword) (|pConvInfo| pconvinfo))
(defcfun ("DdeSetUserHandle" dde-set-user-handle :convention :stdcall) winbool  (|hConv| hconv) (|id| dword) (|hUser| dword_ptr))
(defcfun ("DdeAbandonTransaction" dde-abandon-transaction :convention :stdcall) winbool  (|idInst| dword) (|hConv| hconv) (|idTransaction| dword))
(defcfun ("DdePostAdvise" dde-post-advise :convention :stdcall) winbool  (|idInst| dword) (|hszTopic| hsz) (|hszItem| hsz))
(defcfun ("DdeEnableCallback" dde-enable-callback :convention :stdcall) winbool  (|idInst| dword) (|hConv| hconv) (|wCmd| uint))
(defcfun ("DdeImpersonateClient" dde-impersonate-client :convention :stdcall) winbool  (|hConv| hconv))
(defcfun ("DdeNameService" dde-name-service :convention :stdcall) hddedata  (|idInst| dword) (|hsz1| hsz) (|hsz2| hsz) (|afCmd| uint))
(defcfun ("DdeClientTransaction" dde-client-transaction :convention :stdcall) hddedata  (|pData| lpbyte) (|cbData| dword) (|hConv| hconv) (|hszItem| hsz) (|wFmt| uint) (|wType| uint) (|dwTimeout| dword) (|pdwResult| lpdword))
(defcfun ("DdeCreateDataHandle" dde-create-data-handle :convention :stdcall) hddedata  (|idInst| dword) (|pSrc| lpbyte) (|cb| dword) (|cbOff| dword) (|hszItem| hsz) (|wFmt| uint) (|afCmd| uint))
(defcfun ("DdeAddData" dde-add-data :convention :stdcall) hddedata  (|hData| hddedata) (|pSrc| lpbyte) (|cb| dword) (|cbOff| dword))
(defcfun ("DdeGetData" dde-get-data :convention :stdcall) dword  (|hData| hddedata) (|pDst| lpbyte) (|cbMax| dword) (|cbOff| dword))
(defcfun ("DdeAccessData" dde-access-data :convention :stdcall) lpbyte  (|hData| hddedata) (|pcbDataSize| lpdword))
(defcfun ("DdeUnaccessData" dde-unaccess-data :convention :stdcall) winbool  (|hData| hddedata))
(defcfun ("DdeFreeDataHandle" dde-free-data-handle :convention :stdcall) winbool  (|hData| hddedata))
(defcfun ("DdeGetLastError" dde-get-last-error :convention :stdcall) uint  (|idInst| dword))
(defcfun ("DdeCreateStringHandleA" dde-create-string-handle-a :convention :stdcall) hsz  (|idInst| dword) (|psz| lpcstr) (|iCodePage| :int))
(defcfun ("DdeCreateStringHandleW" dde-create-string-handle-w :convention :stdcall) hsz  (|idInst| dword) (|psz| lpcwstr) (|iCodePage| :int))
(defcfun ("DdeQueryStringA" dde-query-string-a :convention :stdcall) dword  (|idInst| dword) (|hsz| hsz) (|psz| lpstr) (|cchMax| dword) (|iCodePage| :int))
(defcfun ("DdeQueryStringW" dde-query-string-w :convention :stdcall) dword  (|idInst| dword) (|hsz| hsz) (|psz| lpwstr) (|cchMax| dword) (|iCodePage| :int))
(defcfun ("DdeFreeStringHandle" dde-free-string-handle :convention :stdcall) winbool  (|idInst| dword) (|hsz| hsz))
(defcfun ("DdeKeepStringHandle" dde-keep-string-handle :convention :stdcall) winbool  (|idInst| dword) (|hsz| hsz))
(defcfun ("DdeCmpStringHandles" dde-cmp-string-handles :convention :stdcall) :int  (|hsz1| hsz) (|hsz2| hsz))
(defcfun ("LZStart" lz-start :convention :stdcall) int )
(defcfun ("LZDone" lz-done :convention :stdcall) :void )
(defcfun ("CopyLZFile" copy-lz-file :convention :stdcall) long  (arg0 int) (arg1 int))
(defcfun ("LZCopy" lz-copy :convention :stdcall) long  (arg0 int) (arg1 int))
(defcfun ("LZInit" lz-init :convention :stdcall) int  (arg0 int))
(defcfun ("GetExpandedNameA" get-expanded-name-a :convention :stdcall) int  (arg0 lpstr) (arg1 lpstr))
(defcfun ("GetExpandedNameW" get-expanded-name-w :convention :stdcall) int  (arg0 lpwstr) (arg1 lpwstr))
(defcfun ("LZOpenFileA" lz-open-file-a :convention :stdcall) int  (arg0 lpstr) (arg1 lpofstruct) (arg2 word))
(defcfun ("LZOpenFileW" lz-open-file-w :convention :stdcall) int  (arg0 lpwstr) (arg1 lpofstruct) (arg2 word))
(defcfun ("LZSeek" lz-seek :convention :stdcall) long  (arg0 int) (arg1 long) (arg2 int))
(defcfun ("LZRead" lz-read :convention :stdcall) int  (arg0 int) (arg1 lpstr) (arg2 int))
(defcfun ("LZClose" lz-close :convention :stdcall) :void  (arg0 int))
(defcfun ("CloseDriver" close-driver :convention :stdcall) lresult  (|hDriver| hdrvr) (|lParam1| lparam) (|lParam2| lparam))
(defcfun ("OpenDriver" open-driver :convention :stdcall) hdrvr  (|szDriverName| lpcwstr) (|szSectionName| lpcwstr) (|lParam2| lparam))
(defcfun ("SendDriverMessage" send-driver-message :convention :stdcall) lresult  (|hDriver| hdrvr) (|message| uint) (|lParam1| lparam) (|lParam2| lparam))
(defcfun ("DrvGetModuleHandle" drv-get-module-handle :convention :stdcall) hmodule  (|hDriver| hdrvr))
(defcfun ("GetDriverModuleHandle" get-driver-module-handle :convention :stdcall) hmodule  (|hDriver| hdrvr))
(defcfun ("DefDriverProc" def-driver-proc :convention :stdcall) lresult  (|dwDriverIdentifier| dword_ptr) (|hdrvr| hdrvr) (|uMsg| uint) (|lParam1| lparam) (|lParam2| lparam))
(defcfun ("sndPlaySoundA" sndplaysounda :convention :stdcall) winbool  (|pszSound| lpcstr) (|fuSound| uint))
(defcfun ("sndPlaySoundW" sndplaysoundw :convention :stdcall) winbool  (|pszSound| lpcwstr) (|fuSound| uint))
(defcfun ("PlaySoundA" play-sound-a :convention :stdcall) winbool  (|pszSound| lpcstr) (|hmod| hmodule) (|fdwSound| dword))
(defcfun ("PlaySoundW" play-sound-w :convention :stdcall) winbool  (|pszSound| lpcwstr) (|hmod| hmodule) (|fdwSound| dword))
(defcfun ("waveOutGetNumDevs" waveoutgetnumdevs :convention :stdcall) uint )
(defcfun ("waveOutGetDevCapsA" waveoutgetdevcapsa :convention :stdcall) mmresult  (|uDeviceID| uint_ptr) (|pwoc| lpwaveoutcapsa) (|cbwoc| uint))
(defcfun ("waveOutGetDevCapsW" waveoutgetdevcapsw :convention :stdcall) mmresult  (|uDeviceID| uint_ptr) (|pwoc| lpwaveoutcapsw) (|cbwoc| uint))
(defcfun ("waveOutGetVolume" waveoutgetvolume :convention :stdcall) mmresult  (|hwo| hwaveout) (|pdwVolume| lpdword))
(defcfun ("waveOutSetVolume" waveoutsetvolume :convention :stdcall) mmresult  (|hwo| hwaveout) (|dwVolume| dword))
(defcfun ("waveOutGetErrorTextA" waveoutgeterrortexta :convention :stdcall) mmresult  (|mmrError| mmresult) (|pszText| lpstr) (|cchText| uint))
(defcfun ("waveOutGetErrorTextW" waveoutgeterrortextw :convention :stdcall) mmresult  (|mmrError| mmresult) (|pszText| lpwstr) (|cchText| uint))
(defcfun ("waveOutOpen" waveoutopen :convention :stdcall) mmresult  (|phwo| lphwaveout) (|uDeviceID| uint) (|pwfx| lpcwaveformatex) (|dwCallback| dword_ptr) (|dwInstance| dword_ptr) (|fdwOpen| dword))
(defcfun ("waveOutClose" waveoutclose :convention :stdcall) mmresult  (|hwo| hwaveout))
(defcfun ("waveOutPrepareHeader" waveoutprepareheader :convention :stdcall) mmresult  (|hwo| hwaveout) (|pwh| lpwavehdr) (|cbwh| uint))
(defcfun ("waveOutUnprepareHeader" waveoutunprepareheader :convention :stdcall) mmresult  (|hwo| hwaveout) (|pwh| lpwavehdr) (|cbwh| uint))
(defcfun ("waveOutWrite" waveoutwrite :convention :stdcall) mmresult  (|hwo| hwaveout) (|pwh| lpwavehdr) (|cbwh| uint))
(defcfun ("waveOutPause" waveoutpause :convention :stdcall) mmresult  (|hwo| hwaveout))
(defcfun ("waveOutRestart" waveoutrestart :convention :stdcall) mmresult  (|hwo| hwaveout))
(defcfun ("waveOutReset" waveoutreset :convention :stdcall) mmresult  (|hwo| hwaveout))
(defcfun ("waveOutBreakLoop" waveoutbreakloop :convention :stdcall) mmresult  (|hwo| hwaveout))
(defcfun ("waveOutGetPosition" waveoutgetposition :convention :stdcall) mmresult  (|hwo| hwaveout) (|pmmt| lpmmtime) (|cbmmt| uint))
(defcfun ("waveOutGetPitch" waveoutgetpitch :convention :stdcall) mmresult  (|hwo| hwaveout) (|pdwPitch| lpdword))
(defcfun ("waveOutSetPitch" waveoutsetpitch :convention :stdcall) mmresult  (|hwo| hwaveout) (|dwPitch| dword))
(defcfun ("waveOutGetPlaybackRate" waveoutgetplaybackrate :convention :stdcall) mmresult  (|hwo| hwaveout) (|pdwRate| lpdword))
(defcfun ("waveOutSetPlaybackRate" waveoutsetplaybackrate :convention :stdcall) mmresult  (|hwo| hwaveout) (|dwRate| dword))
(defcfun ("waveOutGetID" waveoutgetid :convention :stdcall) mmresult  (|hwo| hwaveout) (|puDeviceID| lpuint))
(defcfun ("waveOutMessage" waveoutmessage :convention :stdcall) mmresult  (|hwo| hwaveout) (|uMsg| uint) (|dw1| dword_ptr) (|dw2| dword_ptr))
(defcfun ("waveInGetNumDevs" waveingetnumdevs :convention :stdcall) uint )
(defcfun ("waveInGetDevCapsA" waveingetdevcapsa :convention :stdcall) mmresult  (|uDeviceID| uint_ptr) (|pwic| lpwaveincapsa) (|cbwic| uint))
(defcfun ("waveInGetDevCapsW" waveingetdevcapsw :convention :stdcall) mmresult  (|uDeviceID| uint_ptr) (|pwic| lpwaveincapsw) (|cbwic| uint))
(defcfun ("waveInGetErrorTextA" waveingeterrortexta :convention :stdcall) mmresult  (|mmrError| mmresult) (|pszText| lpstr) (|cchText| uint))
(defcfun ("waveInGetErrorTextW" waveingeterrortextw :convention :stdcall) mmresult  (|mmrError| mmresult) (|pszText| lpwstr) (|cchText| uint))
(defcfun ("waveInOpen" waveinopen :convention :stdcall) mmresult  (|phwi| lphwavein) (|uDeviceID| uint) (|pwfx| lpcwaveformatex) (|dwCallback| dword_ptr) (|dwInstance| dword_ptr) (|fdwOpen| dword))
(defcfun ("waveInClose" waveinclose :convention :stdcall) mmresult  (|hwi| hwavein))
(defcfun ("waveInPrepareHeader" waveinprepareheader :convention :stdcall) mmresult  (|hwi| hwavein) (|pwh| lpwavehdr) (|cbwh| uint))
(defcfun ("waveInUnprepareHeader" waveinunprepareheader :convention :stdcall) mmresult  (|hwi| hwavein) (|pwh| lpwavehdr) (|cbwh| uint))
(defcfun ("waveInAddBuffer" waveinaddbuffer :convention :stdcall) mmresult  (|hwi| hwavein) (|pwh| lpwavehdr) (|cbwh| uint))
(defcfun ("waveInStart" waveinstart :convention :stdcall) mmresult  (|hwi| hwavein))
(defcfun ("waveInStop" waveinstop :convention :stdcall) mmresult  (|hwi| hwavein))
(defcfun ("waveInReset" waveinreset :convention :stdcall) mmresult  (|hwi| hwavein))
(defcfun ("waveInGetPosition" waveingetposition :convention :stdcall) mmresult  (|hwi| hwavein) (|pmmt| lpmmtime) (|cbmmt| uint))
(defcfun ("waveInGetID" waveingetid :convention :stdcall) mmresult  (|hwi| hwavein) (|puDeviceID| lpuint))
(defcfun ("waveInMessage" waveinmessage :convention :stdcall) mmresult  (|hwi| hwavein) (|uMsg| uint) (|dw1| dword_ptr) (|dw2| dword_ptr))
(defcfun ("midiOutGetNumDevs" midioutgetnumdevs :convention :stdcall) uint )
(defcfun ("midiStreamOpen" midistreamopen :convention :stdcall) mmresult  (|phms| lphmidistrm) (|puDeviceID| lpuint) (|cMidi| dword) (|dwCallback| dword_ptr) (|dwInstance| dword_ptr) (|fdwOpen| dword))
(defcfun ("midiStreamClose" midistreamclose :convention :stdcall) mmresult  (|hms| hmidistrm))
(defcfun ("midiStreamProperty" midistreamproperty :convention :stdcall) mmresult  (|hms| hmidistrm) (|lppropdata| lpbyte) (|dwProperty| dword))
(defcfun ("midiStreamPosition" midistreamposition :convention :stdcall) mmresult  (|hms| hmidistrm) (|lpmmt| lpmmtime) (|cbmmt| uint))
(defcfun ("midiStreamOut" midistreamout :convention :stdcall) mmresult  (|hms| hmidistrm) (|pmh| lpmidihdr) (|cbmh| uint))
(defcfun ("midiStreamPause" midistreampause :convention :stdcall) mmresult  (|hms| hmidistrm))
(defcfun ("midiStreamRestart" midistreamrestart :convention :stdcall) mmresult  (|hms| hmidistrm))
(defcfun ("midiStreamStop" midistreamstop :convention :stdcall) mmresult  (|hms| hmidistrm))
(defcfun ("midiConnect" midiconnect :convention :stdcall) mmresult  (|hmi| hmidi) (|hmo| hmidiout) (|pReserved| lpvoid))
(defcfun ("midiDisconnect" mididisconnect :convention :stdcall) mmresult  (|hmi| hmidi) (|hmo| hmidiout) (|pReserved| lpvoid))
(defcfun ("midiOutGetDevCapsA" midioutgetdevcapsa :convention :stdcall) mmresult  (|uDeviceID| uint_ptr) (|pmoc| lpmidioutcapsa) (|cbmoc| uint))
(defcfun ("midiOutGetDevCapsW" midioutgetdevcapsw :convention :stdcall) mmresult  (|uDeviceID| uint_ptr) (|pmoc| lpmidioutcapsw) (|cbmoc| uint))
(defcfun ("midiOutGetVolume" midioutgetvolume :convention :stdcall) mmresult  (|hmo| hmidiout) (|pdwVolume| lpdword))
(defcfun ("midiOutSetVolume" midioutsetvolume :convention :stdcall) mmresult  (|hmo| hmidiout) (|dwVolume| dword))
(defcfun ("midiOutGetErrorTextA" midioutgeterrortexta :convention :stdcall) mmresult  (|mmrError| mmresult) (|pszText| lpstr) (|cchText| uint))
(defcfun ("midiOutGetErrorTextW" midioutgeterrortextw :convention :stdcall) mmresult  (|mmrError| mmresult) (|pszText| lpwstr) (|cchText| uint))
(defcfun ("midiOutOpen" midioutopen :convention :stdcall) mmresult  (|phmo| lphmidiout) (|uDeviceID| uint) (|dwCallback| dword_ptr) (|dwInstance| dword_ptr) (|fdwOpen| dword))
(defcfun ("midiOutClose" midioutclose :convention :stdcall) mmresult  (|hmo| hmidiout))
(defcfun ("midiOutPrepareHeader" midioutprepareheader :convention :stdcall) mmresult  (|hmo| hmidiout) (|pmh| lpmidihdr) (|cbmh| uint))
(defcfun ("midiOutUnprepareHeader" midioutunprepareheader :convention :stdcall) mmresult  (|hmo| hmidiout) (|pmh| lpmidihdr) (|cbmh| uint))
(defcfun ("midiOutShortMsg" midioutshortmsg :convention :stdcall) mmresult  (|hmo| hmidiout) (|dwMsg| dword))
(defcfun ("midiOutLongMsg" midioutlongmsg :convention :stdcall) mmresult  (|hmo| hmidiout) (|pmh| lpmidihdr) (|cbmh| uint))
(defcfun ("midiOutReset" midioutreset :convention :stdcall) mmresult  (|hmo| hmidiout))
(defcfun ("midiOutCachePatches" midioutcachepatches :convention :stdcall) mmresult  (|hmo| hmidiout) (|uBank| uint) (|pwpa| lpword) (|fuCache| uint))
(defcfun ("midiOutCacheDrumPatches" midioutcachedrumpatches :convention :stdcall) mmresult  (|hmo| hmidiout) (|uPatch| uint) (|pwkya| lpword) (|fuCache| uint))
(defcfun ("midiOutGetID" midioutgetid :convention :stdcall) mmresult  (|hmo| hmidiout) (|puDeviceID| lpuint))
(defcfun ("midiOutMessage" midioutmessage :convention :stdcall) mmresult  (|hmo| hmidiout) (|uMsg| uint) (|dw1| dword_ptr) (|dw2| dword_ptr))
(defcfun ("midiInGetNumDevs" midiingetnumdevs :convention :stdcall) uint )
(defcfun ("midiInGetDevCapsA" midiingetdevcapsa :convention :stdcall) mmresult  (|uDeviceID| uint_ptr) (|pmic| lpmidiincapsa) (|cbmic| uint))
(defcfun ("midiInGetDevCapsW" midiingetdevcapsw :convention :stdcall) mmresult  (|uDeviceID| uint_ptr) (|pmic| lpmidiincapsw) (|cbmic| uint))
(defcfun ("midiInGetErrorTextA" midiingeterrortexta :convention :stdcall) mmresult  (|mmrError| mmresult) (|pszText| lpstr) (|cchText| uint))
(defcfun ("midiInGetErrorTextW" midiingeterrortextw :convention :stdcall) mmresult  (|mmrError| mmresult) (|pszText| lpwstr) (|cchText| uint))
(defcfun ("midiInOpen" midiinopen :convention :stdcall) mmresult  (|phmi| lphmidiin) (|uDeviceID| uint) (|dwCallback| dword_ptr) (|dwInstance| dword_ptr) (|fdwOpen| dword))
(defcfun ("midiInClose" midiinclose :convention :stdcall) mmresult  (|hmi| hmidiin))
(defcfun ("midiInPrepareHeader" midiinprepareheader :convention :stdcall) mmresult  (|hmi| hmidiin) (|pmh| lpmidihdr) (|cbmh| uint))
(defcfun ("midiInUnprepareHeader" midiinunprepareheader :convention :stdcall) mmresult  (|hmi| hmidiin) (|pmh| lpmidihdr) (|cbmh| uint))
(defcfun ("midiInAddBuffer" midiinaddbuffer :convention :stdcall) mmresult  (|hmi| hmidiin) (|pmh| lpmidihdr) (|cbmh| uint))
(defcfun ("midiInStart" midiinstart :convention :stdcall) mmresult  (|hmi| hmidiin))
(defcfun ("midiInStop" midiinstop :convention :stdcall) mmresult  (|hmi| hmidiin))
(defcfun ("midiInReset" midiinreset :convention :stdcall) mmresult  (|hmi| hmidiin))
(defcfun ("midiInGetID" midiingetid :convention :stdcall) mmresult  (|hmi| hmidiin) (|puDeviceID| lpuint))
(defcfun ("midiInMessage" midiinmessage :convention :stdcall) mmresult  (|hmi| hmidiin) (|uMsg| uint) (|dw1| dword_ptr) (|dw2| dword_ptr))
(defcfun ("auxGetNumDevs" auxgetnumdevs :convention :stdcall) uint )
(defcfun ("auxGetDevCapsA" auxgetdevcapsa :convention :stdcall) mmresult  (|uDeviceID| uint_ptr) (|pac| lpauxcapsa) (|cbac| uint))
(defcfun ("auxGetDevCapsW" auxgetdevcapsw :convention :stdcall) mmresult  (|uDeviceID| uint_ptr) (|pac| lpauxcapsw) (|cbac| uint))
(defcfun ("auxSetVolume" auxsetvolume :convention :stdcall) mmresult  (|uDeviceID| uint) (|dwVolume| dword))
(defcfun ("auxGetVolume" auxgetvolume :convention :stdcall) mmresult  (|uDeviceID| uint) (|pdwVolume| lpdword))
(defcfun ("auxOutMessage" auxoutmessage :convention :stdcall) mmresult  (|uDeviceID| uint) (|uMsg| uint) (|dw1| dword_ptr) (|dw2| dword_ptr))
(defcfun ("mixerGetNumDevs" mixergetnumdevs :convention :stdcall) uint )
(defcfun ("mixerGetDevCapsA" mixergetdevcapsa :convention :stdcall) mmresult  (|uMxId| uint_ptr) (|pmxcaps| lpmixercapsa) (|cbmxcaps| uint))
(defcfun ("mixerGetDevCapsW" mixergetdevcapsw :convention :stdcall) mmresult  (|uMxId| uint_ptr) (|pmxcaps| lpmixercapsw) (|cbmxcaps| uint))
(defcfun ("mixerOpen" mixeropen :convention :stdcall) mmresult  (|phmx| lphmixer) (|uMxId| uint) (|dwCallback| dword_ptr) (|dwInstance| dword_ptr) (|fdwOpen| dword))
(defcfun ("mixerClose" mixerclose :convention :stdcall) mmresult  (|hmx| hmixer))
(defcfun ("mixerMessage" mixermessage :convention :stdcall) dword  (|hmx| hmixer) (|uMsg| uint) (|dwParam1| dword_ptr) (|dwParam2| dword_ptr))
(defcfun ("mixerGetLineInfoA" mixergetlineinfoa :convention :stdcall) mmresult  (|hmxobj| hmixerobj) (|pmxl| lpmixerlinea) (|fdwInfo| dword))
(defcfun ("mixerGetLineInfoW" mixergetlineinfow :convention :stdcall) mmresult  (|hmxobj| hmixerobj) (|pmxl| lpmixerlinew) (|fdwInfo| dword))
(defcfun ("mixerGetID" mixergetid :convention :stdcall) mmresult  (|hmxobj| hmixerobj) (|puMxId| :pointer) (|fdwId| dword))
(defcfun ("mixerGetLineControlsA" mixergetlinecontrolsa :convention :stdcall) mmresult  (|hmxobj| hmixerobj) (|pmxlc| lpmixerlinecontrolsa) (|fdwControls| dword))
(defcfun ("mixerGetLineControlsW" mixergetlinecontrolsw :convention :stdcall) mmresult  (|hmxobj| hmixerobj) (|pmxlc| lpmixerlinecontrolsw) (|fdwControls| dword))
(defcfun ("mixerGetControlDetailsA" mixergetcontroldetailsa :convention :stdcall) mmresult  (|hmxobj| hmixerobj) (|pmxcd| lpmixercontroldetails) (|fdwDetails| dword))
(defcfun ("mixerGetControlDetailsW" mixergetcontroldetailsw :convention :stdcall) mmresult  (|hmxobj| hmixerobj) (|pmxcd| lpmixercontroldetails) (|fdwDetails| dword))
(defcfun ("mixerSetControlDetails" mixersetcontroldetails :convention :stdcall) mmresult  (|hmxobj| hmixerobj) (|pmxcd| lpmixercontroldetails) (|fdwDetails| dword))
(defcfun ("timeGetSystemTime" timegetsystemtime :convention :stdcall) mmresult  (|pmmt| lpmmtime) (|cbmmt| uint))
(defcfun ("timeGetTime" timegettime :convention :stdcall) dword )
(defcfun ("timeSetEvent" timesetevent :convention :stdcall) mmresult  (|uDelay| uint) (|uResolution| uint) (|fptc| lptimecallback) (|dwUser| dword_ptr) (|fuEvent| uint))
(defcfun ("timeKillEvent" timekillevent :convention :stdcall) mmresult  (|uTimerID| uint))
(defcfun ("timeGetDevCaps" timegetdevcaps :convention :stdcall) mmresult  (|ptc| lptimecaps) (|cbtc| uint))
(defcfun ("timeBeginPeriod" timebeginperiod :convention :stdcall) mmresult  (|uPeriod| uint))
(defcfun ("timeEndPeriod" timeendperiod :convention :stdcall) mmresult  (|uPeriod| uint))
(defcfun ("joyGetNumDevs" joygetnumdevs :convention :stdcall) uint )
(defcfun ("joyGetDevCapsA" joygetdevcapsa :convention :stdcall) mmresult  (|uJoyID| uint_ptr) (|pjc| lpjoycapsa) (|cbjc| uint))
(defcfun ("joyGetDevCapsW" joygetdevcapsw :convention :stdcall) mmresult  (|uJoyID| uint_ptr) (|pjc| lpjoycapsw) (|cbjc| uint))
(defcfun ("joyGetPos" joygetpos :convention :stdcall) mmresult  (|uJoyID| uint) (|pji| lpjoyinfo))
(defcfun ("joyGetPosEx" joygetposex :convention :stdcall) mmresult  (|uJoyID| uint) (|pji| lpjoyinfoex))
(defcfun ("joyGetThreshold" joygetthreshold :convention :stdcall) mmresult  (|uJoyID| uint) (|puThreshold| lpuint))
(defcfun ("joyReleaseCapture" joyreleasecapture :convention :stdcall) mmresult  (|uJoyID| uint))
(defcfun ("joySetCapture" joysetcapture :convention :stdcall) mmresult  (|hwnd| hwnd) (|uJoyID| uint) (|uPeriod| uint) (|fChanged| winbool))
(defcfun ("joySetThreshold" joysetthreshold :convention :stdcall) mmresult  (|uJoyID| uint) (|uThreshold| uint))
(defcfun ("mmioStringToFOURCCA" mmiostringtofourcca :convention :stdcall) fourcc  (|sz| lpcstr) (|uFlags| uint))
(defcfun ("mmioStringToFOURCCW" mmiostringtofourccw :convention :stdcall) fourcc  (|sz| lpcwstr) (|uFlags| uint))
(defcfun ("mmioInstallIOProcA" mmioinstallioproca :convention :stdcall) lpmmioproc  (|fccIOProc| fourcc) (|pIOProc| lpmmioproc) (|dwFlags| dword))
(defcfun ("mmioInstallIOProcW" mmioinstallioprocw :convention :stdcall) lpmmioproc  (|fccIOProc| fourcc) (|pIOProc| lpmmioproc) (|dwFlags| dword))
(defcfun ("mmioOpenA" mmioopena :convention :stdcall) hmmio  (|pszFileName| lpstr) (|pmmioinfo| lpmmioinfo) (|fdwOpen| dword))
(defcfun ("mmioOpenW" mmioopenw :convention :stdcall) hmmio  (|pszFileName| lpwstr) (|pmmioinfo| lpmmioinfo) (|fdwOpen| dword))
(defcfun ("mmioRenameA" mmiorenamea :convention :stdcall) mmresult  (|pszFileName| lpcstr) (|pszNewFileName| lpcstr) (|pmmioinfo| lpcmmioinfo) (|fdwRename| dword))
(defcfun ("mmioRenameW" mmiorenamew :convention :stdcall) mmresult  (|pszFileName| lpcwstr) (|pszNewFileName| lpcwstr) (|pmmioinfo| lpcmmioinfo) (|fdwRename| dword))
(defcfun ("mmioClose" mmioclose :convention :stdcall) mmresult  (|hmmio| hmmio) (|fuClose| uint))
(defcfun ("mmioRead" mmioread :convention :stdcall) long  (|hmmio| hmmio) (|pch| hpstr) (|cch| long))
(defcfun ("mmioWrite" mmiowrite :convention :stdcall) long  (|hmmio| hmmio) (|pch| :pointer) (|cch| long))
(defcfun ("mmioSeek" mmioseek :convention :stdcall) long  (|hmmio| hmmio) (|lOffset| long) (|iOrigin| :int))
(defcfun ("mmioGetInfo" mmiogetinfo :convention :stdcall) mmresult  (|hmmio| hmmio) (|pmmioinfo| lpmmioinfo) (|fuInfo| uint))
(defcfun ("mmioSetInfo" mmiosetinfo :convention :stdcall) mmresult  (|hmmio| hmmio) (|pmmioinfo| lpcmmioinfo) (|fuInfo| uint))
(defcfun ("mmioSetBuffer" mmiosetbuffer :convention :stdcall) mmresult  (|hmmio| hmmio) (|pchBuffer| lpstr) (|cchBuffer| long) (|fuBuffer| uint))
(defcfun ("mmioFlush" mmioflush :convention :stdcall) mmresult  (|hmmio| hmmio) (|fuFlush| uint))
(defcfun ("mmioAdvance" mmioadvance :convention :stdcall) mmresult  (|hmmio| hmmio) (|pmmioinfo| lpmmioinfo) (|fuAdvance| uint))
(defcfun ("mmioSendMessage" mmiosendmessage :convention :stdcall) lresult  (|hmmio| hmmio) (|uMsg| uint) (|lParam1| lparam) (|lParam2| lparam))
(defcfun ("mmioDescend" mmiodescend :convention :stdcall) mmresult  (|hmmio| hmmio) (|pmmcki| lpmmckinfo) (|pmmckiParent| :pointer) (|fuDescend| uint))
(defcfun ("mmioAscend" mmioascend :convention :stdcall) mmresult  (|hmmio| hmmio) (|pmmcki| lpmmckinfo) (|fuAscend| uint))
(defcfun ("mmioCreateChunk" mmiocreatechunk :convention :stdcall) mmresult  (|hmmio| hmmio) (|pmmcki| lpmmckinfo) (|fuCreate| uint))
(defcfun ("mciSendCommandA" mcisendcommanda :convention :stdcall) mcierror  (|mciId| mcideviceid) (|uMsg| uint) (|dwParam1| dword_ptr) (|dwParam2| dword_ptr))
(defcfun ("mciSendCommandW" mcisendcommandw :convention :stdcall) mcierror  (|mciId| mcideviceid) (|uMsg| uint) (|dwParam1| dword_ptr) (|dwParam2| dword_ptr))
(defcfun ("mciSendStringA" mcisendstringa :convention :stdcall) mcierror  (|lpstrCommand| lpcstr) (|lpstrReturnString| lpstr) (|uReturnLength| uint) (|hwndCallback| hwnd))
(defcfun ("mciSendStringW" mcisendstringw :convention :stdcall) mcierror  (|lpstrCommand| lpcwstr) (|lpstrReturnString| lpwstr) (|uReturnLength| uint) (|hwndCallback| hwnd))
(defcfun ("mciGetDeviceIDA" mcigetdeviceida :convention :stdcall) mcideviceid  (|pszDevice| lpcstr))
(defcfun ("mciGetDeviceIDW" mcigetdeviceidw :convention :stdcall) mcideviceid  (|pszDevice| lpcwstr))
(defcfun ("mciGetDeviceIDFromElementIDA" mcigetdeviceidfromelementida :convention :stdcall) mcideviceid  (|dwElementID| dword) (|lpstrType| lpcstr))
(defcfun ("mciGetDeviceIDFromElementIDW" mcigetdeviceidfromelementidw :convention :stdcall) mcideviceid  (|dwElementID| dword) (|lpstrType| lpcwstr))
(defcfun ("mciGetErrorStringA" mcigeterrorstringa :convention :stdcall) winbool  (|mcierr| mcierror) (|pszText| lpstr) (|cchText| uint))
(defcfun ("mciGetErrorStringW" mcigeterrorstringw :convention :stdcall) winbool  (|mcierr| mcierror) (|pszText| lpwstr) (|cchText| uint))
(defcfun ("mciSetYieldProc" mcisetyieldproc :convention :stdcall) winbool  (|mciId| mcideviceid) (|fpYieldProc| yieldproc) (|dwYieldData| dword))
(defcfun ("mciGetCreatorTask" mcigetcreatortask :convention :stdcall) htask  (|mciId| mcideviceid))
(defcfun ("mciGetYieldProc" mcigetyieldproc :convention :stdcall) yieldproc  (|mciId| mcideviceid) (|pdwYieldData| lpdword))
(defcfun ("Netbios" netbios :convention :stdcall) uchar  (|pncb| pncb))
(defcfun ("RPC_OBJECT_INQ_FN" rpcobjectinqfn :convention :stdcall) :void  (|ObjectUuid| :pointer) (|TypeUuid| :pointer) (|Status| :pointer))
(defcfun ("RPC_IF_CALLBACK_FN" rpcifcallbackfn :convention :stdcall) rpc_status  (|InterfaceUuid| rpc_if_handle) (|Context| :pointer))
(defcfun ("RPC_SECURITY_CALLBACK_FN" rpcsecuritycallbackfn :convention :stdcall) :void  (|Context| :pointer))
(defcfun ("RpcBindingCopy" rpc-binding-copy :convention :stdcall) rpc_status  (|SourceBinding| rpc_binding_handle) (|DestinationBinding| :pointer))
(defcfun ("RpcBindingFree" rpc-binding-free :convention :stdcall) rpc_status  (|Binding| :pointer))
(defcfun ("RpcBindingSetOption" rpc-binding-set-option :convention :stdcall) rpc_status  (|hBinding| rpc_binding_handle) (|option| :unsigned-long) (|optionValue| ulong_ptr))
(defcfun ("RpcBindingInqOption" rpc-binding-inq-option :convention :stdcall) rpc_status  (|hBinding| rpc_binding_handle) (|option| :unsigned-long) (|pOptionValue| :pointer))
(defcfun ("RpcBindingFromStringBindingA" rpc-binding-from-string-binding-a :convention :stdcall) rpc_status  (|StringBinding| rpc_cstr) (|Binding| :pointer))
(defcfun ("RpcBindingFromStringBindingW" rpc-binding-from-string-binding-w :convention :stdcall) rpc_status  (|StringBinding| rpc_wstr) (|Binding| :pointer))
(defcfun ("RpcSsGetContextBinding" rpc-ss-get-context-binding :convention :stdcall) rpc_status  (|ContextHandle| :pointer) (|Binding| :pointer))
(defcfun ("RpcBindingInqObject" rpc-binding-inq-object :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|ObjectUuid| :pointer))
(defcfun ("RpcBindingReset" rpc-binding-reset :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle))
(defcfun ("RpcBindingSetObject" rpc-binding-set-object :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|ObjectUuid| :pointer))
(defcfun ("RpcMgmtInqDefaultProtectLevel" rpc-mgmt-inq-default-protect-level :convention :stdcall) rpc_status  (|AuthnSvc| :unsigned-long) (|AuthnLevel| :pointer))
(defcfun ("RpcBindingToStringBindingA" rpc-binding-to-string-binding-a :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|StringBinding| :pointer))
(defcfun ("RpcBindingToStringBindingW" rpc-binding-to-string-binding-w :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|StringBinding| :pointer))
(defcfun ("RpcBindingVectorFree" rpc-binding-vector-free :convention :stdcall) rpc_status  (|BindingVector| :pointer))
(defcfun ("RpcStringBindingComposeA" rpc-string-binding-compose-a :convention :stdcall) rpc_status  (|ObjUuid| rpc_cstr) (|Protseq| rpc_cstr) (|NetworkAddr| rpc_cstr) (|Endpoint| rpc_cstr) (|Options| rpc_cstr) (|StringBinding| :pointer))
(defcfun ("RpcStringBindingComposeW" rpc-string-binding-compose-w :convention :stdcall) rpc_status  (|ObjUuid| rpc_wstr) (|Protseq| rpc_wstr) (|NetworkAddr| rpc_wstr) (|Endpoint| rpc_wstr) (|Options| rpc_wstr) (|StringBinding| :pointer))
(defcfun ("RpcStringBindingParseA" rpc-string-binding-parse-a :convention :stdcall) rpc_status  (|StringBinding| rpc_cstr) (|ObjUuid| :pointer) (|Protseq| :pointer) (|NetworkAddr| :pointer) (|Endpoint| :pointer) (|NetworkOptions| :pointer))
(defcfun ("RpcStringBindingParseW" rpc-string-binding-parse-w :convention :stdcall) rpc_status  (|StringBinding| rpc_wstr) (|ObjUuid| :pointer) (|Protseq| :pointer) (|NetworkAddr| :pointer) (|Endpoint| :pointer) (|NetworkOptions| :pointer))
(defcfun ("RpcStringFreeA" rpc-string-free-a :convention :stdcall) rpc_status  (|String| :pointer))
(defcfun ("RpcStringFreeW" rpc-string-free-w :convention :stdcall) rpc_status  (|String| :pointer))
(defcfun ("RpcIfInqId" rpc-if-inq-id :convention :stdcall) rpc_status  (|RpcIfHandle| rpc_if_handle) (|RpcIfId| :pointer))
(defcfun ("RpcNetworkIsProtseqValidA" rpc-network-is-protseq-valid-a :convention :stdcall) rpc_status  (|Protseq| rpc_cstr))
(defcfun ("RpcNetworkIsProtseqValidW" rpc-network-is-protseq-valid-w :convention :stdcall) rpc_status  (|Protseq| rpc_wstr))
(defcfun ("RpcMgmtInqComTimeout" rpc-mgmt-inq-com-timeout :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|Timeout| :pointer))
(defcfun ("RpcMgmtSetComTimeout" rpc-mgmt-set-com-timeout :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|Timeout| :unsigned-int))
(defcfun ("RpcMgmtSetCancelTimeout" rpc-mgmt-set-cancel-timeout :convention :stdcall) rpc_status  (|Timeout| :long))
(defcfun ("RpcNetworkInqProtseqsA" rpc-network-inq-protseqs-a :convention :stdcall) rpc_status  (|ProtseqVector| :pointer))
(defcfun ("RpcNetworkInqProtseqsW" rpc-network-inq-protseqs-w :convention :stdcall) rpc_status  (|ProtseqVector| :pointer))
(defcfun ("RpcObjectInqType" rpc-object-inq-type :convention :stdcall) rpc_status  (|ObjUuid| :pointer) (|TypeUuid| :pointer))
(defcfun ("RpcObjectSetInqFn" rpc-object-set-inq-fn :convention :stdcall) rpc_status  (|InquiryFn| :pointer))
(defcfun ("RpcObjectSetType" rpc-object-set-type :convention :stdcall) rpc_status  (|ObjUuid| :pointer) (|TypeUuid| :pointer))
(defcfun ("RpcProtseqVectorFreeA" rpc-protseq-vector-free-a :convention :stdcall) rpc_status  (|ProtseqVector| :pointer))
(defcfun ("RpcProtseqVectorFreeW" rpc-protseq-vector-free-w :convention :stdcall) rpc_status  (|ProtseqVector| :pointer))
(defcfun ("RpcServerInqBindings" rpc-server-inq-bindings :convention :stdcall) rpc_status  (|BindingVector| :pointer))
(defcfun ("RpcServerInqIf" rpc-server-inq-if :convention :stdcall) rpc_status  (|IfSpec| rpc_if_handle) (|MgrTypeUuid| :pointer) (|MgrEpv| :pointer))
(defcfun ("RpcServerListen" rpc-server-listen :convention :stdcall) rpc_status  (|MinimumCallThreads| :unsigned-int) (|MaxCalls| :unsigned-int) (|DontWait| :unsigned-int))
(defcfun ("RpcServerRegisterIf" rpc-server-register-if :convention :stdcall) rpc_status  (|IfSpec| rpc_if_handle) (|MgrTypeUuid| :pointer) (|MgrEpv| :pointer))
(defcfun ("RpcServerRegisterIfEx" rpc-server-register-if-ex :convention :stdcall) rpc_status  (|IfSpec| rpc_if_handle) (|MgrTypeUuid| :pointer) (|MgrEpv| :pointer) (|Flags| :unsigned-int) (|MaxCalls| :unsigned-int) (|IfCallback| :pointer))
(defcfun ("RpcServerRegisterIf2" rpc-server-register-if-2 :convention :stdcall) rpc_status  (|IfSpec| rpc_if_handle) (|MgrTypeUuid| :pointer) (|MgrEpv| :pointer) (|Flags| :unsigned-int) (|MaxCalls| :unsigned-int) (|MaxRpcSize| :unsigned-int) (|IfCallbackFn| :pointer))
(defcfun ("RpcServerUnregisterIf" rpc-server-unregister-if :convention :stdcall) rpc_status  (|IfSpec| rpc_if_handle) (|MgrTypeUuid| :pointer) (|WaitForCallsToComplete| :unsigned-int))
(defcfun ("RpcServerUnregisterIfEx" rpc-server-unregister-if-ex :convention :stdcall) rpc_status  (|IfSpec| rpc_if_handle) (|MgrTypeUuid| :pointer) (|RundownContextHandles| :int))
(defcfun ("RpcServerUseAllProtseqs" rpc-server-use-all-protseqs :convention :stdcall) rpc_status  (|MaxCalls| :unsigned-int) (|SecurityDescriptor| :pointer))
(defcfun ("RpcServerUseAllProtseqsEx" rpc-server-use-all-protseqs-ex :convention :stdcall) rpc_status  (|MaxCalls| :unsigned-int) (|SecurityDescriptor| :pointer) (|Policy| prpc_policy))
(defcfun ("RpcServerUseAllProtseqsIf" rpc-server-use-all-protseqs-if :convention :stdcall) rpc_status  (|MaxCalls| :unsigned-int) (|IfSpec| rpc_if_handle) (|SecurityDescriptor| :pointer))
(defcfun ("RpcServerUseAllProtseqsIfEx" rpc-server-use-all-protseqs-if-ex :convention :stdcall) rpc_status  (|MaxCalls| :unsigned-int) (|IfSpec| rpc_if_handle) (|SecurityDescriptor| :pointer) (|Policy| prpc_policy))
(defcfun ("RpcServerUseProtseqA" rpc-server-use-protseq-a :convention :stdcall) rpc_status  (|Protseq| rpc_cstr) (|MaxCalls| :unsigned-int) (|SecurityDescriptor| :pointer))
(defcfun ("RpcServerUseProtseqExA" rpc-server-use-protseq-ex-a :convention :stdcall) rpc_status  (|Protseq| rpc_cstr) (|MaxCalls| :unsigned-int) (|SecurityDescriptor| :pointer) (|Policy| prpc_policy))
(defcfun ("RpcServerUseProtseqW" rpc-server-use-protseq-w :convention :stdcall) rpc_status  (|Protseq| rpc_wstr) (|MaxCalls| :unsigned-int) (|SecurityDescriptor| :pointer))
(defcfun ("RpcServerUseProtseqExW" rpc-server-use-protseq-ex-w :convention :stdcall) rpc_status  (|Protseq| rpc_wstr) (|MaxCalls| :unsigned-int) (|SecurityDescriptor| :pointer) (|Policy| prpc_policy))
(defcfun ("RpcServerUseProtseqEpA" rpc-server-use-protseq-ep-a :convention :stdcall) rpc_status  (|Protseq| rpc_cstr) (|MaxCalls| :unsigned-int) (|Endpoint| rpc_cstr) (|SecurityDescriptor| :pointer))
(defcfun ("RpcServerUseProtseqEpExA" rpc-server-use-protseq-ep-ex-a :convention :stdcall) rpc_status  (|Protseq| rpc_cstr) (|MaxCalls| :unsigned-int) (|Endpoint| rpc_cstr) (|SecurityDescriptor| :pointer) (|Policy| prpc_policy))
(defcfun ("RpcServerUseProtseqEpW" rpc-server-use-protseq-ep-w :convention :stdcall) rpc_status  (|Protseq| rpc_wstr) (|MaxCalls| :unsigned-int) (|Endpoint| rpc_wstr) (|SecurityDescriptor| :pointer))
(defcfun ("RpcServerUseProtseqEpExW" rpc-server-use-protseq-ep-ex-w :convention :stdcall) rpc_status  (|Protseq| rpc_wstr) (|MaxCalls| :unsigned-int) (|Endpoint| rpc_wstr) (|SecurityDescriptor| :pointer) (|Policy| prpc_policy))
(defcfun ("RpcServerUseProtseqIfA" rpc-server-use-protseq-if-a :convention :stdcall) rpc_status  (|Protseq| rpc_cstr) (|MaxCalls| :unsigned-int) (|IfSpec| rpc_if_handle) (|SecurityDescriptor| :pointer))
(defcfun ("RpcServerUseProtseqIfExA" rpc-server-use-protseq-if-ex-a :convention :stdcall) rpc_status  (|Protseq| rpc_cstr) (|MaxCalls| :unsigned-int) (|IfSpec| rpc_if_handle) (|SecurityDescriptor| :pointer) (|Policy| prpc_policy))
(defcfun ("RpcServerUseProtseqIfW" rpc-server-use-protseq-if-w :convention :stdcall) rpc_status  (|Protseq| rpc_wstr) (|MaxCalls| :unsigned-int) (|IfSpec| rpc_if_handle) (|SecurityDescriptor| :pointer))
(defcfun ("RpcServerUseProtseqIfExW" rpc-server-use-protseq-if-ex-w :convention :stdcall) rpc_status  (|Protseq| rpc_wstr) (|MaxCalls| :unsigned-int) (|IfSpec| rpc_if_handle) (|SecurityDescriptor| :pointer) (|Policy| prpc_policy))
(defcfun ("RpcServerYield" rpc-server-yield :convention :stdcall) :void )
(defcfun ("RpcMgmtStatsVectorFree" rpc-mgmt-stats-vector-free :convention :stdcall) rpc_status  (|StatsVector| :pointer))
(defcfun ("RpcMgmtInqStats" rpc-mgmt-inq-stats :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|Statistics| :pointer))
(defcfun ("RpcMgmtIsServerListening" rpc-mgmt-is-server-listening :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle))
(defcfun ("RpcMgmtStopServerListening" rpc-mgmt-stop-server-listening :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle))
(defcfun ("RpcMgmtWaitServerListen" rpc-mgmt-wait-server-listen :convention :stdcall) rpc_status )
(defcfun ("RpcMgmtSetServerStackSize" rpc-mgmt-set-server-stack-size :convention :stdcall) rpc_status  (|ThreadStackSize| :unsigned-long))
(defcfun ("RpcSsDontSerializeContext" rpc-ss-dont-serialize-context :convention :stdcall) :void )
(defcfun ("RpcMgmtEnableIdleCleanup" rpc-mgmt-enable-idle-cleanup :convention :stdcall) rpc_status )
(defcfun ("RpcMgmtInqIfIds" rpc-mgmt-inq-if-ids :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|IfIdVector| :pointer))
(defcfun ("RpcIfIdVectorFree" rpc-if-id-vector-free :convention :stdcall) rpc_status  (|IfIdVector| :pointer))
(defcfun ("RpcMgmtInqServerPrincNameA" rpc-mgmt-inq-server-princ-name-a :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|AuthnSvc| :unsigned-long) (|ServerPrincName| :pointer))
(defcfun ("RpcMgmtInqServerPrincNameW" rpc-mgmt-inq-server-princ-name-w :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|AuthnSvc| :unsigned-long) (|ServerPrincName| :pointer))
(defcfun ("RpcServerInqDefaultPrincNameA" rpc-server-inq-default-princ-name-a :convention :stdcall) rpc_status  (|AuthnSvc| :unsigned-long) (|PrincName| :pointer))
(defcfun ("RpcServerInqDefaultPrincNameW" rpc-server-inq-default-princ-name-w :convention :stdcall) rpc_status  (|AuthnSvc| :unsigned-long) (|PrincName| :pointer))
(defcfun ("RpcEpResolveBinding" rpc-ep-resolve-binding :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|IfSpec| rpc_if_handle))
(defcfun ("RpcNsBindingInqEntryNameA" rpc-ns-binding-inq-entry-name-a :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|EntryNameSyntax| :unsigned-long) (|EntryName| :pointer))
(defcfun ("RpcNsBindingInqEntryNameW" rpc-ns-binding-inq-entry-name-w :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|EntryNameSyntax| :unsigned-long) (|EntryName| :pointer))
(defcfun ("RpcImpersonateClient" rpc-impersonate-client :convention :stdcall) rpc_status  (|BindingHandle| rpc_binding_handle))
(defcfun ("RpcRevertToSelfEx" rpc-revert-to-self-ex :convention :stdcall) rpc_status  (|BindingHandle| rpc_binding_handle))
(defcfun ("RpcRevertToSelf" rpc-revert-to-self :convention :stdcall) rpc_status )
(defcfun ("RpcBindingInqAuthClientA" rpc-binding-inq-auth-client-a :convention :stdcall) rpc_status  (|ClientBinding| rpc_binding_handle) (|Privs| :pointer) (|ServerPrincName| :pointer) (|AuthnLevel| :pointer) (|AuthnSvc| :pointer) (|AuthzSvc| :pointer))
(defcfun ("RpcBindingInqAuthClientW" rpc-binding-inq-auth-client-w :convention :stdcall) rpc_status  (|ClientBinding| rpc_binding_handle) (|Privs| :pointer) (|ServerPrincName| :pointer) (|AuthnLevel| :pointer) (|AuthnSvc| :pointer) (|AuthzSvc| :pointer))
(defcfun ("RpcBindingInqAuthClientExA" rpc-binding-inq-auth-client-ex-a :convention :stdcall) rpc_status  (|ClientBinding| rpc_binding_handle) (|Privs| :pointer) (|ServerPrincName| :pointer) (|AuthnLevel| :pointer) (|AuthnSvc| :pointer) (|AuthzSvc| :pointer) (|Flags| :unsigned-long))
(defcfun ("RpcBindingInqAuthClientExW" rpc-binding-inq-auth-client-ex-w :convention :stdcall) rpc_status  (|ClientBinding| rpc_binding_handle) (|Privs| :pointer) (|ServerPrincName| :pointer) (|AuthnLevel| :pointer) (|AuthnSvc| :pointer) (|AuthzSvc| :pointer) (|Flags| :unsigned-long))
(defcfun ("RpcBindingInqAuthInfoA" rpc-binding-inq-auth-info-a :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|ServerPrincName| :pointer) (|AuthnLevel| :pointer) (|AuthnSvc| :pointer) (|AuthIdentity| :pointer) (|AuthzSvc| :pointer))
(defcfun ("RpcBindingInqAuthInfoW" rpc-binding-inq-auth-info-w :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|ServerPrincName| :pointer) (|AuthnLevel| :pointer) (|AuthnSvc| :pointer) (|AuthIdentity| :pointer) (|AuthzSvc| :pointer))
(defcfun ("RpcBindingSetAuthInfoA" rpc-binding-set-auth-info-a :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|ServerPrincName| rpc_cstr) (|AuthnLevel| :unsigned-long) (|AuthnSvc| :unsigned-long) (|AuthIdentity| rpc_auth_identity_handle) (|AuthzSvc| :unsigned-long))
(defcfun ("RpcBindingSetAuthInfoExA" rpc-binding-set-auth-info-ex-a :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|ServerPrincName| rpc_cstr) (|AuthnLevel| :unsigned-long) (|AuthnSvc| :unsigned-long) (|AuthIdentity| rpc_auth_identity_handle) (|AuthzSvc| :unsigned-long) (|SecurityQos| :pointer))
(defcfun ("RpcBindingSetAuthInfoW" rpc-binding-set-auth-info-w :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|ServerPrincName| rpc_wstr) (|AuthnLevel| :unsigned-long) (|AuthnSvc| :unsigned-long) (|AuthIdentity| rpc_auth_identity_handle) (|AuthzSvc| :unsigned-long))
(defcfun ("RpcBindingSetAuthInfoExW" rpc-binding-set-auth-info-ex-w :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|ServerPrincName| rpc_wstr) (|AuthnLevel| :unsigned-long) (|AuthnSvc| :unsigned-long) (|AuthIdentity| rpc_auth_identity_handle) (|AuthzSvc| :unsigned-long) (|SecurityQOS| :pointer))
(defcfun ("RpcBindingInqAuthInfoExA" rpc-binding-inq-auth-info-ex-a :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|ServerPrincName| :pointer) (|AuthnLevel| :pointer) (|AuthnSvc| :pointer) (|AuthIdentity| :pointer) (|AuthzSvc| :pointer) (|RpcQosVersion| :unsigned-long) (|SecurityQOS| :pointer))
(defcfun ("RpcBindingInqAuthInfoExW" rpc-binding-inq-auth-info-ex-w :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|ServerPrincName| :pointer) (|AuthnLevel| :pointer) (|AuthnSvc| :pointer) (|AuthIdentity| :pointer) (|AuthzSvc| :pointer) (|RpcQosVersion| :unsigned-long) (|SecurityQOS| :pointer))
(defcfun ("RpcServerRegisterAuthInfoA" rpc-server-register-auth-info-a :convention :stdcall) rpc_status  (|ServerPrincName| rpc_cstr) (|AuthnSvc| :unsigned-long) (|GetKeyFn| rpc_auth_key_retrieval_fn) (|Arg| :pointer))
(defcfun ("RpcServerRegisterAuthInfoW" rpc-server-register-auth-info-w :convention :stdcall) rpc_status  (|ServerPrincName| rpc_wstr) (|AuthnSvc| :unsigned-long) (|GetKeyFn| rpc_auth_key_retrieval_fn) (|Arg| :pointer))
(defcfun ("RpcBindingServerFromClient" rpc-binding-server-from-client :convention :stdcall) rpc_status  (|ClientBinding| rpc_binding_handle) (|ServerBinding| :pointer))
(defcfun ("RpcRaiseException" rpc-raise-exception :convention :stdcall) :void  (|exception| rpc_status))
(defcfun ("RpcTestCancel" rpc-test-cancel :convention :stdcall) rpc_status )
(defcfun ("RpcServerTestCancel" rpc-server-test-cancel :convention :stdcall) rpc_status  (|BindingHandle| rpc_binding_handle))
(defcfun ("RpcCancelThread" rpc-cancel-thread :convention :stdcall) rpc_status  (|Thread| :pointer))
(defcfun ("RpcCancelThreadEx" rpc-cancel-thread-ex :convention :stdcall) rpc_status  (|Thread| :pointer) (|Timeout| :long))
(defcfun ("UuidCreate" uuid-create :convention :stdcall) rpc_status  (|Uuid| :pointer))
(defcfun ("UuidCreateSequential" uuid-create-sequential :convention :stdcall) rpc_status  (|Uuid| :pointer))
(defcfun ("UuidToStringA" uuid-to-string-a :convention :stdcall) rpc_status  (|Uuid| :pointer) (|StringUuid| :pointer))
(defcfun ("UuidFromStringA" uuid-from-string-a :convention :stdcall) rpc_status  (|StringUuid| rpc_cstr) (|Uuid| :pointer))
(defcfun ("UuidToStringW" uuid-to-string-w :convention :stdcall) rpc_status  (|Uuid| :pointer) (|StringUuid| :pointer))
(defcfun ("UuidFromStringW" uuid-from-string-w :convention :stdcall) rpc_status  (|StringUuid| rpc_wstr) (|Uuid| :pointer))
(defcfun ("UuidCompare" uuid-compare :convention :stdcall) :int  (|Uuid1| :pointer) (|Uuid2| :pointer) (|Status| :pointer))
(defcfun ("UuidCreateNil" uuid-create-nil :convention :stdcall) rpc_status  (|NilUuid| :pointer))
(defcfun ("UuidEqual" uuid-equal :convention :stdcall) :int  (|Uuid1| :pointer) (|Uuid2| :pointer) (|Status| :pointer))
(defcfun ("UuidHash" uuid-hash :convention :stdcall) :unsigned-short  (|Uuid| :pointer) (|Status| :pointer))
(defcfun ("UuidIsNil" uuid-is-nil :convention :stdcall) :int  (|Uuid| :pointer) (|Status| :pointer))
(defcfun ("RpcEpRegisterNoReplaceA" rpc-ep-register-no-replace-a :convention :stdcall) rpc_status  (|IfSpec| rpc_if_handle) (|BindingVector| :pointer) (|UuidVector| :pointer) (|Annotation| rpc_cstr))
(defcfun ("RpcEpRegisterNoReplaceW" rpc-ep-register-no-replace-w :convention :stdcall) rpc_status  (|IfSpec| rpc_if_handle) (|BindingVector| :pointer) (|UuidVector| :pointer) (|Annotation| rpc_wstr))
(defcfun ("RpcEpRegisterA" rpc-ep-register-a :convention :stdcall) rpc_status  (|IfSpec| rpc_if_handle) (|BindingVector| :pointer) (|UuidVector| :pointer) (|Annotation| rpc_cstr))
(defcfun ("RpcEpRegisterW" rpc-ep-register-w :convention :stdcall) rpc_status  (|IfSpec| rpc_if_handle) (|BindingVector| :pointer) (|UuidVector| :pointer) (|Annotation| rpc_wstr))
(defcfun ("RpcEpUnregister" rpc-ep-unregister :convention :stdcall) rpc_status  (|IfSpec| rpc_if_handle) (|BindingVector| :pointer) (|UuidVector| :pointer))
(defcfun ("DceErrorInqTextA" dce-error-inq-text-a :convention :stdcall) rpc_status  (|RpcStatus| rpc_status) (|ErrorText| rpc_cstr))
(defcfun ("DceErrorInqTextW" dce-error-inq-text-w :convention :stdcall) rpc_status  (|RpcStatus| rpc_status) (|ErrorText| rpc_wstr))
(defcfun ("RpcMgmtEpEltInqBegin" rpc-mgmt-ep-elt-inq-begin :convention :stdcall) rpc_status  (|EpBinding| rpc_binding_handle) (|InquiryType| :unsigned-long) (|IfId| :pointer) (|VersOption| :unsigned-long) (|ObjectUuid| :pointer) (|InquiryContext| :pointer))
(defcfun ("RpcMgmtEpEltInqDone" rpc-mgmt-ep-elt-inq-done :convention :stdcall) rpc_status  (|InquiryContext| :pointer))
(defcfun ("RpcMgmtEpEltInqNextA" rpc-mgmt-ep-elt-inq-next-a :convention :stdcall) rpc_status  (|InquiryContext| rpc_ep_inq_handle) (|IfId| :pointer) (|Binding| :pointer) (|ObjectUuid| :pointer) (|Annotation| :pointer))
(defcfun ("RpcMgmtEpEltInqNextW" rpc-mgmt-ep-elt-inq-next-w :convention :stdcall) rpc_status  (|InquiryContext| rpc_ep_inq_handle) (|IfId| :pointer) (|Binding| :pointer) (|ObjectUuid| :pointer) (|Annotation| :pointer))
(defcfun ("RpcMgmtEpUnregister" rpc-mgmt-ep-unregister :convention :stdcall) rpc_status  (|EpBinding| rpc_binding_handle) (|IfId| :pointer) (|Binding| rpc_binding_handle) (|ObjectUuid| :pointer))
(defcfun ("RpcMgmtSetAuthorizationFn" rpc-mgmt-set-authorization-fn :convention :stdcall) rpc_status  (|AuthorizationFn| rpc_mgmt_authorization_fn))
(defcfun ("RPC_FORWARD_FUNCTION" rpcforwardfunction :convention :stdcall) rpc_status  (|InterfaceId| :pointer) (|InterfaceVersion| :pointer) (|ObjectId| :pointer) (|Rpcpro| :pointer) (|ppDestEndpoint| :pointer))
(defcfun ("RPC_ADDRESS_CHANGE_FN" rpcaddresschangefn :convention :stdcall) :void  (|arg| :pointer))
(defcfun ("I_RpcNegotiateTransferSyntax" irpc-negotiate-transfer-syntax :convention :stdcall) rpc_status  (|Message| :pointer))
(defcfun ("I_RpcGetBuffer" irpc-get-buffer :convention :stdcall) rpc_status  (|Message| :pointer))
(defcfun ("I_RpcGetBufferWithObject" irpc-get-buffer-with-object :convention :stdcall) rpc_status  (|Message| :pointer) (|ObjectUuid| :pointer))
(defcfun ("I_RpcSendReceive" irpc-send-receive :convention :stdcall) rpc_status  (|Message| :pointer))
(defcfun ("I_RpcFreeBuffer" irpc-free-buffer :convention :stdcall) rpc_status  (|Message| :pointer))
(defcfun ("I_RpcSend" irpc-send :convention :stdcall) rpc_status  (|Message| prpc_message))
(defcfun ("I_RpcReceive" irpc-receive :convention :stdcall) rpc_status  (|Message| prpc_message) (|Size| :unsigned-int))
(defcfun ("I_RpcFreePipeBuffer" irpc-free-pipe-buffer :convention :stdcall) rpc_status  (|Message| :pointer))
(defcfun ("I_RpcReallocPipeBuffer" irpc-realloc-pipe-buffer :convention :stdcall) rpc_status  (|Message| prpc_message) (|NewSize| :unsigned-int))
(defcfun ("I_RpcRequestMutex" irpc-request-mutex :convention :stdcall) :void  (|Mutex| :pointer))
(defcfun ("I_RpcClearMutex" irpc-clear-mutex :convention :stdcall) :void  (|Mutex| i_rpc_mutex))
(defcfun ("I_RpcDeleteMutex" irpc-delete-mutex :convention :stdcall) :void  (|Mutex| i_rpc_mutex))
(defcfun ("I_RpcAllocate" irpc-allocate :convention :stdcall) :pointer  (|Size| :unsigned-int))
(defcfun ("I_RpcFree" irpc-free :convention :stdcall) :void  (|Object| :pointer))
(defcfun ("I_RpcPauseExecution" irpc-pause-execution :convention :stdcall) :void  (|Milliseconds| :unsigned-long))
(defcfun ("I_RpcGetExtendedError" irpc-get-extended-error :convention :stdcall) rpc_status )
(defcfun ("I_RpcMonitorAssociation" irpc-monitor-association :convention :stdcall) rpc_status  (|Handle| rpc_binding_handle) (|RundownRoutine| prpc_rundown) (|Context| :pointer))
(defcfun ("I_RpcStopMonitorAssociation" irpc-stop-monitor-association :convention :stdcall) rpc_status  (|Handle| rpc_binding_handle))
(defcfun ("I_RpcGetCurrentCallHandle" irpc-get-current-call-handle :convention :stdcall) rpc_binding_handle )
(defcfun ("I_RpcGetAssociationContext" irpc-get-association-context :convention :stdcall) rpc_status  (|BindingHandle| rpc_binding_handle) (|AssociationContext| :pointer))
(defcfun ("I_RpcGetServerContextList" irpc-get-server-context-list :convention :stdcall) :pointer  (|BindingHandle| rpc_binding_handle))
(defcfun ("I_RpcSetServerContextList" irpc-set-server-context-list :convention :stdcall) :void  (|BindingHandle| rpc_binding_handle) (|ServerContextList| :pointer))
(defcfun ("I_RpcNsInterfaceExported" irpc-ns-interface-exported :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| :pointer) (|RpcInterfaceInformation| :pointer))
(defcfun ("I_RpcNsInterfaceUnexported" irpc-ns-interface-unexported :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| :pointer) (|RpcInterfaceInformation| :pointer))
(defcfun ("I_RpcBindingToStaticStringBindingW" irpc-binding-to-static-string-binding-w :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|StringBinding| :pointer))
(defcfun ("I_RpcBindingInqSecurityContext" irpc-binding-inq-security-context :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|SecurityContextHandle| :pointer))
(defcfun ("I_RpcBindingInqWireIdForSnego" irpc-binding-inq-wire-id-for-snego :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|WireId| rpc_cstr))
(defcfun ("I_RpcBindingInqMarshalledTargetInfo" irpc-binding-inq-marshalled-target-info :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|MarshalledTargetInfoLength| :pointer) (|MarshalledTargetInfo| :pointer))
(defcfun ("I_RpcBindingInqLocalClientPID" irpc-binding-inq-local-client-pid :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|Pid| :pointer))
(defcfun ("I_RpcBindingHandleToAsyncHandle" irpc-binding-handle-to-async-handle :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|AsyncHandle| :pointer))
(defcfun ("I_RpcNsBindingSetEntryNameW" irpc-ns-binding-set-entry-name-w :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_wstr))
(defcfun ("I_RpcNsBindingSetEntryNameA" irpc-ns-binding-set-entry-name-a :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_cstr))
(defcfun ("I_RpcServerUseProtseqEp2A" irpc-server-use-protseq-ep-2-a :convention :stdcall) rpc_status  (|NetworkAddress| rpc_cstr) (|Protseq| rpc_cstr) (|MaxCalls| :unsigned-int) (|Endpoint| rpc_cstr) (|SecurityDescriptor| :pointer) (|Policy| :pointer))
(defcfun ("I_RpcServerUseProtseqEp2W" irpc-server-use-protseq-ep-2-w :convention :stdcall) rpc_status  (|NetworkAddress| rpc_wstr) (|Protseq| rpc_wstr) (|MaxCalls| :unsigned-int) (|Endpoint| rpc_wstr) (|SecurityDescriptor| :pointer) (|Policy| :pointer))
(defcfun ("I_RpcServerUseProtseq2W" irpc-server-use-protseq-2-w :convention :stdcall) rpc_status  (|NetworkAddress| rpc_wstr) (|Protseq| rpc_wstr) (|MaxCalls| :unsigned-int) (|SecurityDescriptor| :pointer) (|Policy| :pointer))
(defcfun ("I_RpcServerUseProtseq2A" irpc-server-use-protseq-2-a :convention :stdcall) rpc_status  (|NetworkAddress| rpc_cstr) (|Protseq| rpc_cstr) (|MaxCalls| :unsigned-int) (|SecurityDescriptor| :pointer) (|Policy| :pointer))
(defcfun ("I_RpcBindingInqDynamicEndpointW" irpc-binding-inq-dynamic-endpoint-w :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|DynamicEndpoint| :pointer))
(defcfun ("I_RpcBindingInqDynamicEndpointA" irpc-binding-inq-dynamic-endpoint-a :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|DynamicEndpoint| :pointer))
(defcfun ("I_RpcServerCheckClientRestriction" irpc-server-check-client-restriction :convention :stdcall) rpc_status  (|Context| rpc_binding_handle))
(defcfun ("I_RpcBindingInqTransportType" irpc-binding-inq-transport-type :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|Type| :pointer))
(defcfun ("I_RpcIfInqTransferSyntaxes" irpc-if-inq-transfer-syntaxes :convention :stdcall) rpc_status  (|RpcIfHandle| rpc_if_handle) (|TransferSyntaxes| :pointer) (|TransferSyntaxSize| :unsigned-int) (|TransferSyntaxCount| :pointer))
(defcfun ("I_UuidCreate" iuuid-create :convention :stdcall) rpc_status  (|Uuid| :pointer))
(defcfun ("I_RpcBindingCopy" irpc-binding-copy :convention :stdcall) rpc_status  (|SourceBinding| rpc_binding_handle) (|DestinationBinding| :pointer))
(defcfun ("I_RpcBindingIsClientLocal" irpc-binding-is-client-local :convention :stdcall) rpc_status  (|BindingHandle| rpc_binding_handle) (|ClientLocalFlag| :pointer))
(defcfun ("I_RpcBindingInqConnId" irpc-binding-inq-conn-id :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|ConnId| :pointer) (|pfFirstCall| :pointer))
(defcfun ("I_RpcSsDontSerializeContext" irpc-ss-dont-serialize-context :convention :stdcall) :void )
(defcfun ("I_RpcLaunchDatagramReceiveThread" irpc-launch-datagram-receive-thread :convention :stdcall) rpc_status  (|pAddress| :pointer))
(defcfun ("I_RpcServerRegisterForwardFunction" irpc-server-register-forward-function :convention :stdcall) rpc_status  (|pForwardFunction| :pointer))
(defcfun ("I_RpcServerInqAddressChangeFn" irpc-server-inq-address-change-fn :convention :stdcall) :pointer )
(defcfun ("I_RpcServerSetAddressChangeFn" irpc-server-set-address-change-fn :convention :stdcall) rpc_status  (|pAddressChangeFn| :pointer))
(defcfun ("I_RpcServerInqLocalConnAddress" irpc-server-inq-local-conn-address :convention :stdcall) rpc_status  (|Binding| rpc_binding_handle) (|Buffer| :pointer) (|BufferSize| :pointer) (|AddressFormat| :pointer))
(defcfun ("I_RpcSessionStrictContextHandle" irpc-session-strict-context-handle :convention :stdcall) :void )
(defcfun ("I_RpcTurnOnEEInfoPropagation" irpc-turn-on-ee-info-propagation :convention :stdcall) rpc_status )
(defcfun ("I_RpcConnectionInqSockBuffSize" irpc-connection-inq-sock-buff-size :convention :stdcall) rpc_status  (|RecvBuffSize| :pointer) (|SendBuffSize| :pointer))
(defcfun ("I_RpcConnectionSetSockBuffSize" irpc-connection-set-sock-buff-size :convention :stdcall) rpc_status  (|RecvBuffSize| :unsigned-long) (|SendBuffSize| :unsigned-long))
(defcfun ("I_RpcServerInqTransportType" irpc-server-inq-transport-type :convention :stdcall) rpc_status  (|Type| :pointer))
(defcfun ("I_RpcMapWin32Status" irpc-map-win-32-status :convention :stdcall) :long  (|Status| rpc_status))
(defcfun ("I_RpcProxyNewConnection" irpc-proxy-new-connection :convention :stdcall) rpc_status  (|ConnectionType| :unsigned-long) (|ServerAddress| :pointer) (|ServerPort| :pointer) (|MinConnTimeout| :pointer) (|ConnectionParameter| :pointer) (|CallOutState| :pointer) (|ProxyCallbackInterface| :pointer))
(defcfun ("I_RpcReplyToClientWithStatus" irpc-reply-to-client-with-status :convention :stdcall) rpc_status  (|ConnectionParameter| :pointer) (|RpcStatus| rpc_status))
(defcfun ("I_RpcRecordCalloutFailure" irpc-record-callout-failure :convention :stdcall) :void  (|RpcStatus| rpc_status) (|CallOutState| :pointer) (|DllName| :pointer))
(defcfun ("RpcNsBindingExportA" rpc-ns-binding-export-a :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_cstr) (|IfSpec| rpc_if_handle) (|BindingVec| :pointer) (|ObjectUuidVec| :pointer))
(defcfun ("RpcNsBindingUnexportA" rpc-ns-binding-unexport-a :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_cstr) (|IfSpec| rpc_if_handle) (|ObjectUuidVec| :pointer))
(defcfun ("RpcNsBindingExportW" rpc-ns-binding-export-w :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_wstr) (|IfSpec| rpc_if_handle) (|BindingVec| :pointer) (|ObjectUuidVec| :pointer))
(defcfun ("RpcNsBindingUnexportW" rpc-ns-binding-unexport-w :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_wstr) (|IfSpec| rpc_if_handle) (|ObjectUuidVec| :pointer))
(defcfun ("RpcNsBindingExportPnPA" rpc-ns-binding-export-pn-pa :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_cstr) (|IfSpec| rpc_if_handle) (|ObjectVector| :pointer))
(defcfun ("RpcNsBindingUnexportPnPA" rpc-ns-binding-unexport-pn-pa :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_cstr) (|IfSpec| rpc_if_handle) (|ObjectVector| :pointer))
(defcfun ("RpcNsBindingExportPnPW" rpc-ns-binding-export-pn-pw :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_wstr) (|IfSpec| rpc_if_handle) (|ObjectVector| :pointer))
(defcfun ("RpcNsBindingUnexportPnPW" rpc-ns-binding-unexport-pn-pw :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_wstr) (|IfSpec| rpc_if_handle) (|ObjectVector| :pointer))
(defcfun ("RpcNsBindingLookupBeginA" rpc-ns-binding-lookup-begin-a :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_cstr) (|IfSpec| rpc_if_handle) (|ObjUuid| :pointer) (|BindingMaxCount| :unsigned-long) (|LookupContext| :pointer))
(defcfun ("RpcNsBindingLookupBeginW" rpc-ns-binding-lookup-begin-w :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_wstr) (|IfSpec| rpc_if_handle) (|ObjUuid| :pointer) (|BindingMaxCount| :unsigned-long) (|LookupContext| :pointer))
(defcfun ("RpcNsBindingLookupNext" rpc-ns-binding-lookup-next :convention :stdcall) rpc_status  (|LookupContext| rpc_ns_handle) (|BindingVec| :pointer))
(defcfun ("RpcNsBindingLookupDone" rpc-ns-binding-lookup-done :convention :stdcall) rpc_status  (|LookupContext| :pointer))
(defcfun ("RpcNsGroupDeleteA" rpc-ns-group-delete-a :convention :stdcall) rpc_status  (|GroupNameSyntax| :unsigned-long) (|GroupName| rpc_cstr))
(defcfun ("RpcNsGroupMbrAddA" rpc-ns-group-mbr-add-a :convention :stdcall) rpc_status  (|GroupNameSyntax| :unsigned-long) (|GroupName| rpc_cstr) (|MemberNameSyntax| :unsigned-long) (|MemberName| rpc_cstr))
(defcfun ("RpcNsGroupMbrRemoveA" rpc-ns-group-mbr-remove-a :convention :stdcall) rpc_status  (|GroupNameSyntax| :unsigned-long) (|GroupName| rpc_cstr) (|MemberNameSyntax| :unsigned-long) (|MemberName| rpc_cstr))
(defcfun ("RpcNsGroupMbrInqBeginA" rpc-ns-group-mbr-inq-begin-a :convention :stdcall) rpc_status  (|GroupNameSyntax| :unsigned-long) (|GroupName| rpc_cstr) (|MemberNameSyntax| :unsigned-long) (|InquiryContext| :pointer))
(defcfun ("RpcNsGroupMbrInqNextA" rpc-ns-group-mbr-inq-next-a :convention :stdcall) rpc_status  (|InquiryContext| rpc_ns_handle) (|MemberName| :pointer))
(defcfun ("RpcNsGroupDeleteW" rpc-ns-group-delete-w :convention :stdcall) rpc_status  (|GroupNameSyntax| :unsigned-long) (|GroupName| rpc_wstr))
(defcfun ("RpcNsGroupMbrAddW" rpc-ns-group-mbr-add-w :convention :stdcall) rpc_status  (|GroupNameSyntax| :unsigned-long) (|GroupName| rpc_wstr) (|MemberNameSyntax| :unsigned-long) (|MemberName| rpc_wstr))
(defcfun ("RpcNsGroupMbrRemoveW" rpc-ns-group-mbr-remove-w :convention :stdcall) rpc_status  (|GroupNameSyntax| :unsigned-long) (|GroupName| rpc_wstr) (|MemberNameSyntax| :unsigned-long) (|MemberName| rpc_wstr))
(defcfun ("RpcNsGroupMbrInqBeginW" rpc-ns-group-mbr-inq-begin-w :convention :stdcall) rpc_status  (|GroupNameSyntax| :unsigned-long) (|GroupName| rpc_wstr) (|MemberNameSyntax| :unsigned-long) (|InquiryContext| :pointer))
(defcfun ("RpcNsGroupMbrInqNextW" rpc-ns-group-mbr-inq-next-w :convention :stdcall) rpc_status  (|InquiryContext| rpc_ns_handle) (|MemberName| :pointer))
(defcfun ("RpcNsGroupMbrInqDone" rpc-ns-group-mbr-inq-done :convention :stdcall) rpc_status  (|InquiryContext| :pointer))
(defcfun ("RpcNsProfileDeleteA" rpc-ns-profile-delete-a :convention :stdcall) rpc_status  (|ProfileNameSyntax| :unsigned-long) (|ProfileName| rpc_cstr))
(defcfun ("RpcNsProfileEltAddA" rpc-ns-profile-elt-add-a :convention :stdcall) rpc_status  (|ProfileNameSyntax| :unsigned-long) (|ProfileName| rpc_cstr) (|IfId| :pointer) (|MemberNameSyntax| :unsigned-long) (|MemberName| rpc_cstr) (|Priority| :unsigned-long) (|Annotation| rpc_cstr))
(defcfun ("RpcNsProfileEltRemoveA" rpc-ns-profile-elt-remove-a :convention :stdcall) rpc_status  (|ProfileNameSyntax| :unsigned-long) (|ProfileName| rpc_cstr) (|IfId| :pointer) (|MemberNameSyntax| :unsigned-long) (|MemberName| rpc_cstr))
(defcfun ("RpcNsProfileEltInqBeginA" rpc-ns-profile-elt-inq-begin-a :convention :stdcall) rpc_status  (|ProfileNameSyntax| :unsigned-long) (|ProfileName| rpc_cstr) (|InquiryType| :unsigned-long) (|IfId| :pointer) (|VersOption| :unsigned-long) (|MemberNameSyntax| :unsigned-long) (|MemberName| rpc_cstr) (|InquiryContext| :pointer))
(defcfun ("RpcNsProfileEltInqNextA" rpc-ns-profile-elt-inq-next-a :convention :stdcall) rpc_status  (|InquiryContext| rpc_ns_handle) (|IfId| :pointer) (|MemberName| :pointer) (|Priority| :pointer) (|Annotation| :pointer))
(defcfun ("RpcNsProfileDeleteW" rpc-ns-profile-delete-w :convention :stdcall) rpc_status  (|ProfileNameSyntax| :unsigned-long) (|ProfileName| rpc_wstr))
(defcfun ("RpcNsProfileEltAddW" rpc-ns-profile-elt-add-w :convention :stdcall) rpc_status  (|ProfileNameSyntax| :unsigned-long) (|ProfileName| rpc_wstr) (|IfId| :pointer) (|MemberNameSyntax| :unsigned-long) (|MemberName| rpc_wstr) (|Priority| :unsigned-long) (|Annotation| rpc_wstr))
(defcfun ("RpcNsProfileEltRemoveW" rpc-ns-profile-elt-remove-w :convention :stdcall) rpc_status  (|ProfileNameSyntax| :unsigned-long) (|ProfileName| rpc_wstr) (|IfId| :pointer) (|MemberNameSyntax| :unsigned-long) (|MemberName| rpc_wstr))
(defcfun ("RpcNsProfileEltInqBeginW" rpc-ns-profile-elt-inq-begin-w :convention :stdcall) rpc_status  (|ProfileNameSyntax| :unsigned-long) (|ProfileName| rpc_wstr) (|InquiryType| :unsigned-long) (|IfId| :pointer) (|VersOption| :unsigned-long) (|MemberNameSyntax| :unsigned-long) (|MemberName| rpc_wstr) (|InquiryContext| :pointer))
(defcfun ("RpcNsProfileEltInqNextW" rpc-ns-profile-elt-inq-next-w :convention :stdcall) rpc_status  (|InquiryContext| rpc_ns_handle) (|IfId| :pointer) (|MemberName| :pointer) (|Priority| :pointer) (|Annotation| :pointer))
(defcfun ("RpcNsProfileEltInqDone" rpc-ns-profile-elt-inq-done :convention :stdcall) rpc_status  (|InquiryContext| :pointer))
(defcfun ("RpcNsEntryObjectInqBeginA" rpc-ns-entry-object-inq-begin-a :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_cstr) (|InquiryContext| :pointer))
(defcfun ("RpcNsEntryObjectInqBeginW" rpc-ns-entry-object-inq-begin-w :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_wstr) (|InquiryContext| :pointer))
(defcfun ("RpcNsEntryObjectInqNext" rpc-ns-entry-object-inq-next :convention :stdcall) rpc_status  (|InquiryContext| rpc_ns_handle) (|ObjUuid| :pointer))
(defcfun ("RpcNsEntryObjectInqDone" rpc-ns-entry-object-inq-done :convention :stdcall) rpc_status  (|InquiryContext| :pointer))
(defcfun ("RpcNsEntryExpandNameA" rpc-ns-entry-expand-name-a :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_cstr) (|ExpandedName| :pointer))
(defcfun ("RpcNsMgmtBindingUnexportA" rpc-ns-mgmt-binding-unexport-a :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_cstr) (|IfId| :pointer) (|VersOption| :unsigned-long) (|ObjectUuidVec| :pointer))
(defcfun ("RpcNsMgmtEntryCreateA" rpc-ns-mgmt-entry-create-a :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_cstr))
(defcfun ("RpcNsMgmtEntryDeleteA" rpc-ns-mgmt-entry-delete-a :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_cstr))
(defcfun ("RpcNsMgmtEntryInqIfIdsA" rpc-ns-mgmt-entry-inq-if-ids-a :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_cstr) (|IfIdVec| :pointer))
(defcfun ("RpcNsMgmtHandleSetExpAge" rpc-ns-mgmt-handle-set-exp-age :convention :stdcall) rpc_status  (|NsHandle| rpc_ns_handle) (|ExpirationAge| :unsigned-long))
(defcfun ("RpcNsMgmtInqExpAge" rpc-ns-mgmt-inq-exp-age :convention :stdcall) rpc_status  (|ExpirationAge| :pointer))
(defcfun ("RpcNsMgmtSetExpAge" rpc-ns-mgmt-set-exp-age :convention :stdcall) rpc_status  (|ExpirationAge| :unsigned-long))
(defcfun ("RpcNsEntryExpandNameW" rpc-ns-entry-expand-name-w :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_wstr) (|ExpandedName| :pointer))
(defcfun ("RpcNsMgmtBindingUnexportW" rpc-ns-mgmt-binding-unexport-w :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_wstr) (|IfId| :pointer) (|VersOption| :unsigned-long) (|ObjectUuidVec| :pointer))
(defcfun ("RpcNsMgmtEntryCreateW" rpc-ns-mgmt-entry-create-w :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_wstr))
(defcfun ("RpcNsMgmtEntryDeleteW" rpc-ns-mgmt-entry-delete-w :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_wstr))
(defcfun ("RpcNsMgmtEntryInqIfIdsW" rpc-ns-mgmt-entry-inq-if-ids-w :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_wstr) (|IfIdVec| :pointer))
(defcfun ("RpcNsBindingImportBeginA" rpc-ns-binding-import-begin-a :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_cstr) (|IfSpec| rpc_if_handle) (|ObjUuid| :pointer) (|ImportContext| :pointer))
(defcfun ("RpcNsBindingImportBeginW" rpc-ns-binding-import-begin-w :convention :stdcall) rpc_status  (|EntryNameSyntax| :unsigned-long) (|EntryName| rpc_wstr) (|IfSpec| rpc_if_handle) (|ObjUuid| :pointer) (|ImportContext| :pointer))
(defcfun ("RpcNsBindingImportNext" rpc-ns-binding-import-next :convention :stdcall) rpc_status  (|ImportContext| rpc_ns_handle) (|Binding| :pointer))
(defcfun ("RpcNsBindingImportDone" rpc-ns-binding-import-done :convention :stdcall) rpc_status  (|ImportContext| :pointer))
(defcfun ("RpcNsBindingSelect" rpc-ns-binding-select :convention :stdcall) rpc_status  (|BindingVec| :pointer) (|Binding| :pointer))
(defcfun ("RPCNOTIFICATION_ROUTINE" rpcnotificationroutine :convention :stdcall) :void  (|pAsync| :pointer) (|Context| :pointer) (|Event| rpc_async_event))
(defcfun ("RpcAsyncInitializeHandle" rpc-async-initialize-handle :convention :stdcall) rpc_status  (|pAsync| prpc_async_state) (|Size| :unsigned-int))
(defcfun ("RpcAsyncRegisterInfo" rpc-async-register-info :convention :stdcall) rpc_status  (|pAsync| prpc_async_state))
(defcfun ("RpcAsyncGetCallStatus" rpc-async-get-call-status :convention :stdcall) rpc_status  (|pAsync| prpc_async_state))
(defcfun ("RpcAsyncCompleteCall" rpc-async-complete-call :convention :stdcall) rpc_status  (|pAsync| prpc_async_state) (|Reply| :pointer))
(defcfun ("RpcAsyncAbortCall" rpc-async-abort-call :convention :stdcall) rpc_status  (|pAsync| prpc_async_state) (|ExceptionCode| :unsigned-long))
(defcfun ("RpcAsyncCancelCall" rpc-async-cancel-call :convention :stdcall) rpc_status  (|pAsync| prpc_async_state) (|fAbort| winbool))
(defcfun ("RpcAsyncCleanupThread" rpc-async-cleanup-thread :convention :stdcall) rpc_status  (|dwTimeout| dword))
(defcfun ("RpcErrorStartEnumeration" rpc-error-start-enumeration :convention :stdcall) rpc_status  (|EnumHandle| :pointer))
(defcfun ("RpcErrorGetNextRecord" rpc-error-get-next-record :convention :stdcall) rpc_status  (|EnumHandle| :pointer) (|CopyStrings| winbool) (|ErrorInfo| :pointer))
(defcfun ("RpcErrorEndEnumeration" rpc-error-end-enumeration :convention :stdcall) rpc_status  (|EnumHandle| :pointer))
(defcfun ("RpcErrorResetEnumeration" rpc-error-reset-enumeration :convention :stdcall) rpc_status  (|EnumHandle| :pointer))
(defcfun ("RpcErrorGetNumberOfRecords" rpc-error-get-number-of-records :convention :stdcall) rpc_status  (|EnumHandle| :pointer) (|Records| :pointer))
(defcfun ("RpcErrorSaveErrorInfo" rpc-error-save-error-info :convention :stdcall) rpc_status  (|EnumHandle| :pointer) (|ErrorBlob| :pointer) (|BlobSize| :pointer))
(defcfun ("RpcErrorLoadErrorInfo" rpc-error-load-error-info :convention :stdcall) rpc_status  (|ErrorBlob| pvoid) (|BlobSize| |size_t|) (|EnumHandle| :pointer))
(defcfun ("RpcErrorAddRecord" rpc-error-add-record :convention :stdcall) rpc_status  (|ErrorInfo| :pointer))
(defcfun ("RpcErrorClearInformation" rpc-error-clear-information :convention :stdcall) :void )
(defcfun ("RpcGetAuthorizationContextForClient" rpc-get-authorization-context-for-client :convention :stdcall) rpc_status  (|ClientBinding| rpc_binding_handle) (|ImpersonateOnReturn| winbool) (|Reserved1| pvoid) (|pExpirationTime| plarge_integer) (|Reserved2| luid) (|Reserved3| dword) (|Reserved4| pvoid) (|pAuthzClientContext| :pointer))
(defcfun ("RpcFreeAuthorizationContext" rpc-free-authorization-context :convention :stdcall) rpc_status  (|pAuthzClientContext| :pointer))
(defcfun ("RpcSsContextLockExclusive" rpc-ss-context-lock-exclusive :convention :stdcall) rpc_status  (|ServerBindingHandle| rpc_binding_handle) (|UserContext| pvoid))
(defcfun ("RpcSsContextLockShared" rpc-ss-context-lock-shared :convention :stdcall) rpc_status  (|ServerBindingHandle| rpc_binding_handle) (|UserContext| pvoid))
(defcfun ("RpcServerInqCallAttributesW" rpc-server-inq-call-attributes-w :convention :stdcall) rpc_status  (|ClientBinding| rpc_binding_handle) (|RpcCallAttributes| :pointer))
(defcfun ("RpcServerInqCallAttributesA" rpc-server-inq-call-attributes-a :convention :stdcall) rpc_status  (|ClientBinding| rpc_binding_handle) (|RpcCallAttributes| :pointer))
(defcfun ("I_RpcAsyncSetHandle" irpc-async-set-handle :convention :stdcall) rpc_status  (|Message| prpc_message) (|pAsync| prpc_async_state))
(defcfun ("I_RpcAsyncAbortCall" irpc-async-abort-call :convention :stdcall) rpc_status  (|pAsync| prpc_async_state) (|ExceptionCode| :unsigned-long))
(defcfun ("I_RpcExceptionFilter" irpc-exception-filter :convention :stdcall) :int  (|ExceptionCode| :unsigned-long))
(defcfun ("DragQueryFileA" drag-query-file-a :convention :stdcall) uint  (arg0 hdrop) (arg1 uint) (arg2 lpstr) (arg3 uint))
(defcfun ("DragQueryFileW" drag-query-file-w :convention :stdcall) uint  (arg0 hdrop) (arg1 uint) (arg2 lpwstr) (arg3 uint))
(defcfun ("DragQueryPoint" drag-query-point :convention :stdcall) winbool  (arg0 hdrop) (arg1 lppoint))
(defcfun ("DragFinish" drag-finish :convention :stdcall) :void  (arg0 hdrop))
(defcfun ("DragAcceptFiles" drag-accept-files :convention :stdcall) :void  (arg0 hwnd) (arg1 winbool))
(defcfun ("ShellExecuteA" shell-execute-a :convention :stdcall) hinstance  (|hwnd| hwnd) (|lpOperation| lpcstr) (|lpFile| lpcstr) (|lpParameters| lpcstr) (|lpDirectory| lpcstr) (|nShowCmd| int))
(defcfun ("ShellExecuteW" shell-execute-w :convention :stdcall) hinstance  (|hwnd| hwnd) (|lpOperation| lpcwstr) (|lpFile| lpcwstr) (|lpParameters| lpcwstr) (|lpDirectory| lpcwstr) (|nShowCmd| int))
(defcfun ("FindExecutableA" find-executable-a :convention :stdcall) hinstance  (|lpFile| lpcstr) (|lpDirectory| lpcstr) (|lpResult| lpstr))
(defcfun ("FindExecutableW" find-executable-w :convention :stdcall) hinstance  (|lpFile| lpcwstr) (|lpDirectory| lpcwstr) (|lpResult| lpwstr))
(defcfun ("CommandLineToArgvW" command-line-to-argv-w :convention :stdcall) :pointer  (|lpCmdLine| lpcwstr) (|pNumArgs| :pointer))
(defcfun ("ShellAboutA" shell-about-a :convention :stdcall) int  (|hWnd| hwnd) (|szApp| lpcstr) (|szOtherStuff| lpcstr) (|hIcon| hicon))
(defcfun ("ShellAboutW" shell-about-w :convention :stdcall) int  (|hWnd| hwnd) (|szApp| lpcwstr) (|szOtherStuff| lpcwstr) (|hIcon| hicon))
(defcfun ("DuplicateIcon" duplicate-icon :convention :stdcall) hicon  (|hInst| hinstance) (|hIcon| hicon))
(defcfun ("ExtractAssociatedIconA" extract-associated-icon-a :convention :stdcall) hicon  (|hInst| hinstance) (|lpIconPath| lpstr) (|lpiIcon| lpword))
(defcfun ("ExtractAssociatedIconW" extract-associated-icon-w :convention :stdcall) hicon  (|hInst| hinstance) (|lpIconPath| lpwstr) (|lpiIcon| lpword))
(defcfun ("ExtractIconA" extract-icon-a :convention :stdcall) hicon  (|hInst| hinstance) (|lpszExeFileName| lpcstr) (|nIconIndex| uint))
(defcfun ("ExtractIconW" extract-icon-w :convention :stdcall) hicon  (|hInst| hinstance) (|lpszExeFileName| lpcwstr) (|nIconIndex| uint))
(defcfun ("SHAppBarMessage" sh-app-bar-message :convention :stdcall) uint_ptr  (|dwMessage| dword) (|pData| pappbardata))
(defcfun ("DoEnvironmentSubstA" do-environment-subst-a :convention :stdcall) dword  (|szString| lpstr) (|cchString| uint))
(defcfun ("DoEnvironmentSubstW" do-environment-subst-w :convention :stdcall) dword  (|szString| lpwstr) (|cchString| uint))
(defcfun ("ExtractIconExA" extract-icon-ex-a :convention :stdcall) uint  (|lpszFile| lpcstr) (|nIconIndex| :int) (|phiconLarge| :pointer) (|phiconSmall| :pointer) (|nIcons| uint))
(defcfun ("ExtractIconExW" extract-icon-ex-w :convention :stdcall) uint  (|lpszFile| lpcwstr) (|nIconIndex| :int) (|phiconLarge| :pointer) (|phiconSmall| :pointer) (|nIcons| uint))
(defcfun ("SHFileOperationA" sh-file-operation-a :convention :stdcall) :int  (|lpFileOp| lpshfileopstructa))
(defcfun ("SHFileOperationW" sh-file-operation-w :convention :stdcall) :int  (|lpFileOp| lpshfileopstructw))
(defcfun ("SHFreeNameMappings" sh-free-name-mappings :convention :stdcall) :void  (|hNameMappings| handle))
(defcfun ("ShellExecuteExA" shell-execute-ex-a :convention :stdcall) winbool  (|lpExecInfo| lpshellexecuteinfoa))
(defcfun ("ShellExecuteExW" shell-execute-ex-w :convention :stdcall) winbool  (|lpExecInfo| lpshellexecuteinfow))
(defcfun ("WinExecErrorA" win-exec-error-a :convention :stdcall) :void  (|hwnd| hwnd) (|error| :int) (|lpstrFileName| lpcstr) (|lpstrTitle| lpcstr))
(defcfun ("WinExecErrorW" win-exec-error-w :convention :stdcall) :void  (|hwnd| hwnd) (|error| :int) (|lpstrFileName| lpcwstr) (|lpstrTitle| lpcwstr))
(defcfun ("SHCreateProcessAsUserW" sh-create-process-as-user-w :convention :stdcall) winbool  (|pscpi| pshcreateprocessinfow))
(defcfun ("SHQueryRecycleBinA" sh-query-recycle-bin-a :convention :stdcall) hresult  (|pszRootPath| lpcstr) (|pSHQueryRBInfo| lpshqueryrbinfo))
(defcfun ("SHQueryRecycleBinW" sh-query-recycle-bin-w :convention :stdcall) hresult  (|pszRootPath| lpcwstr) (|pSHQueryRBInfo| lpshqueryrbinfo))
(defcfun ("SHEmptyRecycleBinA" sh-empty-recycle-bin-a :convention :stdcall) hresult  (|hwnd| hwnd) (|pszRootPath| lpcstr) (|dwFlags| dword))
(defcfun ("SHEmptyRecycleBinW" sh-empty-recycle-bin-w :convention :stdcall) hresult  (|hwnd| hwnd) (|pszRootPath| lpcwstr) (|dwFlags| dword))
(defcfun ("Shell_NotifyIconA" shell-notify-icon-a :convention :stdcall) winbool  (|dwMessage| dword) (|lpData| pnotifyicondataa))
(defcfun ("Shell_NotifyIconW" shell-notify-icon-w :convention :stdcall) winbool  (|dwMessage| dword) (|lpData| pnotifyicondataw))
(defcfun ("SHGetFileInfoA" sh-get-file-info-a :convention :stdcall) dword_ptr  (|pszPath| lpcstr) (|dwFileAttributes| dword) (|psfi| :pointer) (|cbFileInfo| uint) (|uFlags| uint))
(defcfun ("SHGetFileInfoW" sh-get-file-info-w :convention :stdcall) dword_ptr  (|pszPath| lpcwstr) (|dwFileAttributes| dword) (|psfi| :pointer) (|cbFileInfo| uint) (|uFlags| uint))
(defcfun ("SHGetDiskFreeSpaceExA" sh-get-disk-free-space-ex-a :convention :stdcall) winbool  (|pszDirectoryName| lpcstr) (|pulFreeBytesAvailableToCaller| :pointer) (|pulTotalNumberOfBytes| :pointer) (|pulTotalNumberOfFreeBytes| :pointer))
(defcfun ("SHGetDiskFreeSpaceExW" sh-get-disk-free-space-ex-w :convention :stdcall) winbool  (|pszDirectoryName| lpcwstr) (|pulFreeBytesAvailableToCaller| :pointer) (|pulTotalNumberOfBytes| :pointer) (|pulTotalNumberOfFreeBytes| :pointer))
(defcfun ("SHGetNewLinkInfoA" sh-get-new-link-info-a :convention :stdcall) winbool  (|pszLinkTo| lpcstr) (|pszDir| lpcstr) (|pszName| lpstr) (|pfMustCopy| :pointer) (|uFlags| uint))
(defcfun ("SHGetNewLinkInfoW" sh-get-new-link-info-w :convention :stdcall) winbool  (|pszLinkTo| lpcwstr) (|pszDir| lpcwstr) (|pszName| lpwstr) (|pfMustCopy| :pointer) (|uFlags| uint))
(defcfun ("SHInvokePrinterCommandA" sh-invoke-printer-command-a :convention :stdcall) winbool  (|hwnd| hwnd) (|uAction| uint) (|lpBuf1| lpcstr) (|lpBuf2| lpcstr) (|fModal| winbool))
(defcfun ("SHInvokePrinterCommandW" sh-invoke-printer-command-w :convention :stdcall) winbool  (|hwnd| hwnd) (|uAction| uint) (|lpBuf1| lpcwstr) (|lpBuf2| lpcwstr) (|fModal| winbool))
(defcfun ("SHLoadNonloadedIconOverlayIdentifiers" sh-load-nonloaded-icon-overlay-identifiers :convention :stdcall) hresult )
(defcfun ("SHIsFileAvailableOffline" sh-is-file-available-offline :convention :stdcall) hresult  (|pwszPath| lpcwstr) (|pdwStatus| lpdword))
(defcfun ("SHSetLocalizedName" sh-set-localized-name :convention :stdcall) hresult  (|pszPath| lpwstr) (|pszResModule| lpcwstr) (|idsRes| :int))
(defcfun ("__WSAFDIsSet" %%wsafdisset :convention :stdcall) :int  (arg0 socket) (arg1 :pointer))
(defcfun ("accept" accept :convention :stdcall) socket  (|s| socket) (|addr| :pointer) (|addrlen| :pointer))
(defcfun ("bind" bind :convention :stdcall) :int  (|s| socket) (|name| :pointer) (|namelen| :int))
(defcfun ("closesocket" closesocket :convention :stdcall) :int  (|s| socket))
(defcfun ("connect" connect :convention :stdcall) :int  (|s| socket) (|name| :pointer) (|namelen| :int))
(defcfun ("ioctlsocket" ioctlsocket :convention :stdcall) :int  (|s| socket) (|cmd| :long) (|argp| :pointer))
(defcfun ("getpeername" getpeername :convention :stdcall) :int  (|s| socket) (|name| :pointer) (|namelen| :pointer))
(defcfun ("getsockname" getsockname :convention :stdcall) :int  (|s| socket) (|name| :pointer) (|namelen| :pointer))
(defcfun ("getsockopt" getsockopt :convention :stdcall) :int  (|s| socket) (|level| :int) (|optname| :int) (|optval| :pointer) (|optlen| :pointer))
(defcfun ("htonl" htonl :convention :stdcall) |u_long|  (|hostlong| |u_long|))
(defcfun ("htons" htons :convention :stdcall) |u_short|  (|hostshort| |u_short|))
(defcfun ("inet_addr" inet-addr :convention :stdcall) :unsigned-long  (|cp| :pointer))
(defcfun ("inet_ntoa" inet-ntoa :convention :stdcall) :pointer  (|in| |in_addr|))
(defcfun ("listen" listen :convention :stdcall) :int  (|s| socket) (|backlog| :int))
(defcfun ("ntohl" ntohl :convention :stdcall) |u_long|  (|netlong| |u_long|))
(defcfun ("ntohs" ntohs :convention :stdcall) |u_short|  (|netshort| |u_short|))
(defcfun ("recv" recv :convention :stdcall) :int  (|s| socket) (|buf| :pointer) (|len| :int) (|flags| :int))
(defcfun ("recvfrom" recvfrom :convention :stdcall) :int  (|s| socket) (|buf| :pointer) (|len| :int) (|flags| :int) (|from| :pointer) (|fromlen| :pointer))
(defcfun ("select" select :convention :stdcall) :int  (|nfds| :int) (|readfds| :pointer) (|writefds| :pointer) (|exceptfds| :pointer) (|timeout| :pointer))
(defcfun ("send" send :convention :stdcall) :int  (|s| socket) (|buf| :pointer) (|len| :int) (|flags| :int))
(defcfun ("sendto" sendto :convention :stdcall) :int  (|s| socket) (|buf| :pointer) (|len| :int) (|flags| :int) (|to| :pointer) (|tolen| :int))
(defcfun ("setsockopt" setsockopt :convention :stdcall) :int  (|s| socket) (|level| :int) (|optname| :int) (|optval| :pointer) (|optlen| :int))
(defcfun ("shutdown" shutdown :convention :stdcall) :int  (|s| socket) (|how| :int))
(defcfun ("socket" socket :convention :stdcall) socket  (|af| :int) (|type| :int) (|protocol| :int))
(defcfun ("gethostbyaddr" gethostbyaddr :convention :stdcall) :pointer  (|addr| :pointer) (|len| :int) (|type| :int))
(defcfun ("gethostbyname" gethostbyname :convention :stdcall) :pointer  (|name| :pointer))
(defcfun ("gethostname" gethostname :convention :stdcall) :int  (|name| :pointer) (|namelen| :int))
(defcfun ("getservbyport" getservbyport :convention :stdcall) :pointer  (|port| :int) (|proto| :pointer))
(defcfun ("getservbyname" getservbyname :convention :stdcall) :pointer  (|name| :pointer) (|proto| :pointer))
(defcfun ("getprotobynumber" getprotobynumber :convention :stdcall) :pointer  (|number| :int))
(defcfun ("getprotobyname" getprotobyname :convention :stdcall) :pointer  (|name| :pointer))
(defcfun ("WSAStartup" wsa-startup :convention :stdcall) :int  (|wVersionRequested| word) (|lpWSAData| lpwsadata))
(defcfun ("WSACleanup" wsa-cleanup :convention :stdcall) :int )
(defcfun ("WSASetLastError" wsa-set-last-error :convention :stdcall) :void  (|iError| :int))
(defcfun ("WSAGetLastError" wsa-get-last-error :convention :stdcall) :int )
(defcfun ("WSAIsBlocking" wsa-is-blocking :convention :stdcall) winbool )
(defcfun ("WSAUnhookBlockingHook" wsa-unhook-blocking-hook :convention :stdcall) :int )
(defcfun ("WSASetBlockingHook" wsa-set-blocking-hook :convention :stdcall) farproc  (|lpBlockFunc| farproc))
(defcfun ("WSACancelBlockingCall" wsa-cancel-blocking-call :convention :stdcall) :int )
(defcfun ("WSAAsyncGetServByName" wsa-async-get-serv-by-name :convention :stdcall) handle  (|hWnd| hwnd) (|wMsg| |u_int|) (|name| :pointer) (|proto| :pointer) (|buf| :pointer) (|buflen| :int))
(defcfun ("WSAAsyncGetServByPort" wsa-async-get-serv-by-port :convention :stdcall) handle  (|hWnd| hwnd) (|wMsg| |u_int|) (|port| :int) (|proto| :pointer) (|buf| :pointer) (|buflen| :int))
(defcfun ("WSAAsyncGetProtoByName" wsa-async-get-proto-by-name :convention :stdcall) handle  (|hWnd| hwnd) (|wMsg| |u_int|) (|name| :pointer) (|buf| :pointer) (|buflen| :int))
(defcfun ("WSAAsyncGetProtoByNumber" wsa-async-get-proto-by-number :convention :stdcall) handle  (|hWnd| hwnd) (|wMsg| |u_int|) (|number| :int) (|buf| :pointer) (|buflen| :int))
(defcfun ("WSAAsyncGetHostByName" wsa-async-get-host-by-name :convention :stdcall) handle  (|hWnd| hwnd) (|wMsg| |u_int|) (|name| :pointer) (|buf| :pointer) (|buflen| :int))
(defcfun ("WSAAsyncGetHostByAddr" wsa-async-get-host-by-addr :convention :stdcall) handle  (|hWnd| hwnd) (|wMsg| |u_int|) (|addr| :pointer) (|len| :int) (|type| :int) (|buf| :pointer) (|buflen| :int))
(defcfun ("WSACancelAsyncRequest" wsa-cancel-async-request :convention :stdcall) :int  (|hAsyncTaskHandle| handle))
(defcfun ("WSAAsyncSelect" wsa-async-select :convention :stdcall) :int  (|s| socket) (|hWnd| hwnd) (|wMsg| |u_int|) (|lEvent| :long))
(defcfun ("WSAAccept" wsa-accept :convention :stdcall) socket  (|s| socket) (|addr| :pointer) (|addrlen| lpint) (|lpfnCondition| lpconditionproc) (|dwCallbackData| dword_ptr))
(defcfun ("WSACloseEvent" wsa-close-event :convention :stdcall) winbool  (|hEvent| handle))
(defcfun ("WSAConnect" wsa-connect :convention :stdcall) :int  (|s| socket) (|name| :pointer) (|namelen| :int) (|lpCallerData| lpwsabuf) (|lpCalleeData| lpwsabuf) (|lpSQOS| lpqos) (|lpGQOS| lpqos))
(defcfun ("WSACreateEvent" wsa-create-event :convention :stdcall) handle )
(defcfun ("WSADuplicateSocketA" wsa-duplicate-socket-a :convention :stdcall) :int  (|s| socket) (|dwProcessId| dword) (|lpProtocolInfo| lpwsaprotocol_infoa))
(defcfun ("WSADuplicateSocketW" wsa-duplicate-socket-w :convention :stdcall) :int  (|s| socket) (|dwProcessId| dword) (|lpProtocolInfo| lpwsaprotocol_infow))
(defcfun ("WSAEnumNetworkEvents" wsa-enum-network-events :convention :stdcall) :int  (|s| socket) (|hEventObject| handle) (|lpNetworkEvents| lpwsanetworkevents))
(defcfun ("WSAEnumProtocolsA" wsa-enum-protocols-a :convention :stdcall) :int  (|lpiProtocols| lpint) (|lpProtocolBuffer| lpwsaprotocol_infoa) (|lpdwBufferLength| lpdword))
(defcfun ("WSAEnumProtocolsW" wsa-enum-protocols-w :convention :stdcall) :int  (|lpiProtocols| lpint) (|lpProtocolBuffer| lpwsaprotocol_infow) (|lpdwBufferLength| lpdword))
(defcfun ("WSAEventSelect" wsa-event-select :convention :stdcall) :int  (|s| socket) (|hEventObject| handle) (|lNetworkEvents| :long))
(defcfun ("WSAGetOverlappedResult" wsa-get-overlapped-result :convention :stdcall) winbool  (|s| socket) (|lpOverlapped| lpwsaoverlapped) (|lpcbTransfer| lpdword) (|fWait| winbool) (|lpdwFlags| lpdword))
(defcfun ("WSAGetQOSByName" wsa-get-qos-by-name :convention :stdcall) winbool  (|s| socket) (|lpQOSName| lpwsabuf) (|lpQOS| lpqos))
(defcfun ("WSAHtonl" wsa-htonl :convention :stdcall) :int  (|s| socket) (|hostlong| |u_long|) (|lpnetlong| :pointer))
(defcfun ("WSAHtons" wsa-htons :convention :stdcall) :int  (|s| socket) (|hostshort| |u_short|) (|lpnetshort| :pointer))
(defcfun ("WSAIoctl" wsa-ioctl :convention :stdcall) :int  (|s| socket) (|dwIoControlCode| dword) (|lpvInBuffer| lpvoid) (|cbInBuffer| dword) (|lpvOutBuffer| lpvoid) (|cbOutBuffer| dword) (|lpcbBytesReturned| lpdword) (|lpOverlapped| lpwsaoverlapped) (|lpCompletionRoutine| lpwsaoverlapped_completion_routine))
(defcfun ("WSAJoinLeaf" wsa-join-leaf :convention :stdcall) socket  (|s| socket) (|name| :pointer) (|namelen| :int) (|lpCallerData| lpwsabuf) (|lpCalleeData| lpwsabuf) (|lpSQOS| lpqos) (|lpGQOS| lpqos) (|dwFlags| dword))
(defcfun ("WSANtohl" wsa-ntohl :convention :stdcall) :int  (|s| socket) (|netlong| |u_long|) (|lphostlong| :pointer))
(defcfun ("WSANtohs" wsa-ntohs :convention :stdcall) :int  (|s| socket) (|netshort| |u_short|) (|lphostshort| :pointer))
(defcfun ("WSARecv" wsa-recv :convention :stdcall) :int  (|s| socket) (|lpBuffers| lpwsabuf) (|dwBufferCount| dword) (|lpNumberOfBytesRecvd| lpdword) (|lpFlags| lpdword) (|lpOverlapped| lpwsaoverlapped) (|lpCompletionRoutine| lpwsaoverlapped_completion_routine))
(defcfun ("WSARecvDisconnect" wsa-recv-disconnect :convention :stdcall) :int  (|s| socket) (|lpInboundDisconnectData| lpwsabuf))
(defcfun ("WSARecvFrom" wsa-recv-from :convention :stdcall) :int  (|s| socket) (|lpBuffers| lpwsabuf) (|dwBufferCount| dword) (|lpNumberOfBytesRecvd| lpdword) (|lpFlags| lpdword) (|lpFrom| :pointer) (|lpFromlen| lpint) (|lpOverlapped| lpwsaoverlapped) (|lpCompletionRoutine| lpwsaoverlapped_completion_routine))
(defcfun ("WSAResetEvent" wsa-reset-event :convention :stdcall) winbool  (|hEvent| handle))
(defcfun ("WSASend" wsa-send :convention :stdcall) :int  (|s| socket) (|lpBuffers| lpwsabuf) (|dwBufferCount| dword) (|lpNumberOfBytesSent| lpdword) (|dwFlags| dword) (|lpOverlapped| lpwsaoverlapped) (|lpCompletionRoutine| lpwsaoverlapped_completion_routine))
(defcfun ("WSASendDisconnect" wsa-send-disconnect :convention :stdcall) :int  (|s| socket) (|lpOutboundDisconnectData| lpwsabuf))
(defcfun ("WSASendTo" wsa-send-to :convention :stdcall) :int  (|s| socket) (|lpBuffers| lpwsabuf) (|dwBufferCount| dword) (|lpNumberOfBytesSent| lpdword) (|dwFlags| dword) (|lpTo| :pointer) (|iTolen| :int) (|lpOverlapped| lpwsaoverlapped) (|lpCompletionRoutine| lpwsaoverlapped_completion_routine))
(defcfun ("WSASetEvent" wsa-set-event :convention :stdcall) winbool  (|hEvent| handle))
(defcfun ("WSASocketA" wsa-socket-a :convention :stdcall) socket  (|af| :int) (|type| :int) (|protocol| :int) (|lpProtocolInfo| lpwsaprotocol_infoa) (|g| group) (|dwFlags| dword))
(defcfun ("WSASocketW" wsa-socket-w :convention :stdcall) socket  (|af| :int) (|type| :int) (|protocol| :int) (|lpProtocolInfo| lpwsaprotocol_infow) (|g| group) (|dwFlags| dword))
(defcfun ("WSAWaitForMultipleEvents" wsa-wait-for-multiple-events :convention :stdcall) dword  (|cEvents| dword) (|lphEvents| :pointer) (|fWaitAll| winbool) (|dwTimeout| dword) (|fAlertable| winbool))
(defcfun ("WSAAddressToStringA" wsa-address-to-string-a :convention :stdcall) int  (|lpsaAddress| lpsockaddr) (|dwAddressLength| dword) (|lpProtocolInfo| lpwsaprotocol_infoa) (|lpszAddressString| lpstr) (|lpdwAddressStringLength| lpdword))
(defcfun ("WSAAddressToStringW" wsa-address-to-string-w :convention :stdcall) int  (|lpsaAddress| lpsockaddr) (|dwAddressLength| dword) (|lpProtocolInfo| lpwsaprotocol_infow) (|lpszAddressString| lpwstr) (|lpdwAddressStringLength| lpdword))
(defcfun ("WSAStringToAddressA" wsa-string-to-address-a :convention :stdcall) int  (|AddressString| lpstr) (|AddressFamily| int) (|lpProtocolInfo| lpwsaprotocol_infoa) (|lpAddress| lpsockaddr) (|lpAddressLength| lpint))
(defcfun ("WSAStringToAddressW" wsa-string-to-address-w :convention :stdcall) int  (|AddressString| lpwstr) (|AddressFamily| int) (|lpProtocolInfo| lpwsaprotocol_infow) (|lpAddress| lpsockaddr) (|lpAddressLength| lpint))
(defcfun ("WSALookupServiceBeginA" wsa-lookup-service-begin-a :convention :stdcall) int  (|lpqsRestrictions| lpwsaqueryseta) (|dwControlFlags| dword) (|lphLookup| lphandle))
(defcfun ("WSALookupServiceBeginW" wsa-lookup-service-begin-w :convention :stdcall) int  (|lpqsRestrictions| lpwsaquerysetw) (|dwControlFlags| dword) (|lphLookup| lphandle))
(defcfun ("WSALookupServiceNextA" wsa-lookup-service-next-a :convention :stdcall) int  (|hLookup| handle) (|dwControlFlags| dword) (|lpdwBufferLength| lpdword) (|lpqsResults| lpwsaqueryseta))
(defcfun ("WSALookupServiceNextW" wsa-lookup-service-next-w :convention :stdcall) int  (|hLookup| handle) (|dwControlFlags| dword) (|lpdwBufferLength| lpdword) (|lpqsResults| lpwsaquerysetw))
(defcfun ("WSANSPIoctl" wsansp-ioctl :convention :stdcall) int  (|hLookup| handle) (|dwControlCode| dword) (|lpvInBuffer| lpvoid) (|cbInBuffer| dword) (|lpvOutBuffer| lpvoid) (|cbOutBuffer| dword) (|lpcbBytesReturned| lpdword) (|lpCompletion| lpwsacompletion))
(defcfun ("WSALookupServiceEnd" wsa-lookup-service-end :convention :stdcall) int  (|hLookup| handle))
(defcfun ("WSAInstallServiceClassA" wsa-install-service-class-a :convention :stdcall) int  (|lpServiceClassInfo| lpwsaserviceclassinfoa))
(defcfun ("WSAInstallServiceClassW" wsa-install-service-class-w :convention :stdcall) int  (|lpServiceClassInfo| lpwsaserviceclassinfow))
(defcfun ("WSARemoveServiceClass" wsa-remove-service-class :convention :stdcall) int  (|lpServiceClassId| lpguid))
(defcfun ("WSAGetServiceClassInfoA" wsa-get-service-class-info-a :convention :stdcall) int  (|lpProviderId| lpguid) (|lpServiceClassId| lpguid) (|lpdwBufSize| lpdword) (|lpServiceClassInfo| lpwsaserviceclassinfoa))
(defcfun ("WSAGetServiceClassInfoW" wsa-get-service-class-info-w :convention :stdcall) int  (|lpProviderId| lpguid) (|lpServiceClassId| lpguid) (|lpdwBufSize| lpdword) (|lpServiceClassInfo| lpwsaserviceclassinfow))
(defcfun ("WSAEnumNameSpaceProvidersA" wsa-enum-name-space-providers-a :convention :stdcall) int  (|lpdwBufferLength| lpdword) (|lpnspBuffer| lpwsanamespace_infoa))
(defcfun ("WSAEnumNameSpaceProvidersW" wsa-enum-name-space-providers-w :convention :stdcall) int  (|lpdwBufferLength| lpdword) (|lpnspBuffer| lpwsanamespace_infow))
(defcfun ("WSAGetServiceClassNameByClassIdA" wsa-get-service-class-name-by-class-id-a :convention :stdcall) int  (|lpServiceClassId| lpguid) (|lpszServiceClassName| lpstr) (|lpdwBufferLength| lpdword))
(defcfun ("WSAGetServiceClassNameByClassIdW" wsa-get-service-class-name-by-class-id-w :convention :stdcall) int  (|lpServiceClassId| lpguid) (|lpszServiceClassName| lpwstr) (|lpdwBufferLength| lpdword))
(defcfun ("WSASetServiceA" wsa-set-service-a :convention :stdcall) int  (|lpqsRegInfo| lpwsaqueryseta) (|essoperation| wsaesetserviceop) (|dwControlFlags| dword))
(defcfun ("WSASetServiceW" wsa-set-service-w :convention :stdcall) int  (|lpqsRegInfo| lpwsaquerysetw) (|essoperation| wsaesetserviceop) (|dwControlFlags| dword))
(defcfun ("WSAProviderConfigChange" wsa-provider-config-change :convention :stdcall) int  (|lpNotificationHandle| lphandle) (|lpOverlapped| lpwsaoverlapped) (|lpCompletionRoutine| lpwsaoverlapped_completion_routine))
(defcfun ("WSARecvEx" wsa-recv-ex :convention :stdcall) :int  (|s| socket) (|buf| :pointer) (|len| :int) (|flags| :pointer))
(defcfun ("TransmitFile" transmit-file :convention :stdcall) winbool  (|hSocket| socket) (|hFile| handle) (|nNumberOfBytesToWrite| dword) (|nNumberOfBytesPerSend| dword) (|lpOverlapped| lpoverlapped) (|lpTransmitBuffers| lptransmit_file_buffers) (|dwReserved| dword))
(defcfun ("AcceptEx" accept-ex :convention :stdcall) winbool  (|sListenSocket| socket) (|sAcceptSocket| socket) (|lpOutputBuffer| pvoid) (|dwReceiveDataLength| dword) (|dwLocalAddressLength| dword) (|dwRemoteAddressLength| dword) (|lpdwBytesReceived| lpdword) (|lpOverlapped| lpoverlapped))
(defcfun ("GetAcceptExSockaddrs" get-accept-ex-sockaddrs :convention :stdcall) :void  (|lpOutputBuffer| pvoid) (|dwReceiveDataLength| dword) (|dwLocalAddressLength| dword) (|dwRemoteAddressLength| dword) (|LocalSockaddr| :pointer) (|LocalSockaddrLength| lpint) (|RemoteSockaddr| :pointer) (|RemoteSockaddrLength| lpint))
(defcfun ("CryptAcquireContextA" crypt-acquire-context-a :convention :stdcall) winbool  (|phProv| :pointer) (|szContainer| lpcstr) (|szProvider| lpcstr) (|dwProvType| dword) (|dwFlags| dword))
(defcfun ("CryptAcquireContextW" crypt-acquire-context-w :convention :stdcall) winbool  (|phProv| :pointer) (|szContainer| lpcwstr) (|szProvider| lpcwstr) (|dwProvType| dword) (|dwFlags| dword))
(defcfun ("CryptReleaseContext" crypt-release-context :convention :stdcall) winbool  (|hProv| hcryptprov) (|dwFlags| dword))
(defcfun ("CryptGenKey" crypt-gen-key :convention :stdcall) winbool  (|hProv| hcryptprov) (|Algid| alg_id) (|dwFlags| dword) (|phKey| :pointer))
(defcfun ("CryptDeriveKey" crypt-derive-key :convention :stdcall) winbool  (|hProv| hcryptprov) (|Algid| alg_id) (|hBaseData| hcrypthash) (|dwFlags| dword) (|phKey| :pointer))
(defcfun ("CryptDestroyKey" crypt-destroy-key :convention :stdcall) winbool  (|hKey| hcryptkey))
(defcfun ("CryptSetKeyParam" crypt-set-key-param :convention :stdcall) winbool  (|hKey| hcryptkey) (|dwParam| dword) (|pbData| :pointer) (|dwFlags| dword))
(defcfun ("CryptGetKeyParam" crypt-get-key-param :convention :stdcall) winbool  (|hKey| hcryptkey) (|dwParam| dword) (|pbData| :pointer) (|pdwDataLen| :pointer) (|dwFlags| dword))
(defcfun ("CryptSetHashParam" crypt-set-hash-param :convention :stdcall) winbool  (|hHash| hcrypthash) (|dwParam| dword) (|pbData| :pointer) (|dwFlags| dword))
(defcfun ("CryptGetHashParam" crypt-get-hash-param :convention :stdcall) winbool  (|hHash| hcrypthash) (|dwParam| dword) (|pbData| :pointer) (|pdwDataLen| :pointer) (|dwFlags| dword))
(defcfun ("CryptSetProvParam" crypt-set-prov-param :convention :stdcall) winbool  (|hProv| hcryptprov) (|dwParam| dword) (|pbData| :pointer) (|dwFlags| dword))
(defcfun ("CryptGetProvParam" crypt-get-prov-param :convention :stdcall) winbool  (|hProv| hcryptprov) (|dwParam| dword) (|pbData| :pointer) (|pdwDataLen| :pointer) (|dwFlags| dword))
(defcfun ("CryptGenRandom" crypt-gen-random :convention :stdcall) winbool  (|hProv| hcryptprov) (|dwLen| dword) (|pbBuffer| :pointer))
(defcfun ("CryptGetUserKey" crypt-get-user-key :convention :stdcall) winbool  (|hProv| hcryptprov) (|dwKeySpec| dword) (|phUserKey| :pointer))
(defcfun ("CryptExportKey" crypt-export-key :convention :stdcall) winbool  (|hKey| hcryptkey) (|hExpKey| hcryptkey) (|dwBlobType| dword) (|dwFlags| dword) (|pbData| :pointer) (|pdwDataLen| :pointer))
(defcfun ("CryptImportKey" crypt-import-key :convention :stdcall) winbool  (|hProv| hcryptprov) (|pbData| :pointer) (|dwDataLen| dword) (|hPubKey| hcryptkey) (|dwFlags| dword) (|phKey| :pointer))
(defcfun ("CryptEncrypt" crypt-encrypt :convention :stdcall) winbool  (|hKey| hcryptkey) (|hHash| hcrypthash) (|Final| winbool) (|dwFlags| dword) (|pbData| :pointer) (|pdwDataLen| :pointer) (|dwBufLen| dword))
(defcfun ("CryptDecrypt" crypt-decrypt :convention :stdcall) winbool  (|hKey| hcryptkey) (|hHash| hcrypthash) (|Final| winbool) (|dwFlags| dword) (|pbData| :pointer) (|pdwDataLen| :pointer))
(defcfun ("CryptCreateHash" crypt-create-hash :convention :stdcall) winbool  (|hProv| hcryptprov) (|Algid| alg_id) (|hKey| hcryptkey) (|dwFlags| dword) (|phHash| :pointer))
(defcfun ("CryptHashData" crypt-hash-data :convention :stdcall) winbool  (|hHash| hcrypthash) (|pbData| :pointer) (|dwDataLen| dword) (|dwFlags| dword))
(defcfun ("CryptHashSessionKey" crypt-hash-session-key :convention :stdcall) winbool  (|hHash| hcrypthash) (|hKey| hcryptkey) (|dwFlags| dword))
(defcfun ("CryptDestroyHash" crypt-destroy-hash :convention :stdcall) winbool  (|hHash| hcrypthash))
(defcfun ("CryptSignHashA" crypt-sign-hash-a :convention :stdcall) winbool  (|hHash| hcrypthash) (|dwKeySpec| dword) (|szDescription| lpcstr) (|dwFlags| dword) (|pbSignature| :pointer) (|pdwSigLen| :pointer))
(defcfun ("CryptSignHashW" crypt-sign-hash-w :convention :stdcall) winbool  (|hHash| hcrypthash) (|dwKeySpec| dword) (|szDescription| lpcwstr) (|dwFlags| dword) (|pbSignature| :pointer) (|pdwSigLen| :pointer))
(defcfun ("CryptVerifySignatureA" crypt-verify-signature-a :convention :stdcall) winbool  (|hHash| hcrypthash) (|pbSignature| :pointer) (|dwSigLen| dword) (|hPubKey| hcryptkey) (|szDescription| lpcstr) (|dwFlags| dword))
(defcfun ("CryptVerifySignatureW" crypt-verify-signature-w :convention :stdcall) winbool  (|hHash| hcrypthash) (|pbSignature| :pointer) (|dwSigLen| dword) (|hPubKey| hcryptkey) (|szDescription| lpcwstr) (|dwFlags| dword))
(defcfun ("CryptSetProviderA" crypt-set-provider-a :convention :stdcall) winbool  (|pszProvName| lpcstr) (|dwProvType| dword))
(defcfun ("CryptSetProviderW" crypt-set-provider-w :convention :stdcall) winbool  (|pszProvName| lpcwstr) (|dwProvType| dword))
(defcfun ("CryptSetProviderExA" crypt-set-provider-ex-a :convention :stdcall) winbool  (|pszProvName| lpcstr) (|dwProvType| dword) (|pdwReserved| :pointer) (|dwFlags| dword))
(defcfun ("CryptSetProviderExW" crypt-set-provider-ex-w :convention :stdcall) winbool  (|pszProvName| lpcwstr) (|dwProvType| dword) (|pdwReserved| :pointer) (|dwFlags| dword))
(defcfun ("CryptGetDefaultProviderA" crypt-get-default-provider-a :convention :stdcall) winbool  (|dwProvType| dword) (|pdwReserved| :pointer) (|dwFlags| dword) (|pszProvName| lpstr) (|pcbProvName| :pointer))
(defcfun ("CryptGetDefaultProviderW" crypt-get-default-provider-w :convention :stdcall) winbool  (|dwProvType| dword) (|pdwReserved| :pointer) (|dwFlags| dword) (|pszProvName| lpwstr) (|pcbProvName| :pointer))
(defcfun ("CryptEnumProviderTypesA" crypt-enum-provider-types-a :convention :stdcall) winbool  (|dwIndex| dword) (|pdwReserved| :pointer) (|dwFlags| dword) (|pdwProvType| :pointer) (|szTypeName| lpstr) (|pcbTypeName| :pointer))
(defcfun ("CryptEnumProviderTypesW" crypt-enum-provider-types-w :convention :stdcall) winbool  (|dwIndex| dword) (|pdwReserved| :pointer) (|dwFlags| dword) (|pdwProvType| :pointer) (|szTypeName| lpwstr) (|pcbTypeName| :pointer))
(defcfun ("CryptEnumProvidersA" crypt-enum-providers-a :convention :stdcall) winbool  (|dwIndex| dword) (|pdwReserved| :pointer) (|dwFlags| dword) (|pdwProvType| :pointer) (|szProvName| lpstr) (|pcbProvName| :pointer))
(defcfun ("CryptEnumProvidersW" crypt-enum-providers-w :convention :stdcall) winbool  (|dwIndex| dword) (|pdwReserved| :pointer) (|dwFlags| dword) (|pdwProvType| :pointer) (|szProvName| lpwstr) (|pcbProvName| :pointer))
(defcfun ("CryptContextAddRef" crypt-context-add-ref :convention :stdcall) winbool  (|hProv| hcryptprov) (|pdwReserved| :pointer) (|dwFlags| dword))
(defcfun ("CryptDuplicateKey" crypt-duplicate-key :convention :stdcall) winbool  (|hKey| hcryptkey) (|pdwReserved| :pointer) (|dwFlags| dword) (|phKey| :pointer))
(defcfun ("CryptDuplicateHash" crypt-duplicate-hash :convention :stdcall) winbool  (|hHash| hcrypthash) (|pdwReserved| :pointer) (|dwFlags| dword) (|phHash| :pointer))
(defcfun ("GetEncSChannel" get-enc-schannel) winbool  (|pData| :pointer) (|dwDecSize| :pointer))
(defcfun ("CryptFormatObject" crypt-format-object :convention :stdcall) winbool  (|dwCertEncodingType| dword) (|dwFormatType| dword) (|dwFormatStrType| dword) (|pFormatStruct| :pointer) (|lpszStructType| lpcstr) (|pbEncoded| :pointer) (|cbEncoded| dword) (|pbFormat| :pointer) (|pcbFormat| :pointer))
(defcfun ("CryptEncodeObjectEx" crypt-encode-object-ex :convention :stdcall) winbool  (|dwCertEncodingType| dword) (|lpszStructType| lpcstr) (|pvStructInfo| :pointer) (|dwFlags| dword) (|pEncodePara| pcrypt_encode_para) (|pvEncoded| :pointer) (|pcbEncoded| :pointer))
(defcfun ("CryptEncodeObject" crypt-encode-object :convention :stdcall) winbool  (|dwCertEncodingType| dword) (|lpszStructType| lpcstr) (|pvStructInfo| :pointer) (|pbEncoded| :pointer) (|pcbEncoded| :pointer))
(defcfun ("CryptDecodeObjectEx" crypt-decode-object-ex :convention :stdcall) winbool  (|dwCertEncodingType| dword) (|lpszStructType| lpcstr) (|pbEncoded| :pointer) (|cbEncoded| dword) (|dwFlags| dword) (|pDecodePara| pcrypt_decode_para) (|pvStructInfo| :pointer) (|pcbStructInfo| :pointer))
(defcfun ("CryptDecodeObject" crypt-decode-object :convention :stdcall) winbool  (|dwCertEncodingType| dword) (|lpszStructType| lpcstr) (|pbEncoded| :pointer) (|cbEncoded| dword) (|dwFlags| dword) (|pvStructInfo| :pointer) (|pcbStructInfo| :pointer))
(defcfun ("CryptInstallOIDFunctionAddress" crypt-install-oid-function-address :convention :stdcall) winbool  (|hModule| hmodule) (|dwEncodingType| dword) (|pszFuncName| lpcstr) (|cFuncEntry| dword) (|rgFuncEntry| :pointer) (|dwFlags| dword))
(defcfun ("CryptInitOIDFunctionSet" crypt-init-oid-function-set :convention :stdcall) hcryptoidfuncset  (|pszFuncName| lpcstr) (|dwFlags| dword))
(defcfun ("CryptGetOIDFunctionAddress" crypt-get-oid-function-address :convention :stdcall) winbool  (|hFuncSet| hcryptoidfuncset) (|dwEncodingType| dword) (|pszOID| lpcstr) (|dwFlags| dword) (|ppvFuncAddr| :pointer) (|phFuncAddr| :pointer))
(defcfun ("CryptGetDefaultOIDDllList" crypt-get-default-oid-dll-list :convention :stdcall) winbool  (|hFuncSet| hcryptoidfuncset) (|dwEncodingType| dword) (|pwszDllList| lpwstr) (|pcchDllList| :pointer))
(defcfun ("CryptGetDefaultOIDFunctionAddress" crypt-get-default-oid-function-address :convention :stdcall) winbool  (|hFuncSet| hcryptoidfuncset) (|dwEncodingType| dword) (|pwszDll| lpcwstr) (|dwFlags| dword) (|ppvFuncAddr| :pointer) (|phFuncAddr| :pointer))
(defcfun ("CryptFreeOIDFunctionAddress" crypt-free-oid-function-address :convention :stdcall) winbool  (|hFuncAddr| hcryptoidfuncaddr) (|dwFlags| dword))
(defcfun ("CryptRegisterOIDFunction" crypt-register-oid-function :convention :stdcall) winbool  (|dwEncodingType| dword) (|pszFuncName| lpcstr) (|pszOID| lpcstr) (|pwszDll| lpcwstr) (|pszOverrideFuncName| lpcstr))
(defcfun ("CryptUnregisterOIDFunction" crypt-unregister-oid-function :convention :stdcall) winbool  (|dwEncodingType| dword) (|pszFuncName| lpcstr) (|pszOID| lpcstr))
(defcfun ("CryptRegisterDefaultOIDFunction" crypt-register-default-oid-function :convention :stdcall) winbool  (|dwEncodingType| dword) (|pszFuncName| lpcstr) (|dwIndex| dword) (|pwszDll| lpcwstr))
(defcfun ("CryptUnregisterDefaultOIDFunction" crypt-unregister-default-oid-function :convention :stdcall) winbool  (|dwEncodingType| dword) (|pszFuncName| lpcstr) (|pwszDll| lpcwstr))
(defcfun ("CryptSetOIDFunctionValue" crypt-set-oid-function-value :convention :stdcall) winbool  (|dwEncodingType| dword) (|pszFuncName| lpcstr) (|pszOID| lpcstr) (|pwszValueName| lpcwstr) (|dwValueType| dword) (|pbValueData| :pointer) (|cbValueData| dword))
(defcfun ("CryptGetOIDFunctionValue" crypt-get-oid-function-value :convention :stdcall) winbool  (|dwEncodingType| dword) (|pszFuncName| lpcstr) (|pszOID| lpcstr) (|pwszValueName| lpcwstr) (|pdwValueType| :pointer) (|pbValueData| :pointer) (|pcbValueData| :pointer))
(defcfun ("CryptEnumOIDFunction" crypt-enum-oid-function :convention :stdcall) winbool  (|dwEncodingType| dword) (|pszFuncName| lpcstr) (|pszOID| lpcstr) (|dwFlags| dword) (|pvArg| :pointer) (|pfnEnumOIDFunc| pfn_crypt_enum_oid_func))
(defcfun ("CryptFindOIDInfo" crypt-find-oid-info :convention :stdcall) pccrypt_oid_info  (|dwKeyType| dword) (|pvKey| :pointer) (|dwGroupId| dword))
(defcfun ("CryptRegisterOIDInfo" crypt-register-oid-info :convention :stdcall) winbool  (|pInfo| pccrypt_oid_info) (|dwFlags| dword))
(defcfun ("CryptUnregisterOIDInfo" crypt-unregister-oid-info :convention :stdcall) winbool  (|pInfo| pccrypt_oid_info))
(defcfun ("CryptEnumOIDInfo" crypt-enum-oid-info :convention :stdcall) winbool  (|dwGroupId| dword) (|dwFlags| dword) (|pvArg| :pointer) (|pfnEnumOIDInfo| pfn_crypt_enum_oid_info))
(defcfun ("CryptFindLocalizedName" crypt-find-localized-name :convention :stdcall) lpcwstr  (|pwszCryptName| lpcwstr))
(defcfun ("CryptMsgOpenToEncode" crypt-msg-open-to-encode :convention :stdcall) hcryptmsg  (|dwMsgEncodingType| dword) (|dwFlags| dword) (|dwMsgType| dword) (|pvMsgEncodeInfo| :pointer) (|pszInnerContentObjID| lpstr) (|pStreamInfo| pcmsg_stream_info))
(defcfun ("CryptMsgCalculateEncodedLength" crypt-msg-calculate-encoded-length :convention :stdcall) dword  (|dwMsgEncodingType| dword) (|dwFlags| dword) (|dwMsgType| dword) (|pvMsgEncodeInfo| :pointer) (|pszInnerContentObjID| lpstr) (|cbData| dword))
(defcfun ("CryptMsgOpenToDecode" crypt-msg-open-to-decode :convention :stdcall) hcryptmsg  (|dwMsgEncodingType| dword) (|dwFlags| dword) (|dwMsgType| dword) (|hCryptProv| hcryptprov) (|pRecipientInfo| pcert_info) (|pStreamInfo| pcmsg_stream_info))
(defcfun ("CryptMsgDuplicate" crypt-msg-duplicate :convention :stdcall) hcryptmsg  (|hCryptMsg| hcryptmsg))
(defcfun ("CryptMsgClose" crypt-msg-close :convention :stdcall) winbool  (|hCryptMsg| hcryptmsg))
(defcfun ("CryptMsgUpdate" crypt-msg-update :convention :stdcall) winbool  (|hCryptMsg| hcryptmsg) (|pbData| :pointer) (|cbData| dword) (|fFinal| winbool))
(defcfun ("CryptMsgGetParam" crypt-msg-get-param :convention :stdcall) winbool  (|hCryptMsg| hcryptmsg) (|dwParamType| dword) (|dwIndex| dword) (|pvData| :pointer) (|pcbData| :pointer))
(defcfun ("CryptMsgControl" crypt-msg-control :convention :stdcall) winbool  (|hCryptMsg| hcryptmsg) (|dwFlags| dword) (|dwCtrlType| dword) (|pvCtrlPara| :pointer))
(defcfun ("CryptMsgVerifyCountersignatureEncoded" crypt-msg-verify-countersignature-encoded :convention :stdcall) winbool  (|hCryptProv| hcryptprov) (|dwEncodingType| dword) (|pbSignerInfo| pbyte) (|cbSignerInfo| dword) (|pbSignerInfoCountersignature| pbyte) (|cbSignerInfoCountersignature| dword) (|pciCountersigner| pcert_info))
(defcfun ("CryptMsgVerifyCountersignatureEncodedEx" crypt-msg-verify-countersignature-encoded-ex :convention :stdcall) winbool  (|hCryptProv| hcryptprov) (|dwEncodingType| dword) (|pbSignerInfo| pbyte) (|cbSignerInfo| dword) (|pbSignerInfoCountersignature| pbyte) (|cbSignerInfoCountersignature| dword) (|dwSignerType| dword) (|pvSigner| :pointer) (|dwFlags| dword) (|pvReserved| :pointer))
(defcfun ("CryptMsgCountersign" crypt-msg-countersign :convention :stdcall) winbool  (|hCryptMsg| hcryptmsg) (|dwIndex| dword) (|cCountersigners| dword) (|rgCountersigners| pcmsg_signer_encode_info))
(defcfun ("CryptMsgCountersignEncoded" crypt-msg-countersign-encoded :convention :stdcall) winbool  (|dwEncodingType| dword) (|pbSignerInfo| pbyte) (|cbSignerInfo| dword) (|cCountersigners| dword) (|rgCountersigners| pcmsg_signer_encode_info) (|pbCountersignature| pbyte) (|pcbCountersignature| pdword))
(defcfun ("CertOpenStore" cert-open-store :convention :stdcall) hcertstore  (|lpszStoreProvider| lpcstr) (|dwEncodingType| dword) (|hCryptProv| hcryptprov) (|dwFlags| dword) (|pvPara| :pointer))
(defcfun ("CertDuplicateStore" cert-duplicate-store :convention :stdcall) hcertstore  (|hCertStore| hcertstore))
(defcfun ("CertSaveStore" cert-save-store :convention :stdcall) winbool  (|hCertStore| hcertstore) (|dwEncodingType| dword) (|dwSaveAs| dword) (|dwSaveTo| dword) (|pvSaveToPara| :pointer) (|dwFlags| dword))
(defcfun ("CertCloseStore" cert-close-store :convention :stdcall) winbool  (|hCertStore| hcertstore) (|dwFlags| dword))
(defcfun ("CertGetSubjectCertificateFromStore" cert-get-subject-certificate-from-store :convention :stdcall) pccert_context  (|hCertStore| hcertstore) (|dwCertEncodingType| dword) (|pCertId| pcert_info))
(defcfun ("CertEnumCertificatesInStore" cert-enum-certificates-in-store :convention :stdcall) pccert_context  (|hCertStore| hcertstore) (|pPrevCertContext| pccert_context))
(defcfun ("CertFindCertificateInStore" cert-find-certificate-in-store :convention :stdcall) pccert_context  (|hCertStore| hcertstore) (|dwCertEncodingType| dword) (|dwFindFlags| dword) (|dwFindType| dword) (|pvFindPara| :pointer) (|pPrevCertContext| pccert_context))
(defcfun ("CertGetIssuerCertificateFromStore" cert-get-issuer-certificate-from-store :convention :stdcall) pccert_context  (|hCertStore| hcertstore) (|pSubjectContext| pccert_context) (|pPrevIssuerContext| pccert_context) (|pdwFlags| :pointer))
(defcfun ("CertVerifySubjectCertificateContext" cert-verify-subject-certificate-context :convention :stdcall) winbool  (|pSubject| pccert_context) (|pIssuer| pccert_context) (|pdwFlags| :pointer))
(defcfun ("CertDuplicateCertificateContext" cert-duplicate-certificate-context :convention :stdcall) pccert_context  (|pCertContext| pccert_context))
(defcfun ("CertCreateCertificateContext" cert-create-certificate-context :convention :stdcall) pccert_context  (|dwCertEncodingType| dword) (|pbCertEncoded| :pointer) (|cbCertEncoded| dword))
(defcfun ("CertFreeCertificateContext" cert-free-certificate-context :convention :stdcall) winbool  (|pCertContext| pccert_context))
(defcfun ("CertSetCertificateContextProperty" cert-set-certificate-context-property :convention :stdcall) winbool  (|pCertContext| pccert_context) (|dwPropId| dword) (|dwFlags| dword) (|pvData| :pointer))
(defcfun ("CertGetCertificateContextProperty" cert-get-certificate-context-property :convention :stdcall) winbool  (|pCertContext| pccert_context) (|dwPropId| dword) (|pvData| :pointer) (|pcbData| :pointer))
(defcfun ("CertEnumCertificateContextProperties" cert-enum-certificate-context-properties :convention :stdcall) dword  (|pCertContext| pccert_context) (|dwPropId| dword))
(defcfun ("CertCreateCTLEntryFromCertificateContextProperties" cert-create-ctl-entry-from-certificate-context-properties :convention :stdcall) winbool  (|pCertContext| pccert_context) (|cOptAttr| dword) (|rgOptAttr| pcrypt_attribute) (|dwFlags| dword) (|pvReserved| :pointer) (|pCtlEntry| pctl_entry) (|pcbCtlEntry| :pointer))
(defcfun ("CertSetCertificateContextPropertiesFromCTLEntry" cert-set-certificate-context-properties-from-ctl-entry :convention :stdcall) winbool  (|pCertContext| pccert_context) (|pCtlEntry| pctl_entry) (|dwFlags| dword))
(defcfun ("CertGetCRLFromStore" cert-get-crl-from-store :convention :stdcall) pccrl_context  (|hCertStore| hcertstore) (|pIssuerContext| pccert_context) (|pPrevCrlContext| pccrl_context) (|pdwFlags| :pointer))
(defcfun ("CertEnumCRLsInStore" cert-enum-cr-ls-in-store :convention :stdcall) pccrl_context  (|hCertStore| hcertstore) (|pPrevCrlContext| pccrl_context))
(defcfun ("CertFindCRLInStore" cert-find-crl-in-store :convention :stdcall) pccrl_context  (|hCertStore| hcertstore) (|dwCertEncodingType| dword) (|dwFindFlags| dword) (|dwFindType| dword) (|pvFindPara| :pointer) (|pPrevCrlContext| pccrl_context))
(defcfun ("CertDuplicateCRLContext" cert-duplicate-crl-context :convention :stdcall) pccrl_context  (|pCrlContext| pccrl_context))
(defcfun ("CertCreateCRLContext" cert-create-crl-context :convention :stdcall) pccrl_context  (|dwCertEncodingType| dword) (|pbCrlEncoded| :pointer) (|cbCrlEncoded| dword))
(defcfun ("CertFreeCRLContext" cert-free-crl-context :convention :stdcall) winbool  (|pCrlContext| pccrl_context))
(defcfun ("CertSetCRLContextProperty" cert-set-crl-context-property :convention :stdcall) winbool  (|pCrlContext| pccrl_context) (|dwPropId| dword) (|dwFlags| dword) (|pvData| :pointer))
(defcfun ("CertGetCRLContextProperty" cert-get-crl-context-property :convention :stdcall) winbool  (|pCrlContext| pccrl_context) (|dwPropId| dword) (|pvData| :pointer) (|pcbData| :pointer))
(defcfun ("CertEnumCRLContextProperties" cert-enum-crl-context-properties :convention :stdcall) dword  (|pCrlContext| pccrl_context) (|dwPropId| dword))
(defcfun ("CertFindCertificateInCRL" cert-find-certificate-in-crl :convention :stdcall) winbool  (|pCert| pccert_context) (|pCrlContext| pccrl_context) (|dwFlags| dword) (|pvReserved| :pointer) (|ppCrlEntry| :pointer))
(defcfun ("CertIsValidCRLForCertificate" cert-is-valid-crl-for-certificate :convention :stdcall) winbool  (|pCert| pccert_context) (|pCrl| pccrl_context) (|dwFlags| dword) (|pvReserved| :pointer))
(defcfun ("CertAddEncodedCertificateToStore" cert-add-encoded-certificate-to-store :convention :stdcall) winbool  (|hCertStore| hcertstore) (|dwCertEncodingType| dword) (|pbCertEncoded| :pointer) (|cbCertEncoded| dword) (|dwAddDisposition| dword) (|ppCertContext| :pointer))
(defcfun ("CertAddCertificateContextToStore" cert-add-certificate-context-to-store :convention :stdcall) winbool  (|hCertStore| hcertstore) (|pCertContext| pccert_context) (|dwAddDisposition| dword) (|ppStoreContext| :pointer))
(defcfun ("CertAddSerializedElementToStore" cert-add-serialized-element-to-store :convention :stdcall) winbool  (|hCertStore| hcertstore) (|pbElement| :pointer) (|cbElement| dword) (|dwAddDisposition| dword) (|dwFlags| dword) (|dwContextTypeFlags| dword) (|pdwContextType| :pointer) (|ppvContext| :pointer))
(defcfun ("CertDeleteCertificateFromStore" cert-delete-certificate-from-store :convention :stdcall) winbool  (|pCertContext| pccert_context))
(defcfun ("CertAddEncodedCRLToStore" cert-add-encoded-crl-to-store :convention :stdcall) winbool  (|hCertStore| hcertstore) (|dwCertEncodingType| dword) (|pbCrlEncoded| :pointer) (|cbCrlEncoded| dword) (|dwAddDisposition| dword) (|ppCrlContext| :pointer))
(defcfun ("CertAddCRLContextToStore" cert-add-crl-context-to-store :convention :stdcall) winbool  (|hCertStore| hcertstore) (|pCrlContext| pccrl_context) (|dwAddDisposition| dword) (|ppStoreContext| :pointer))
(defcfun ("CertDeleteCRLFromStore" cert-delete-crl-from-store :convention :stdcall) winbool  (|pCrlContext| pccrl_context))
(defcfun ("CertSerializeCertificateStoreElement" cert-serialize-certificate-store-element :convention :stdcall) winbool  (|pCertContext| pccert_context) (|dwFlags| dword) (|pbElement| :pointer) (|pcbElement| :pointer))
(defcfun ("CertSerializeCRLStoreElement" cert-serialize-crl-store-element :convention :stdcall) winbool  (|pCrlContext| pccrl_context) (|dwFlags| dword) (|pbElement| :pointer) (|pcbElement| :pointer))
(defcfun ("CertDuplicateCTLContext" cert-duplicate-ctl-context :convention :stdcall) pcctl_context  (|pCtlContext| pcctl_context))
(defcfun ("CertCreateCTLContext" cert-create-ctl-context :convention :stdcall) pcctl_context  (|dwMsgAndCertEncodingType| dword) (|pbCtlEncoded| :pointer) (|cbCtlEncoded| dword))
(defcfun ("CertFreeCTLContext" cert-free-ctl-context :convention :stdcall) winbool  (|pCtlContext| pcctl_context))
(defcfun ("CertSetCTLContextProperty" cert-set-ctl-context-property :convention :stdcall) winbool  (|pCtlContext| pcctl_context) (|dwPropId| dword) (|dwFlags| dword) (|pvData| :pointer))
(defcfun ("CertGetCTLContextProperty" cert-get-ctl-context-property :convention :stdcall) winbool  (|pCtlContext| pcctl_context) (|dwPropId| dword) (|pvData| :pointer) (|pcbData| :pointer))
(defcfun ("CertEnumCTLContextProperties" cert-enum-ctl-context-properties :convention :stdcall) dword  (|pCtlContext| pcctl_context) (|dwPropId| dword))
(defcfun ("CertEnumCTLsInStore" cert-enum-ct-ls-in-store :convention :stdcall) pcctl_context  (|hCertStore| hcertstore) (|pPrevCtlContext| pcctl_context))
(defcfun ("CertFindSubjectInCTL" cert-find-subject-in-ctl :convention :stdcall) pctl_entry  (|dwEncodingType| dword) (|dwSubjectType| dword) (|pvSubject| :pointer) (|pCtlContext| pcctl_context) (|dwFlags| dword))
(defcfun ("CertFindCTLInStore" cert-find-ctl-in-store :convention :stdcall) pcctl_context  (|hCertStore| hcertstore) (|dwMsgAndCertEncodingType| dword) (|dwFindFlags| dword) (|dwFindType| dword) (|pvFindPara| :pointer) (|pPrevCtlContext| pcctl_context))
(defcfun ("CertAddEncodedCTLToStore" cert-add-encoded-ctl-to-store :convention :stdcall) winbool  (|hCertStore| hcertstore) (|dwMsgAndCertEncodingType| dword) (|pbCtlEncoded| :pointer) (|cbCtlEncoded| dword) (|dwAddDisposition| dword) (|ppCtlContext| :pointer))
(defcfun ("CertAddCTLContextToStore" cert-add-ctl-context-to-store :convention :stdcall) winbool  (|hCertStore| hcertstore) (|pCtlContext| pcctl_context) (|dwAddDisposition| dword) (|ppStoreContext| :pointer))
(defcfun ("CertSerializeCTLStoreElement" cert-serialize-ctl-store-element :convention :stdcall) winbool  (|pCtlContext| pcctl_context) (|dwFlags| dword) (|pbElement| :pointer) (|pcbElement| :pointer))
(defcfun ("CertDeleteCTLFromStore" cert-delete-ctl-from-store :convention :stdcall) winbool  (|pCtlContext| pcctl_context))
(defcfun ("CertAddCertificateLinkToStore" cert-add-certificate-link-to-store :convention :stdcall) winbool  (|hCertStore| hcertstore) (|pCertContext| pccert_context) (|dwAddDisposition| dword) (|ppStoreContext| :pointer))
(defcfun ("CertAddCRLLinkToStore" cert-add-crl-link-to-store :convention :stdcall) winbool  (|hCertStore| hcertstore) (|pCrlContext| pccrl_context) (|dwAddDisposition| dword) (|ppStoreContext| :pointer))
(defcfun ("CertAddCTLLinkToStore" cert-add-ctl-link-to-store :convention :stdcall) winbool  (|hCertStore| hcertstore) (|pCtlContext| pcctl_context) (|dwAddDisposition| dword) (|ppStoreContext| :pointer))
(defcfun ("CertAddStoreToCollection" cert-add-store-to-collection :convention :stdcall) winbool  (|hCollectionStore| hcertstore) (|hSiblingStore| hcertstore) (|dwUpdateFlags| dword) (|dwPriority| dword))
(defcfun ("CertRemoveStoreFromCollection" cert-remove-store-from-collection :convention :stdcall) :void  (|hCollectionStore| hcertstore) (|hSiblingStore| hcertstore))
(defcfun ("CertControlStore" cert-control-store :convention :stdcall) winbool  (|hCertStore| hcertstore) (|dwFlags| dword) (|dwCtrlType| dword) (|pvCtrlPara| :pointer))
(defcfun ("CertSetStoreProperty" cert-set-store-property :convention :stdcall) winbool  (|hCertStore| hcertstore) (|dwPropId| dword) (|dwFlags| dword) (|pvData| :pointer))
(defcfun ("CertGetStoreProperty" cert-get-store-property :convention :stdcall) winbool  (|hCertStore| hcertstore) (|dwPropId| dword) (|pvData| :pointer) (|pcbData| :pointer))
(defcfun ("CertCreateContext" cert-create-context :convention :stdcall) :pointer  (|dwContextType| dword) (|dwEncodingType| dword) (|pbEncoded| :pointer) (|cbEncoded| dword) (|dwFlags| dword) (|pCreatePara| pcert_create_context_para))
(defcfun ("CertRegisterSystemStore" cert-register-system-store :convention :stdcall) winbool  (|pvSystemStore| :pointer) (|dwFlags| dword) (|pStoreInfo| pcert_system_store_info) (|pvReserved| :pointer))
(defcfun ("CertRegisterPhysicalStore" cert-register-physical-store :convention :stdcall) winbool  (|pvSystemStore| :pointer) (|dwFlags| dword) (|pwszStoreName| lpcwstr) (|pStoreInfo| pcert_physical_store_info) (|pvReserved| :pointer))
(defcfun ("CertUnregisterSystemStore" cert-unregister-system-store :convention :stdcall) winbool  (|pvSystemStore| :pointer) (|dwFlags| dword))
(defcfun ("CertUnregisterPhysicalStore" cert-unregister-physical-store :convention :stdcall) winbool  (|pvSystemStore| :pointer) (|dwFlags| dword) (|pwszStoreName| lpcwstr))
(defcfun ("CertEnumSystemStoreLocation" cert-enum-system-store-location :convention :stdcall) winbool  (|dwFlags| dword) (|pvArg| :pointer) (|pfnEnum| pfn_cert_enum_system_store_location))
(defcfun ("CertEnumSystemStore" cert-enum-system-store :convention :stdcall) winbool  (|dwFlags| dword) (|pvSystemStoreLocationPara| :pointer) (|pvArg| :pointer) (|pfnEnum| pfn_cert_enum_system_store))
(defcfun ("CertEnumPhysicalStore" cert-enum-physical-store :convention :stdcall) winbool  (|pvSystemStore| :pointer) (|dwFlags| dword) (|pvArg| :pointer) (|pfnEnum| pfn_cert_enum_physical_store))
(defcfun ("CertGetEnhancedKeyUsage" cert-get-enhanced-key-usage :convention :stdcall) winbool  (|pCertContext| pccert_context) (|dwFlags| dword) (|pUsage| pcert_enhkey_usage) (|pcbUsage| :pointer))
(defcfun ("CertSetEnhancedKeyUsage" cert-set-enhanced-key-usage :convention :stdcall) winbool  (|pCertContext| pccert_context) (|pUsage| pcert_enhkey_usage))
(defcfun ("CertAddEnhancedKeyUsageIdentifier" cert-add-enhanced-key-usage-identifier :convention :stdcall) winbool  (|pCertContext| pccert_context) (|pszUsageIdentifier| lpcstr))
(defcfun ("CertRemoveEnhancedKeyUsageIdentifier" cert-remove-enhanced-key-usage-identifier :convention :stdcall) winbool  (|pCertContext| pccert_context) (|pszUsageIdentifier| lpcstr))
(defcfun ("CertGetValidUsages" cert-get-valid-usages :convention :stdcall) winbool  (|cCerts| dword) (|rghCerts| :pointer) (|cNumOIDs| :pointer) (|rghOIDs| :pointer) (|pcbOIDs| :pointer))
(defcfun ("CryptMsgGetAndVerifySigner" crypt-msg-get-and-verify-signer :convention :stdcall) winbool  (|hCryptMsg| hcryptmsg) (|cSignerStore| dword) (|rghSignerStore| :pointer) (|dwFlags| dword) (|ppSigner| :pointer) (|pdwSignerIndex| :pointer))
(defcfun ("CryptMsgSignCTL" crypt-msg-sign-ctl :convention :stdcall) winbool  (|dwMsgEncodingType| dword) (|pbCtlContent| :pointer) (|cbCtlContent| dword) (|pSignInfo| pcmsg_signed_encode_info) (|dwFlags| dword) (|pbEncoded| :pointer) (|pcbEncoded| :pointer))
(defcfun ("CryptMsgEncodeAndSignCTL" crypt-msg-encode-and-sign-ctl :convention :stdcall) winbool  (|dwMsgEncodingType| dword) (|pCtlInfo| pctl_info) (|pSignInfo| pcmsg_signed_encode_info) (|dwFlags| dword) (|pbEncoded| :pointer) (|pcbEncoded| :pointer))
(defcfun ("CertFindSubjectInSortedCTL" cert-find-subject-in-sorted-ctl :convention :stdcall) winbool  (|pSubjectIdentifier| pcrypt_data_blob) (|pCtlContext| pcctl_context) (|dwFlags| dword) (|pvReserved| :pointer) (|pEncodedAttributes| pcrypt_der_blob))
(defcfun ("CertEnumSubjectInSortedCTL" cert-enum-subject-in-sorted-ctl :convention :stdcall) winbool  (|pCtlContext| pcctl_context) (|ppvNextSubject| :pointer) (|pSubjectIdentifier| pcrypt_der_blob) (|pEncodedAttributes| pcrypt_der_blob))
(defcfun ("CertVerifyCTLUsage" cert-verify-ctl-usage :convention :stdcall) winbool  (|dwEncodingType| dword) (|dwSubjectType| dword) (|pvSubject| :pointer) (|pSubjectUsage| pctl_usage) (|dwFlags| dword) (|pVerifyUsagePara| pctl_verify_usage_para) (|pVerifyUsageStatus| pctl_verify_usage_status))
(defcfun ("CertVerifyRevocation" cert-verify-revocation :convention :stdcall) winbool  (|dwEncodingType| dword) (|dwRevType| dword) (|cContext| dword) (|rgpvContext| :pointer) (|dwFlags| dword) (|pRevPara| pcert_revocation_para) (|pRevStatus| pcert_revocation_status))
(defcfun ("CertCompareIntegerBlob" cert-compare-integer-blob :convention :stdcall) winbool  (|pInt1| pcrypt_integer_blob) (|pInt2| pcrypt_integer_blob))
(defcfun ("CertCompareCertificate" cert-compare-certificate :convention :stdcall) winbool  (|dwCertEncodingType| dword) (|pCertId1| pcert_info) (|pCertId2| pcert_info))
(defcfun ("CertCompareCertificateName" cert-compare-certificate-name :convention :stdcall) winbool  (|dwCertEncodingType| dword) (|pCertName1| pcert_name_blob) (|pCertName2| pcert_name_blob))
(defcfun ("CertIsRDNAttrsInCertificateName" cert-is-rdn-attrs-in-certificate-name :convention :stdcall) winbool  (|dwCertEncodingType| dword) (|dwFlags| dword) (|pCertName| pcert_name_blob) (|pRDN| pcert_rdn))
(defcfun ("CertComparePublicKeyInfo" cert-compare-public-key-info :convention :stdcall) winbool  (|dwCertEncodingType| dword) (|pPublicKey1| pcert_public_key_info) (|pPublicKey2| pcert_public_key_info))
(defcfun ("CertGetPublicKeyLength" cert-get-public-key-length :convention :stdcall) dword  (|dwCertEncodingType| dword) (|pPublicKey| pcert_public_key_info))
(defcfun ("CryptVerifyCertificateSignature" crypt-verify-certificate-signature :convention :stdcall) winbool  (|hCryptProv| hcryptprov) (|dwCertEncodingType| dword) (|pbEncoded| :pointer) (|cbEncoded| dword) (|pPublicKey| pcert_public_key_info))
(defcfun ("CryptVerifyCertificateSignatureEx" crypt-verify-certificate-signature-ex :convention :stdcall) winbool  (|hCryptProv| hcryptprov) (|dwCertEncodingType| dword) (|dwSubjectType| dword) (|pvSubject| :pointer) (|dwIssuerType| dword) (|pvIssuer| :pointer) (|dwFlags| dword) (|pvReserved| :pointer))
(defcfun ("CryptHashToBeSigned" crypt-hash-to-be-signed :convention :stdcall) winbool  (|hCryptProv| hcryptprov) (|dwCertEncodingType| dword) (|pbEncoded| :pointer) (|cbEncoded| dword) (|pbComputedHash| :pointer) (|pcbComputedHash| :pointer))
(defcfun ("CryptHashCertificate" crypt-hash-certificate :convention :stdcall) winbool  (|hCryptProv| hcryptprov) (|Algid| alg_id) (|dwFlags| dword) (|pbEncoded| :pointer) (|cbEncoded| dword) (|pbComputedHash| :pointer) (|pcbComputedHash| :pointer))
(defcfun ("CryptSignCertificate" crypt-sign-certificate :convention :stdcall) winbool  (|hCryptProv| hcryptprov) (|dwKeySpec| dword) (|dwCertEncodingType| dword) (|pbEncodedToBeSigned| :pointer) (|cbEncodedToBeSigned| dword) (|pSignatureAlgorithm| pcrypt_algorithm_identifier) (|pvHashAuxInfo| :pointer) (|pbSignature| :pointer) (|pcbSignature| :pointer))
(defcfun ("CryptSignAndEncodeCertificate" crypt-sign-and-encode-certificate :convention :stdcall) winbool  (|hCryptProv| hcryptprov) (|dwKeySpec| dword) (|dwCertEncodingType| dword) (|lpszStructType| lpcstr) (|pvStructInfo| :pointer) (|pSignatureAlgorithm| pcrypt_algorithm_identifier) (|pvHashAuxInfo| :pointer) (|pbEncoded| pbyte) (|pcbEncoded| :pointer))
(defcfun ("CertVerifyTimeValidity" cert-verify-time-validity :convention :stdcall) long  (|pTimeToVerify| lpfiletime) (|pCertInfo| pcert_info))
(defcfun ("CertVerifyCRLTimeValidity" cert-verify-crl-time-validity :convention :stdcall) long  (|pTimeToVerify| lpfiletime) (|pCrlInfo| pcrl_info))
(defcfun ("CertVerifyValidityNesting" cert-verify-validity-nesting :convention :stdcall) winbool  (|pSubjectInfo| pcert_info) (|pIssuerInfo| pcert_info))
(defcfun ("CertVerifyCRLRevocation" cert-verify-crl-revocation :convention :stdcall) winbool  (|dwCertEncodingType| dword) (|pCertId| pcert_info) (|cCrlInfo| dword) (|rgpCrlInfo| :pointer))
(defcfun ("CertAlgIdToOID" cert-alg-id-to-oid :convention :stdcall) lpcstr  (|dwAlgId| dword))
(defcfun ("CertOIDToAlgId" cert-oid-to-alg-id :convention :stdcall) dword  (|pszObjId| lpcstr))
(defcfun ("CertFindExtension" cert-find-extension :convention :stdcall) pcert_extension  (|pszObjId| lpcstr) (|cExtensions| dword) (|rgExtensions| :pointer))
(defcfun ("CertFindAttribute" cert-find-attribute :convention :stdcall) pcrypt_attribute  (|pszObjId| lpcstr) (|cAttr| dword) (|rgAttr| :pointer))
(defcfun ("CertFindRDNAttr" cert-find-rdn-attr :convention :stdcall) pcert_rdn_attr  (|pszObjId| lpcstr) (|pName| pcert_name_info))
(defcfun ("CertGetIntendedKeyUsage" cert-get-intended-key-usage :convention :stdcall) winbool  (|dwCertEncodingType| dword) (|pCertInfo| pcert_info) (|pbKeyUsage| :pointer) (|cbKeyUsage| dword))
(defcfun ("CryptInstallDefaultContext" crypt-install-default-context :convention :stdcall) winbool  (|hCryptProv| hcryptprov) (|dwDefaultType| dword) (|pvDefaultPara| :pointer) (|dwFlags| dword) (|pvReserved| :pointer) (|phDefaultContext| :pointer))
(defcfun ("CryptUninstallDefaultContext" crypt-uninstall-default-context :convention :stdcall) winbool  (|hDefaultContext| hcryptdefaultcontext) (|dwFlags| dword) (|pvReserved| :pointer))
(defcfun ("CryptExportPublicKeyInfo" crypt-export-public-key-info :convention :stdcall) winbool  (|hCryptProv| hcryptprov) (|dwKeySpec| dword) (|dwCertEncodingType| dword) (|pInfo| pcert_public_key_info) (|pcbInfo| :pointer))
(defcfun ("CryptExportPublicKeyInfoEx" crypt-export-public-key-info-ex :convention :stdcall) winbool  (|hCryptProv| hcryptprov) (|dwKeySpec| dword) (|dwCertEncodingType| dword) (|pszPublicKeyObjId| lpstr) (|dwFlags| dword) (|pvAuxInfo| :pointer) (|pInfo| pcert_public_key_info) (|pcbInfo| :pointer))
(defcfun ("CryptImportPublicKeyInfo" crypt-import-public-key-info :convention :stdcall) winbool  (|hCryptProv| hcryptprov) (|dwCertEncodingType| dword) (|pInfo| pcert_public_key_info) (|phKey| :pointer))
(defcfun ("CryptImportPublicKeyInfoEx" crypt-import-public-key-info-ex :convention :stdcall) winbool  (|hCryptProv| hcryptprov) (|dwCertEncodingType| dword) (|pInfo| pcert_public_key_info) (|aiKeyAlg| alg_id) (|dwFlags| dword) (|pvAuxInfo| :pointer) (|phKey| :pointer))
(defcfun ("CryptAcquireCertificatePrivateKey" crypt-acquire-certificate-private-key :convention :stdcall) winbool  (|pCert| pccert_context) (|dwFlags| dword) (|pvReserved| :pointer) (|phCryptProv| :pointer) (|pdwKeySpec| :pointer) (|pfCallerFreeProv| :pointer))
(defcfun ("CryptFindCertificateKeyProvInfo" crypt-find-certificate-key-prov-info :convention :stdcall) winbool  (|pCert| pccert_context) (|dwFlags| dword) (|pvReserved| :pointer))
(defcfun ("CryptImportPKCS8" crypt-import-pkcs-8 :convention :stdcall) winbool  (|sImportParams| crypt_pkcs8_import_params) (|dwFlags| dword) (|phCryptProv| :pointer) (|pvAuxInfo| :pointer))
(defcfun ("CryptExportPKCS8" crypt-export-pkcs-8 :convention :stdcall) winbool  (|hCryptProv| hcryptprov) (|dwKeySpec| dword) (|pszPrivateKeyObjId| lpstr) (|dwFlags| dword) (|pvAuxInfo| :pointer) (|pbPrivateKeyBlob| :pointer) (|pcbPrivateKeyBlob| :pointer))
(defcfun ("CryptExportPKCS8Ex" crypt-export-pkcs-8-ex :convention :stdcall) winbool  (|psExportParams| :pointer) (|dwFlags| dword) (|pvAuxInfo| :pointer) (|pbPrivateKeyBlob| :pointer) (|pcbPrivateKeyBlob| :pointer))
(defcfun ("CryptHashPublicKeyInfo" crypt-hash-public-key-info :convention :stdcall) winbool  (|hCryptProv| hcryptprov) (|Algid| alg_id) (|dwFlags| dword) (|dwCertEncodingType| dword) (|pInfo| pcert_public_key_info) (|pbComputedHash| :pointer) (|pcbComputedHash| :pointer))
(defcfun ("CertRDNValueToStrA" cert-rdn-value-to-str-a :convention :stdcall) dword  (|dwValueType| dword) (|pValue| pcert_rdn_value_blob) (|psz| lpstr) (|csz| dword))
(defcfun ("CertRDNValueToStrW" cert-rdn-value-to-str-w :convention :stdcall) dword  (|dwValueType| dword) (|pValue| pcert_rdn_value_blob) (|psz| lpwstr) (|csz| dword))
(defcfun ("CertNameToStrA" cert-name-to-str-a :convention :stdcall) dword  (|dwCertEncodingType| dword) (|pName| pcert_name_blob) (|dwStrType| dword) (|psz| lpstr) (|csz| dword))
(defcfun ("CertNameToStrW" cert-name-to-str-w :convention :stdcall) dword  (|dwCertEncodingType| dword) (|pName| pcert_name_blob) (|dwStrType| dword) (|psz| lpwstr) (|csz| dword))
(defcfun ("CertStrToNameA" cert-str-to-name-a :convention :stdcall) winbool  (|dwCertEncodingType| dword) (|pszX500| lpcstr) (|dwStrType| dword) (|pvReserved| :pointer) (|pbEncoded| :pointer) (|pcbEncoded| :pointer) (|ppszError| :pointer))
(defcfun ("CertStrToNameW" cert-str-to-name-w :convention :stdcall) winbool  (|dwCertEncodingType| dword) (|pszX500| lpcwstr) (|dwStrType| dword) (|pvReserved| :pointer) (|pbEncoded| :pointer) (|pcbEncoded| :pointer) (|ppszError| :pointer))
(defcfun ("CertGetNameStringA" cert-get-name-string-a :convention :stdcall) dword  (|pCertContext| pccert_context) (|dwType| dword) (|dwFlags| dword) (|pvTypePara| :pointer) (|pszNameString| lpstr) (|cchNameString| dword))
(defcfun ("CertGetNameStringW" cert-get-name-string-w :convention :stdcall) dword  (|pCertContext| pccert_context) (|dwType| dword) (|dwFlags| dword) (|pvTypePara| :pointer) (|pszNameString| lpwstr) (|cchNameString| dword))
(defcfun ("CryptSignMessage" crypt-sign-message :convention :stdcall) winbool  (|pSignPara| pcrypt_sign_message_para) (|fDetachedSignature| winbool) (|cToBeSigned| dword) (|rgpbToBeSigned| :pointer) (|rgcbToBeSigned| :pointer) (|pbSignedBlob| :pointer) (|pcbSignedBlob| :pointer))
(defcfun ("CryptVerifyMessageSignature" crypt-verify-message-signature :convention :stdcall) winbool  (|pVerifyPara| pcrypt_verify_message_para) (|dwSignerIndex| dword) (|pbSignedBlob| :pointer) (|cbSignedBlob| dword) (|pbDecoded| :pointer) (|pcbDecoded| :pointer) (|ppSignerCert| :pointer))
(defcfun ("CryptGetMessageSignerCount" crypt-get-message-signer-count :convention :stdcall) long  (|dwMsgEncodingType| dword) (|pbSignedBlob| :pointer) (|cbSignedBlob| dword))
(defcfun ("CryptGetMessageCertificates" crypt-get-message-certificates :convention :stdcall) hcertstore  (|dwMsgAndCertEncodingType| dword) (|hCryptProv| hcryptprov) (|dwFlags| dword) (|pbSignedBlob| :pointer) (|cbSignedBlob| dword))
(defcfun ("CryptVerifyDetachedMessageSignature" crypt-verify-detached-message-signature :convention :stdcall) winbool  (|pVerifyPara| pcrypt_verify_message_para) (|dwSignerIndex| dword) (|pbDetachedSignBlob| :pointer) (|cbDetachedSignBlob| dword) (|cToBeSigned| dword) (|rgpbToBeSigned| :pointer) (|rgcbToBeSigned| :pointer) (|ppSignerCert| :pointer))
(defcfun ("CryptEncryptMessage" crypt-encrypt-message :convention :stdcall) winbool  (|pEncryptPara| pcrypt_encrypt_message_para) (|cRecipientCert| dword) (|rgpRecipientCert| :pointer) (|pbToBeEncrypted| :pointer) (|cbToBeEncrypted| dword) (|pbEncryptedBlob| :pointer) (|pcbEncryptedBlob| :pointer))
(defcfun ("CryptDecryptMessage" crypt-decrypt-message :convention :stdcall) winbool  (|pDecryptPara| pcrypt_decrypt_message_para) (|pbEncryptedBlob| :pointer) (|cbEncryptedBlob| dword) (|pbDecrypted| :pointer) (|pcbDecrypted| :pointer) (|ppXchgCert| :pointer))
(defcfun ("CryptSignAndEncryptMessage" crypt-sign-and-encrypt-message :convention :stdcall) winbool  (|pSignPara| pcrypt_sign_message_para) (|pEncryptPara| pcrypt_encrypt_message_para) (|cRecipientCert| dword) (|rgpRecipientCert| :pointer) (|pbToBeSignedAndEncrypted| :pointer) (|cbToBeSignedAndEncrypted| dword) (|pbSignedAndEncryptedBlob| :pointer) (|pcbSignedAndEncryptedBlob| :pointer))
(defcfun ("CryptDecryptAndVerifyMessageSignature" crypt-decrypt-and-verify-message-signature :convention :stdcall) winbool  (|pDecryptPara| pcrypt_decrypt_message_para) (|pVerifyPara| pcrypt_verify_message_para) (|dwSignerIndex| dword) (|pbEncryptedBlob| :pointer) (|cbEncryptedBlob| dword) (|pbDecrypted| :pointer) (|pcbDecrypted| :pointer) (|ppXchgCert| :pointer) (|ppSignerCert| :pointer))
(defcfun ("CryptDecodeMessage" crypt-decode-message :convention :stdcall) winbool  (|dwMsgTypeFlags| dword) (|pDecryptPara| pcrypt_decrypt_message_para) (|pVerifyPara| pcrypt_verify_message_para) (|dwSignerIndex| dword) (|pbEncodedBlob| :pointer) (|cbEncodedBlob| dword) (|dwPrevInnerContentType| dword) (|pdwMsgType| :pointer) (|pdwInnerContentType| :pointer) (|pbDecoded| :pointer) (|pcbDecoded| :pointer) (|ppXchgCert| :pointer) (|ppSignerCert| :pointer))
(defcfun ("CryptHashMessage" crypt-hash-message :convention :stdcall) winbool  (|pHashPara| pcrypt_hash_message_para) (|fDetachedHash| winbool) (|cToBeHashed| dword) (|rgpbToBeHashed| :pointer) (|rgcbToBeHashed| :pointer) (|pbHashedBlob| :pointer) (|pcbHashedBlob| :pointer) (|pbComputedHash| :pointer) (|pcbComputedHash| :pointer))
(defcfun ("CryptVerifyMessageHash" crypt-verify-message-hash :convention :stdcall) winbool  (|pHashPara| pcrypt_hash_message_para) (|pbHashedBlob| :pointer) (|cbHashedBlob| dword) (|pbToBeHashed| :pointer) (|pcbToBeHashed| :pointer) (|pbComputedHash| :pointer) (|pcbComputedHash| :pointer))
(defcfun ("CryptVerifyDetachedMessageHash" crypt-verify-detached-message-hash :convention :stdcall) winbool  (|pHashPara| pcrypt_hash_message_para) (|pbDetachedHashBlob| :pointer) (|cbDetachedHashBlob| dword) (|cToBeHashed| dword) (|rgpbToBeHashed| :pointer) (|rgcbToBeHashed| :pointer) (|pbComputedHash| :pointer) (|pcbComputedHash| :pointer))
(defcfun ("CryptSignMessageWithKey" crypt-sign-message-with-key :convention :stdcall) winbool  (|pSignPara| pcrypt_key_sign_message_para) (|pbToBeSigned| :pointer) (|cbToBeSigned| dword) (|pbSignedBlob| :pointer) (|pcbSignedBlob| :pointer))
(defcfun ("CryptVerifyMessageSignatureWithKey" crypt-verify-message-signature-with-key :convention :stdcall) winbool  (|pVerifyPara| pcrypt_key_verify_message_para) (|pPublicKeyInfo| pcert_public_key_info) (|pbSignedBlob| :pointer) (|cbSignedBlob| dword) (|pbDecoded| :pointer) (|pcbDecoded| :pointer))
(defcfun ("CertOpenSystemStoreA" cert-open-system-store-a :convention :stdcall) hcertstore  (|hProv| hcryptprov) (|szSubsystemProtocol| lpcstr))
(defcfun ("CertOpenSystemStoreW" cert-open-system-store-w :convention :stdcall) hcertstore  (|hProv| hcryptprov) (|szSubsystemProtocol| lpcwstr))
(defcfun ("CertAddEncodedCertificateToSystemStoreA" cert-add-encoded-certificate-to-system-store-a :convention :stdcall) winbool  (|szCertStoreName| lpcstr) (|pbCertEncoded| :pointer) (|cbCertEncoded| dword))
(defcfun ("CertAddEncodedCertificateToSystemStoreW" cert-add-encoded-certificate-to-system-store-w :convention :stdcall) winbool  (|szCertStoreName| lpcwstr) (|pbCertEncoded| :pointer) (|cbCertEncoded| dword))
(defcfun ("FindCertsByIssuer" find-certs-by-issuer :convention :stdcall) hresult  (|pCertChains| pcert_chain) (|pcbCertChains| :pointer) (|pcCertChains| :pointer) (|pbEncodedIssuerName| :pointer) (|cbEncodedIssuerName| dword) (|pwszPurpose| lpcwstr) (|dwKeySpec| dword))
(defcfun ("CryptQueryObject" crypt-query-object :convention :stdcall) winbool  (|dwObjectType| dword) (|pvObject| :pointer) (|dwExpectedContentTypeFlags| dword) (|dwExpectedFormatTypeFlags| dword) (|dwFlags| dword) (|pdwMsgAndCertEncodingType| :pointer) (|pdwContentType| :pointer) (|pdwFormatType| :pointer) (|phCertStore| :pointer) (|phMsg| :pointer) (|ppvContext| :pointer))
(defcfun ("CryptMemAlloc" crypt-mem-alloc :convention :stdcall) lpvoid  (|cbSize| ulong))
(defcfun ("CryptMemRealloc" crypt-mem-realloc :convention :stdcall) lpvoid  (|pv| lpvoid) (|cbSize| ulong))
(defcfun ("CryptMemFree" crypt-mem-free :convention :stdcall) :void  (|pv| lpvoid))
(defcfun ("CryptCreateAsyncHandle" crypt-create-async-handle :convention :stdcall) winbool  (|dwFlags| dword) (|phAsync| phcryptasync))
(defcfun ("CryptSetAsyncParam" crypt-set-async-param :convention :stdcall) winbool  (|hAsync| hcryptasync) (|pszParamOid| lpstr) (|pvParam| lpvoid) (|pfnFree| pfn_crypt_async_param_free_func))
(defcfun ("CryptGetAsyncParam" crypt-get-async-param :convention :stdcall) winbool  (|hAsync| hcryptasync) (|pszParamOid| lpstr) (|ppvParam| :pointer) (|ppfnFree| :pointer))
(defcfun ("CryptCloseAsyncHandle" crypt-close-async-handle :convention :stdcall) winbool  (|hAsync| hcryptasync))
(defcfun ("CryptRetrieveObjectByUrlA" crypt-retrieve-object-by-url-a :convention :stdcall) winbool  (|pszUrl| lpcstr) (|pszObjectOid| lpcstr) (|dwRetrievalFlags| dword) (|dwTimeout| dword) (|ppvObject| :pointer) (|hAsyncRetrieve| hcryptasync) (|pCredentials| pcrypt_credentials) (|pvVerify| lpvoid) (|pAuxInfo| pcrypt_retrieve_aux_info))
(defcfun ("CryptRetrieveObjectByUrlW" crypt-retrieve-object-by-url-w :convention :stdcall) winbool  (|pszUrl| lpcwstr) (|pszObjectOid| lpcstr) (|dwRetrievalFlags| dword) (|dwTimeout| dword) (|ppvObject| :pointer) (|hAsyncRetrieve| hcryptasync) (|pCredentials| pcrypt_credentials) (|pvVerify| lpvoid) (|pAuxInfo| pcrypt_retrieve_aux_info))
(defcfun ("CryptInstallCancelRetrieval" crypt-install-cancel-retrieval :convention :stdcall) winbool  (|pfnCancel| pfn_crypt_cancel_retrieval) (|pvArg| :pointer) (|dwFlags| dword) (|pvReserved| :pointer))
(defcfun ("CryptUninstallCancelRetrieval" crypt-uninstall-cancel-retrieval :convention :stdcall) winbool  (|dwFlags| dword) (|pvReserved| :pointer))
(defcfun ("CryptCancelAsyncRetrieval" crypt-cancel-async-retrieval :convention :stdcall) winbool  (|hAsyncRetrieval| hcryptasync))
(defcfun ("CryptGetObjectUrl" crypt-get-object-url :convention :stdcall) winbool  (|pszUrlOid| lpcstr) (|pvPara| lpvoid) (|dwFlags| dword) (|pUrlArray| pcrypt_url_array) (|pcbUrlArray| :pointer) (|pUrlInfo| pcrypt_url_info) (|pcbUrlInfo| :pointer) (|pvReserved| lpvoid))
(defcfun ("CryptGetTimeValidObject" crypt-get-time-valid-object :convention :stdcall) winbool  (|pszTimeValidOid| lpcstr) (|pvPara| lpvoid) (|pIssuer| pccert_context) (|pftValidFor| lpfiletime) (|dwFlags| dword) (|dwTimeout| dword) (|ppvObject| :pointer) (|pCredentials| pcrypt_credentials) (|pvReserved| lpvoid))
(defcfun ("CryptFlushTimeValidObject" crypt-flush-time-valid-object :convention :stdcall) winbool  (|pszFlushTimeValidOid| lpcstr) (|pvPara| lpvoid) (|pIssuer| pccert_context) (|dwFlags| dword) (|pvReserved| lpvoid))
(defcfun ("CryptProtectData" crypt-protect-data :convention :stdcall) winbool  (|pDataIn| :pointer) (|szDataDescr| lpcwstr) (|pOptionalEntropy| :pointer) (|pvReserved| pvoid) (|pPromptStruct| :pointer) (|dwFlags| dword) (|pDataOut| :pointer))
(defcfun ("CryptUnprotectData" crypt-unprotect-data :convention :stdcall) winbool  (|pDataIn| :pointer) (|ppszDataDescr| :pointer) (|pOptionalEntropy| :pointer) (|pvReserved| pvoid) (|pPromptStruct| :pointer) (|dwFlags| dword) (|pDataOut| :pointer))
(defcfun ("CryptProtectMemory" crypt-protect-memory :convention :stdcall) winbool  (|pDataIn| lpvoid) (|cbDataIn| dword) (|dwFlags| dword))
(defcfun ("CryptUnprotectMemory" crypt-unprotect-memory :convention :stdcall) winbool  (|pDataIn| lpvoid) (|cbDataIn| dword) (|dwFlags| dword))
(defcfun ("CertCreateSelfSignCertificate" cert-create-self-sign-certificate :convention :stdcall) pccert_context  (|hProv| hcryptprov) (|pSubjectIssuerBlob| pcert_name_blob) (|dwFlags| dword) (|pKeyProvInfo| pcrypt_key_prov_info) (|pSignatureAlgorithm| pcrypt_algorithm_identifier) (|pStartTime| psystemtime) (|pEndTime| psystemtime) (|pExtensions| pcert_extensions))
(defcfun ("CryptGetKeyIdentifierProperty" crypt-get-key-identifier-property :convention :stdcall) winbool  (|pKeyIdentifier| :pointer) (|dwPropId| dword) (|dwFlags| dword) (|pwszComputerName| lpcwstr) (|pvReserved| :pointer) (|pvData| :pointer) (|pcbData| :pointer))
(defcfun ("CryptSetKeyIdentifierProperty" crypt-set-key-identifier-property :convention :stdcall) winbool  (|pKeyIdentifier| :pointer) (|dwPropId| dword) (|dwFlags| dword) (|pwszComputerName| lpcwstr) (|pvReserved| :pointer) (|pvData| :pointer))
(defcfun ("CryptEnumKeyIdentifierProperties" crypt-enum-key-identifier-properties :convention :stdcall) winbool  (|pKeyIdentifier| :pointer) (|dwPropId| dword) (|dwFlags| dword) (|pwszComputerName| lpcwstr) (|pvReserved| :pointer) (|pvArg| :pointer) (|pfnEnum| pfn_crypt_enum_keyid_prop))
(defcfun ("CryptCreateKeyIdentifierFromCSP" crypt-create-key-identifier-from-csp :convention :stdcall) winbool  (|dwCertEncodingType| dword) (|pszPubKeyOID| lpcstr) (|pPubKeyStruc| :pointer) (|cbPubKeyStruc| dword) (|dwFlags| dword) (|pvReserved| :pointer) (|pbHash| :pointer) (|pcbHash| :pointer))
(defcfun ("CertCreateCertificateChainEngine" cert-create-certificate-chain-engine :convention :stdcall) winbool  (|pConfig| pcert_chain_engine_config) (|phChainEngine| :pointer))
(defcfun ("CertFreeCertificateChainEngine" cert-free-certificate-chain-engine :convention :stdcall) :void  (|hChainEngine| hcertchainengine))
(defcfun ("CertResyncCertificateChainEngine" cert-resync-certificate-chain-engine :convention :stdcall) winbool  (|hChainEngine| hcertchainengine))
(defcfun ("CertGetCertificateChain" cert-get-certificate-chain :convention :stdcall) winbool  (|hChainEngine| hcertchainengine) (|pCertContext| pccert_context) (|pTime| lpfiletime) (|hAdditionalStore| hcertstore) (|pChainPara| pcert_chain_para) (|dwFlags| dword) (|pvReserved| lpvoid) (|ppChainContext| :pointer))
(defcfun ("CertFreeCertificateChain" cert-free-certificate-chain :convention :stdcall) :void  (|pChainContext| pccert_chain_context))
(defcfun ("CertDuplicateCertificateChain" cert-duplicate-certificate-chain :convention :stdcall) pccert_chain_context  (|pChainContext| pccert_chain_context))
(defcfun ("CertFindChainInStore" cert-find-chain-in-store :convention :stdcall) pccert_chain_context  (|hCertStore| hcertstore) (|dwCertEncodingType| dword) (|dwFindFlags| dword) (|dwFindType| dword) (|pvFindPara| :pointer) (|pPrevChainContext| pccert_chain_context))
(defcfun ("CertVerifyCertificateChainPolicy" cert-verify-certificate-chain-policy :convention :stdcall) winbool  (|pszPolicyOID| lpcstr) (|pChainContext| pccert_chain_context) (|pPolicyPara| pcert_chain_policy_para) (|pPolicyStatus| pcert_chain_policy_status))
(defcfun ("CryptStringToBinaryA" crypt-string-to-binary-a :convention :stdcall) winbool  (|pszString| lpcstr) (|cchString| dword) (|dwFlags| dword) (|pbBinary| :pointer) (|pcbBinary| :pointer) (|pdwSkip| :pointer) (|pdwFlags| :pointer))
(defcfun ("CryptStringToBinaryW" crypt-string-to-binary-w :convention :stdcall) winbool  (|pszString| lpcwstr) (|cchString| dword) (|dwFlags| dword) (|pbBinary| :pointer) (|pcbBinary| :pointer) (|pdwSkip| :pointer) (|pdwFlags| :pointer))
(defcfun ("CryptBinaryToStringA" crypt-binary-to-string-a :convention :stdcall) winbool  (|pbBinary| :pointer) (|cbBinary| dword) (|dwFlags| dword) (|pszString| lpstr) (|pcchString| :pointer))
(defcfun ("CryptBinaryToStringW" crypt-binary-to-string-w :convention :stdcall) winbool  (|pbBinary| :pointer) (|cbBinary| dword) (|dwFlags| dword) (|pszString| lpwstr) (|pcchString| :pointer))
(defcfun ("PFXImportCertStore" pfx-import-cert-store :convention :stdcall) hcertstore  (|pPFX| :pointer) (|szPassword| lpcwstr) (|dwFlags| dword))
(defcfun ("PFXIsPFXBlob" pfx-is-pfx-blob :convention :stdcall) winbool  (|pPFX| :pointer))
(defcfun ("PFXVerifyPassword" pfx-verify-password :convention :stdcall) winbool  (|pPFX| :pointer) (|szPassword| lpcwstr) (|dwFlags| dword))
(defcfun ("PFXExportCertStoreEx" pfx-export-cert-store-ex :convention :stdcall) winbool  (|hStore| hcertstore) (|pPFX| :pointer) (|szPassword| lpcwstr) (|pvReserved| :pointer) (|dwFlags| dword))
(defcfun ("PFXExportCertStore" pfx-export-cert-store :convention :stdcall) winbool  (|hStore| hcertstore) (|pPFX| :pointer) (|szPassword| lpcwstr) (|dwFlags| dword))
(defcfun ("QueryUsersOnEncryptedFile" query-users-on-encrypted-file :convention :stdcall) dword  (|lpFileName| lpcwstr) (|pUsers| :pointer))
(defcfun ("QueryRecoveryAgentsOnEncryptedFile" query-recovery-agents-on-encrypted-file :convention :stdcall) dword  (|lpFileName| lpcwstr) (|pRecoveryAgents| :pointer))
(defcfun ("RemoveUsersFromEncryptedFile" remove-users-from-encrypted-file :convention :stdcall) dword  (|lpFileName| lpcwstr) (|pHashes| pencryption_certificate_hash_list))
(defcfun ("AddUsersToEncryptedFile" add-users-to-encrypted-file :convention :stdcall) dword  (|lpFileName| lpcwstr) (|pUsers| pencryption_certificate_list))
(defcfun ("SetUserFileEncryptionKey" set-user-file-encryption-key :convention :stdcall) dword  (|pEncryptionCertificate| pencryption_certificate))
(defcfun ("FreeEncryptionCertificateHashList" free-encryption-certificate-hash-list :convention :stdcall) :void  (|pHashes| pencryption_certificate_hash_list))
(defcfun ("EncryptionDisable" encryption-disable :convention :stdcall) winbool  (|DirPath| lpcwstr) (|Disable| winbool))
(defcfun ("DuplicateEncryptionInfoFile" duplicate-encryption-info-file :convention :stdcall) dword  (|SrcFileName| lpcwstr) (|DstFileName| lpcwstr) (|dwCreationDistribution| dword) (|dwAttributes| dword) (|lpSecurityAttributes| lpsecurity_attributes))
(defcfun ("I_RpcNsGetBuffer" irpc-ns-get-buffer :convention :stdcall) rpc_status  (|Message| prpc_message))
(defcfun ("I_RpcNsSendReceive" irpc-ns-send-receive :convention :stdcall) rpc_status  (|Message| prpc_message) (|Handle| :pointer))
(defcfun ("I_RpcNsRaiseException" irpc-ns-raise-exception :convention :stdcall) :void  (|Message| prpc_message) (|Status| rpc_status))
(defcfun ("I_RpcReBindBuffer" irpc-re-bind-buffer :convention :stdcall) rpc_status  (|Message| prpc_message))
(defcfun ("I_NsServerBindSearch" ins-server-bind-search :convention :stdcall) rpc_status )
(defcfun ("I_NsClientBindSearch" ins-client-bind-search :convention :stdcall) rpc_status )
(defcfun ("I_NsClientBindDone" ins-client-bind-done :convention :stdcall) :void )
(defcfun ("MIDL_user_allocate" midl-user-allocate :convention :stdcall) :pointer  (arg0 |size_t|))
(defcfun ("MIDL_user_free" midl-user-free :convention :stdcall) :void  (arg0 :pointer))
(defcfun ("NDRCContextBinding" ndrc-context-binding :convention :stdcall) rpc_binding_handle  (|CContext| ndr_ccontext))
(defcfun ("NDRCContextMarshall" ndrc-context-marshall :convention :stdcall) :void  (|CContext| ndr_ccontext) (|pBuff| :pointer))
(defcfun ("NDRCContextUnmarshall" ndrc-context-unmarshall :convention :stdcall) :void  (|pCContext| :pointer) (|hBinding| rpc_binding_handle) (|pBuff| :pointer) (|DataRepresentation| :unsigned-long))
(defcfun ("NDRSContextMarshall" ndrs-context-marshall :convention :stdcall) :void  (|CContext| ndr_scontext) (|pBuff| :pointer) (|userRunDownIn| ndr_rundown))
(defcfun ("NDRSContextUnmarshall" ndrs-context-unmarshall :convention :stdcall) ndr_scontext  (|pBuff| :pointer) (|DataRepresentation| :unsigned-long))
(defcfun ("NDRSContextMarshallEx" ndrs-context-marshall-ex :convention :stdcall) :void  (|BindingHandle| rpc_binding_handle) (|CContext| ndr_scontext) (|pBuff| :pointer) (|userRunDownIn| ndr_rundown))
(defcfun ("NDRSContextMarshall2" ndrs-context-marshall-2 :convention :stdcall) :void  (|BindingHandle| rpc_binding_handle) (|CContext| ndr_scontext) (|pBuff| :pointer) (|userRunDownIn| ndr_rundown) (|CtxGuard| :pointer) (|Flags| :unsigned-long))
(defcfun ("NDRSContextUnmarshallEx" ndrs-context-unmarshall-ex :convention :stdcall) ndr_scontext  (|BindingHandle| rpc_binding_handle) (|pBuff| :pointer) (|DataRepresentation| :unsigned-long))
(defcfun ("NDRSContextUnmarshall2" ndrs-context-unmarshall-2 :convention :stdcall) ndr_scontext  (|BindingHandle| rpc_binding_handle) (|pBuff| :pointer) (|DataRepresentation| :unsigned-long) (|CtxGuard| :pointer) (|Flags| :unsigned-long))
(defcfun ("RpcSsDestroyClientContext" rpc-ss-destroy-client-context :convention :stdcall) :void  (|ContextHandle| :pointer))
(defcfun ("RpcCsGetTags" rpc-cs-get-tags :convention :stdcall) :void  (|hBinding| rpc_binding_handle) (|fServerSide| :int) (|pulSendingTag| :pointer) (|pulDesiredReceivingTag| :pointer) (|pulReceivingTag| :pointer) (|pStatus| :pointer))
(defcfun ("NdrClientGetSupportedSyntaxes" ndr-client-get-supported-syntaxes :convention :stdcall) rpc_status  (|pInf| :pointer) (|pCount| :pointer) (|pArr| :pointer))
(defcfun ("NdrServerGetSupportedSyntaxes" ndr-server-get-supported-syntaxes :convention :stdcall) rpc_status  (|pInf| :pointer) (|pCount| :pointer) (|pArr| :pointer) (|pPreferSyntaxIndex| :pointer))
(defcfun ("NdrSimpleTypeMarshall" ndr-simple-type-marshall :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|FormatChar| :unsigned-char))
(defcfun ("NdrPointerMarshall" ndr-pointer-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrCsArrayMarshall" ndr-cs-array-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrCsTagMarshall" ndr-cs-tag-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrSimpleStructMarshall" ndr-simple-struct-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrConformantStructMarshall" ndr-conformant-struct-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrConformantVaryingStructMarshall" ndr-conformant-varying-struct-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrComplexStructMarshall" ndr-complex-struct-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrFixedArrayMarshall" ndr-fixed-array-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrConformantArrayMarshall" ndr-conformant-array-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrConformantVaryingArrayMarshall" ndr-conformant-varying-array-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrVaryingArrayMarshall" ndr-varying-array-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrComplexArrayMarshall" ndr-complex-array-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrNonConformantStringMarshall" ndr-non-conformant-string-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrConformantStringMarshall" ndr-conformant-string-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrEncapsulatedUnionMarshall" ndr-encapsulated-union-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrNonEncapsulatedUnionMarshall" ndr-non-encapsulated-union-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrByteCountPointerMarshall" ndr-byte-count-pointer-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrXmitOrRepAsMarshall" ndr-xmit-or-rep-as-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrUserMarshalMarshall" ndr-user-marshal-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrInterfacePointerMarshall" ndr-interface-pointer-marshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrClientContextMarshall" ndr-client-context-marshall :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|ContextHandle| ndr_ccontext) (|fCheck| :int))
(defcfun ("NdrServerContextMarshall" ndr-server-context-marshall :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|ContextHandle| ndr_scontext) (|RundownRoutine| ndr_rundown))
(defcfun ("NdrServerContextNewMarshall" ndr-server-context-new-marshall :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|ContextHandle| ndr_scontext) (|RundownRoutine| ndr_rundown) (|pFormat| pformat_string))
(defcfun ("NdrSimpleTypeUnmarshall" ndr-simple-type-unmarshall :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|FormatChar| :unsigned-char))
(defcfun ("NdrCsArrayUnmarshall" ndr-cs-array-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrCsTagUnmarshall" ndr-cs-tag-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrRangeUnmarshall" ndr-range-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrCorrelationInitialize" ndr-correlation-initialize :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|CacheSize| :unsigned-long) (|flags| :unsigned-long))
(defcfun ("NdrCorrelationPass" ndr-correlation-pass :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message))
(defcfun ("NdrCorrelationFree" ndr-correlation-free :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message))
(defcfun ("NdrPointerUnmarshall" ndr-pointer-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrSimpleStructUnmarshall" ndr-simple-struct-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrConformantStructUnmarshall" ndr-conformant-struct-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrConformantVaryingStructUnmarshall" ndr-conformant-varying-struct-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrComplexStructUnmarshall" ndr-complex-struct-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrFixedArrayUnmarshall" ndr-fixed-array-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrConformantArrayUnmarshall" ndr-conformant-array-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrConformantVaryingArrayUnmarshall" ndr-conformant-varying-array-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrVaryingArrayUnmarshall" ndr-varying-array-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrComplexArrayUnmarshall" ndr-complex-array-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrNonConformantStringUnmarshall" ndr-non-conformant-string-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrConformantStringUnmarshall" ndr-conformant-string-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrEncapsulatedUnionUnmarshall" ndr-encapsulated-union-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrNonEncapsulatedUnionUnmarshall" ndr-non-encapsulated-union-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrByteCountPointerUnmarshall" ndr-byte-count-pointer-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrXmitOrRepAsUnmarshall" ndr-xmit-or-rep-as-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrUserMarshalUnmarshall" ndr-user-marshal-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrInterfacePointerUnmarshall" ndr-interface-pointer-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string) (|fMustAlloc| :unsigned-char))
(defcfun ("NdrClientContextUnmarshall" ndr-client-context-unmarshall :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pContextHandle| :pointer) (|BindHandle| rpc_binding_handle))
(defcfun ("NdrServerContextUnmarshall" ndr-server-context-unmarshall :convention :stdcall) ndr_scontext  (|pStubMsg| pmidl_stub_message))
(defcfun ("NdrContextHandleInitialize" ndr-context-handle-initialize :convention :stdcall) ndr_scontext  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrServerContextNewUnmarshall" ndr-server-context-new-unmarshall :convention :stdcall) ndr_scontext  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrPointerBufferSize" ndr-pointer-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrCsArrayBufferSize" ndr-cs-array-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrCsTagBufferSize" ndr-cs-tag-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrSimpleStructBufferSize" ndr-simple-struct-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrConformantStructBufferSize" ndr-conformant-struct-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrConformantVaryingStructBufferSize" ndr-conformant-varying-struct-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrComplexStructBufferSize" ndr-complex-struct-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrFixedArrayBufferSize" ndr-fixed-array-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrConformantArrayBufferSize" ndr-conformant-array-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrConformantVaryingArrayBufferSize" ndr-conformant-varying-array-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrVaryingArrayBufferSize" ndr-varying-array-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrComplexArrayBufferSize" ndr-complex-array-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrConformantStringBufferSize" ndr-conformant-string-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrNonConformantStringBufferSize" ndr-non-conformant-string-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrEncapsulatedUnionBufferSize" ndr-encapsulated-union-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrNonEncapsulatedUnionBufferSize" ndr-non-encapsulated-union-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrByteCountPointerBufferSize" ndr-byte-count-pointer-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrXmitOrRepAsBufferSize" ndr-xmit-or-rep-as-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrUserMarshalBufferSize" ndr-user-marshal-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrInterfacePointerBufferSize" ndr-interface-pointer-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrContextHandleSize" ndr-context-handle-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrPointerMemorySize" ndr-pointer-memory-size :convention :stdcall) :unsigned-long  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrCsArrayMemorySize" ndr-cs-array-memory-size :convention :stdcall) :unsigned-long  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrCsTagMemorySize" ndr-cs-tag-memory-size :convention :stdcall) :unsigned-long  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrSimpleStructMemorySize" ndr-simple-struct-memory-size :convention :stdcall) :unsigned-long  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrConformantStructMemorySize" ndr-conformant-struct-memory-size :convention :stdcall) :unsigned-long  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrConformantVaryingStructMemorySize" ndr-conformant-varying-struct-memory-size :convention :stdcall) :unsigned-long  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrComplexStructMemorySize" ndr-complex-struct-memory-size :convention :stdcall) :unsigned-long  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrFixedArrayMemorySize" ndr-fixed-array-memory-size :convention :stdcall) :unsigned-long  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrConformantArrayMemorySize" ndr-conformant-array-memory-size :convention :stdcall) :unsigned-long  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrConformantVaryingArrayMemorySize" ndr-conformant-varying-array-memory-size :convention :stdcall) :unsigned-long  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrVaryingArrayMemorySize" ndr-varying-array-memory-size :convention :stdcall) :unsigned-long  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrComplexArrayMemorySize" ndr-complex-array-memory-size :convention :stdcall) :unsigned-long  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrConformantStringMemorySize" ndr-conformant-string-memory-size :convention :stdcall) :unsigned-long  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrNonConformantStringMemorySize" ndr-non-conformant-string-memory-size :convention :stdcall) :unsigned-long  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrEncapsulatedUnionMemorySize" ndr-encapsulated-union-memory-size :convention :stdcall) :unsigned-long  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrNonEncapsulatedUnionMemorySize" ndr-non-encapsulated-union-memory-size :convention :stdcall) :unsigned-long  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrXmitOrRepAsMemorySize" ndr-xmit-or-rep-as-memory-size :convention :stdcall) :unsigned-long  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrUserMarshalMemorySize" ndr-user-marshal-memory-size :convention :stdcall) :unsigned-long  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrInterfacePointerMemorySize" ndr-interface-pointer-memory-size :convention :stdcall) :unsigned-long  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrPointerFree" ndr-pointer-free :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrCsArrayFree" ndr-cs-array-free :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrSimpleStructFree" ndr-simple-struct-free :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrConformantStructFree" ndr-conformant-struct-free :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrConformantVaryingStructFree" ndr-conformant-varying-struct-free :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrComplexStructFree" ndr-complex-struct-free :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrFixedArrayFree" ndr-fixed-array-free :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrConformantArrayFree" ndr-conformant-array-free :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrConformantVaryingArrayFree" ndr-conformant-varying-array-free :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrVaryingArrayFree" ndr-varying-array-free :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrComplexArrayFree" ndr-complex-array-free :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrEncapsulatedUnionFree" ndr-encapsulated-union-free :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrNonEncapsulatedUnionFree" ndr-non-encapsulated-union-free :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrByteCountPointerFree" ndr-byte-count-pointer-free :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrXmitOrRepAsFree" ndr-xmit-or-rep-as-free :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrUserMarshalFree" ndr-user-marshal-free :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrInterfacePointerFree" ndr-interface-pointer-free :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("NdrConvert2" ndr-convert-2 :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string) (|NumberParams| :long))
(defcfun ("NdrConvert" ndr-convert :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrUserMarshalSimpleTypeConvert" ndr-user-marshal-simple-type-convert :convention :stdcall) :pointer  (|pFlags| :pointer) (|pBuffer| :pointer) (|FormatChar| :unsigned-char))
(defcfun ("NdrClientInitializeNew" ndr-client-initialize-new :convention :stdcall) :void  (|pRpcMsg| prpc_message) (|pStubMsg| pmidl_stub_message) (|pStubDescriptor| pmidl_stub_desc) (|ProcNum| :unsigned-int))
(defcfun ("NdrServerInitializeNew" ndr-server-initialize-new :convention :stdcall) :pointer  (|pRpcMsg| prpc_message) (|pStubMsg| pmidl_stub_message) (|pStubDescriptor| pmidl_stub_desc))
(defcfun ("NdrServerInitializePartial" ndr-server-initialize-partial :convention :stdcall) :void  (|pRpcMsg| prpc_message) (|pStubMsg| pmidl_stub_message) (|pStubDescriptor| pmidl_stub_desc) (|RequestedBufferSize| :unsigned-long))
(defcfun ("NdrClientInitialize" ndr-client-initialize :convention :stdcall) :void  (|pRpcMsg| prpc_message) (|pStubMsg| pmidl_stub_message) (|pStubDescriptor| pmidl_stub_desc) (|ProcNum| :unsigned-int))
(defcfun ("NdrServerInitialize" ndr-server-initialize :convention :stdcall) :pointer  (|pRpcMsg| prpc_message) (|pStubMsg| pmidl_stub_message) (|pStubDescriptor| pmidl_stub_desc))
(defcfun ("NdrServerInitializeUnmarshall" ndr-server-initialize-unmarshall :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pStubDescriptor| pmidl_stub_desc) (|pRpcMsg| prpc_message))
(defcfun ("NdrServerInitializeMarshall" ndr-server-initialize-marshall :convention :stdcall) :void  (|pRpcMsg| prpc_message) (|pStubMsg| pmidl_stub_message))
(defcfun ("NdrGetBuffer" ndr-get-buffer :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|BufferLength| :unsigned-long) (|Handle| rpc_binding_handle))
(defcfun ("NdrNsGetBuffer" ndr-ns-get-buffer :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|BufferLength| :unsigned-long) (|Handle| rpc_binding_handle))
(defcfun ("NdrSendReceive" ndr-send-receive :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pBufferEnd| :pointer))
(defcfun ("NdrNsSendReceive" ndr-ns-send-receive :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|pBufferEnd| :pointer) (|pAutoHandle| :pointer))
(defcfun ("NdrFreeBuffer" ndr-free-buffer :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message))
(defcfun ("NdrGetDcomProtocolVersion" ndr-get-dcom-protocol-version :convention :stdcall) rpc_status  (|pStubMsg| pmidl_stub_message) (|pVersion| :pointer))
(defcfun ("NdrClientCall2" ndr-client-call-2) client_call_return  (|pStubDescriptor| pmidl_stub_desc) (|pFormat| pformat_string) &rest)
(defcfun ("NdrClientCall" ndr-client-call) client_call_return  (|pStubDescriptor| pmidl_stub_desc) (|pFormat| pformat_string) &rest)
(defcfun ("NdrAsyncClientCall" ndr-async-client-call) client_call_return  (|pStubDescriptor| pmidl_stub_desc) (|pFormat| pformat_string) &rest)
(defcfun ("NdrDcomAsyncClientCall" ndr-dcom-async-client-call) client_call_return  (|pStubDescriptor| pmidl_stub_desc) (|pFormat| pformat_string) &rest)
(defcfun ("NdrAsyncServerCall" ndr-async-server-call :convention :stdcall) :void  (|pRpcMsg| prpc_message))
(defcfun ("NdrAsyncStubCall" ndr-async-stub-call :convention :stdcall) :long  (|pThis| :pointer) (|pChannel| :pointer) (|pRpcMsg| prpc_message) (|pdwStubPhase| :pointer))
(defcfun ("NdrDcomAsyncStubCall" ndr-dcom-async-stub-call :convention :stdcall) :long  (|pThis| :pointer) (|pChannel| :pointer) (|pRpcMsg| prpc_message) (|pdwStubPhase| :pointer))
(defcfun ("NdrStubCall2" ndr-stub-call-2 :convention :stdcall) :long  (|pThis| :pointer) (|pChannel| :pointer) (|pRpcMsg| prpc_message) (|pdwStubPhase| :pointer))
(defcfun ("NdrServerCall2" ndr-server-call-2 :convention :stdcall) :void  (|pRpcMsg| prpc_message))
(defcfun ("NdrStubCall" ndr-stub-call :convention :stdcall) :long  (|pThis| :pointer) (|pChannel| :pointer) (|pRpcMsg| prpc_message) (|pdwStubPhase| :pointer))
(defcfun ("NdrServerCall" ndr-server-call :convention :stdcall) :void  (|pRpcMsg| prpc_message))
(defcfun ("NdrServerUnmarshall" ndr-server-unmarshall :convention :stdcall) :int  (|pChannel| :pointer) (|pRpcMsg| prpc_message) (|pStubMsg| pmidl_stub_message) (|pStubDescriptor| pmidl_stub_desc) (|pFormat| pformat_string) (|pParamList| :pointer))
(defcfun ("NdrServerMarshall" ndr-server-marshall :convention :stdcall) :void  (|pThis| :pointer) (|pChannel| :pointer) (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string))
(defcfun ("NdrMapCommAndFaultStatus" ndr-map-comm-and-fault-status :convention :stdcall) rpc_status  (|pStubMsg| pmidl_stub_message) (|pCommStatus| :pointer) (|pFaultStatus| :pointer) (|Status| rpc_status))
(defcfun ("NdrSH_UPDecision" ndr-shup-decision :convention :stdcall) :int  (|pStubMsg| pmidl_stub_message) (|pPtrInMem| :pointer) (|pBuffer| rpc_bufptr))
(defcfun ("NdrSH_TLUPDecision" ndr-shtlup-decision :convention :stdcall) :int  (|pStubMsg| pmidl_stub_message) (|pPtrInMem| :pointer))
(defcfun ("NdrSH_TLUPDecisionBuffer" ndr-shtlup-decision-buffer :convention :stdcall) :int  (|pStubMsg| pmidl_stub_message) (|pPtrInMem| :pointer))
(defcfun ("NdrSH_IfAlloc" ndr-sh-if-alloc :convention :stdcall) :int  (|pStubMsg| pmidl_stub_message) (|pPtrInMem| :pointer) (|Count| :unsigned-long))
(defcfun ("NdrSH_IfAllocRef" ndr-sh-if-alloc-ref :convention :stdcall) :int  (|pStubMsg| pmidl_stub_message) (|pPtrInMem| :pointer) (|Count| :unsigned-long))
(defcfun ("NdrSH_IfAllocSet" ndr-sh-if-alloc-set :convention :stdcall) :int  (|pStubMsg| pmidl_stub_message) (|pPtrInMem| :pointer) (|Count| :unsigned-long))
(defcfun ("NdrSH_IfCopy" ndr-sh-if-copy :convention :stdcall) rpc_bufptr  (|pStubMsg| pmidl_stub_message) (|pPtrInMem| :pointer) (|Count| :unsigned-long))
(defcfun ("NdrSH_IfAllocCopy" ndr-sh-if-alloc-copy :convention :stdcall) rpc_bufptr  (|pStubMsg| pmidl_stub_message) (|pPtrInMem| :pointer) (|Count| :unsigned-long))
(defcfun ("NdrSH_Copy" ndr-sh-copy :convention :stdcall) :unsigned-long  (|pStubMsg| :pointer) (|pPtrInMem| :pointer) (|Count| :unsigned-long))
(defcfun ("NdrSH_IfFree" ndr-sh-if-free :convention :stdcall) :void  (|pMessage| pmidl_stub_message) (|pPtr| :pointer))
(defcfun ("NdrSH_StringMarshall" ndr-sh-string-marshall :convention :stdcall) rpc_bufptr  (|pMessage| pmidl_stub_message) (|pMemory| :pointer) (|Count| :unsigned-long) (|Size| :int))
(defcfun ("NdrSH_StringUnMarshall" ndr-sh-string-un-marshall :convention :stdcall) rpc_bufptr  (|pMessage| pmidl_stub_message) (|pMemory| :pointer) (|Size| :int))
(defcfun ("RPC_CLIENT_ALLOC" rpcclientalloc :convention :stdcall) :pointer  (|Size| |size_t|))
(defcfun ("RPC_CLIENT_FREE" rpcclientfree :convention :stdcall) :void  (|Ptr| :pointer))
(defcfun ("RpcSsAllocate" rpc-ss-allocate :convention :stdcall) :pointer  (|Size| |size_t|))
(defcfun ("RpcSsDisableAllocate" rpc-ss-disable-allocate :convention :stdcall) :void )
(defcfun ("RpcSsEnableAllocate" rpc-ss-enable-allocate :convention :stdcall) :void )
(defcfun ("RpcSsFree" rpc-ss-free :convention :stdcall) :void  (|NodeToFree| :pointer))
(defcfun ("RpcSsGetThreadHandle" rpc-ss-get-thread-handle :convention :stdcall) rpc_ss_thread_handle )
(defcfun ("RpcSsSetClientAllocFree" rpc-ss-set-client-alloc-free :convention :stdcall) :void  (|ClientAlloc| :pointer) (|ClientFree| :pointer))
(defcfun ("RpcSsSetThreadHandle" rpc-ss-set-thread-handle :convention :stdcall) :void  (|Id| rpc_ss_thread_handle))
(defcfun ("RpcSsSwapClientAllocFree" rpc-ss-swap-client-alloc-free :convention :stdcall) :void  (|ClientAlloc| :pointer) (|ClientFree| :pointer) (|OldClientAlloc| :pointer) (|OldClientFree| :pointer))
(defcfun ("RpcSmAllocate" rpc-sm-allocate :convention :stdcall) :pointer  (|Size| |size_t|) (|pStatus| :pointer))
(defcfun ("RpcSmClientFree" rpc-sm-client-free :convention :stdcall) rpc_status  (|pNodeToFree| :pointer))
(defcfun ("RpcSmDestroyClientContext" rpc-sm-destroy-client-context :convention :stdcall) rpc_status  (|ContextHandle| :pointer))
(defcfun ("RpcSmDisableAllocate" rpc-sm-disable-allocate :convention :stdcall) rpc_status )
(defcfun ("RpcSmEnableAllocate" rpc-sm-enable-allocate :convention :stdcall) rpc_status )
(defcfun ("RpcSmFree" rpc-sm-free :convention :stdcall) rpc_status  (|NodeToFree| :pointer))
(defcfun ("RpcSmGetThreadHandle" rpc-sm-get-thread-handle :convention :stdcall) rpc_ss_thread_handle  (|pStatus| :pointer))
(defcfun ("RpcSmSetClientAllocFree" rpc-sm-set-client-alloc-free :convention :stdcall) rpc_status  (|ClientAlloc| :pointer) (|ClientFree| :pointer))
(defcfun ("RpcSmSetThreadHandle" rpc-sm-set-thread-handle :convention :stdcall) rpc_status  (|Id| rpc_ss_thread_handle))
(defcfun ("RpcSmSwapClientAllocFree" rpc-sm-swap-client-alloc-free :convention :stdcall) rpc_status  (|ClientAlloc| :pointer) (|ClientFree| :pointer) (|OldClientAlloc| :pointer) (|OldClientFree| :pointer))
(defcfun ("NdrRpcSsEnableAllocate" ndr-rpc-ss-enable-allocate :convention :stdcall) :void  (|pMessage| pmidl_stub_message))
(defcfun ("NdrRpcSsDisableAllocate" ndr-rpc-ss-disable-allocate :convention :stdcall) :void  (|pMessage| pmidl_stub_message))
(defcfun ("NdrRpcSmSetClientToOsf" ndr-rpc-sm-set-client-to-osf :convention :stdcall) :void  (|pMessage| pmidl_stub_message))
(defcfun ("NdrRpcSmClientAllocate" ndr-rpc-sm-client-allocate :convention :stdcall) :pointer  (|Size| |size_t|))
(defcfun ("NdrRpcSmClientFree" ndr-rpc-sm-client-free :convention :stdcall) :void  (|NodeToFree| :pointer))
(defcfun ("NdrRpcSsDefaultAllocate" ndr-rpc-ss-default-allocate :convention :stdcall) :pointer  (|Size| |size_t|))
(defcfun ("NdrRpcSsDefaultFree" ndr-rpc-ss-default-free :convention :stdcall) :void  (|NodeToFree| :pointer))
(defcfun ("NdrFullPointerXlatInit" ndr-full-pointer-xlat-init :convention :stdcall) pfull_ptr_xlat_tables  (|NumberOfPointers| :unsigned-long) (|XlatSide| xlat_side))
(defcfun ("NdrFullPointerXlatFree" ndr-full-pointer-xlat-free :convention :stdcall) :void  (|pXlatTables| pfull_ptr_xlat_tables))
(defcfun ("NdrFullPointerQueryPointer" ndr-full-pointer-query-pointer :convention :stdcall) :int  (|pXlatTables| pfull_ptr_xlat_tables) (|pPointer| :pointer) (|QueryType| :unsigned-char) (|pRefId| :pointer))
(defcfun ("NdrFullPointerQueryRefId" ndr-full-pointer-query-ref-id :convention :stdcall) :int  (|pXlatTables| pfull_ptr_xlat_tables) (|RefId| :unsigned-long) (|QueryType| :unsigned-char) (|ppPointer| :pointer))
(defcfun ("NdrFullPointerInsertRefId" ndr-full-pointer-insert-ref-id :convention :stdcall) :void  (|pXlatTables| pfull_ptr_xlat_tables) (|RefId| :unsigned-long) (|pPointer| :pointer))
(defcfun ("NdrFullPointerFree" ndr-full-pointer-free :convention :stdcall) :int  (|pXlatTables| pfull_ptr_xlat_tables) (|Pointer| :pointer))
(defcfun ("NdrAllocate" ndr-allocate :convention :stdcall) :pointer  (|pStubMsg| pmidl_stub_message) (|Len| |size_t|))
(defcfun ("NdrClearOutParameters" ndr-clear-out-parameters :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pFormat| pformat_string) (|ArgAddr| :pointer))
(defcfun ("NdrOleAllocate" ndr-ole-allocate :convention :stdcall) :pointer  (|Size| |size_t|))
(defcfun ("NdrOleFree" ndr-ole-free :convention :stdcall) :void  (|NodeToFree| :pointer))
(defcfun ("NdrGetUserMarshalInfo" ndr-get-user-marshal-info :convention :stdcall) rpc_status  (|pFlags| :pointer) (|InformationLevel| :unsigned-long) (|pMarshalInfo| :pointer))
(defcfun ("NdrCreateServerInterfaceFromStub" ndr-create-server-interface-from-stub :convention :stdcall) rpc_status  (|pStub| :pointer) (|pServerIf| :pointer))
(defcfun ("NdrClientCall3" ndr-client-call-3) client_call_return  (|pProxyInfo| :pointer) (|nProcNum| :unsigned-long) (|pReturnValue| :pointer) &rest)
(defcfun ("Ndr64AsyncClientCall" ndr-64-async-client-call) client_call_return  (|pProxyInfo| :pointer) (|nProcNum| :unsigned-long) (|pReturnValue| :pointer) &rest)
(defcfun ("Ndr64DcomAsyncClientCall" ndr-64-dcom-async-client-call) client_call_return  (|pProxyInfo| :pointer) (|nProcNum| :unsigned-long) (|pReturnValue| :pointer) &rest)
(defcfun ("Ndr64AsyncServerCall" ndr-64-async-server-call :convention :stdcall) :void  (|pRpcMsg| prpc_message))
(defcfun ("Ndr64AsyncServerCall64" ndr-64-async-server-call-64 :convention :stdcall) :void  (|pRpcMsg| prpc_message))
(defcfun ("Ndr64AsyncServerCallAll" ndr-64-async-server-call-all :convention :stdcall) :void  (|pRpcMsg| prpc_message))
(defcfun ("Ndr64AsyncStubCall" ndr-64-async-stub-call :convention :stdcall) :long  (|pThis| :pointer) (|pChannel| :pointer) (|pRpcMsg| prpc_message) (|pdwStubPhase| :pointer))
(defcfun ("Ndr64DcomAsyncStubCall" ndr-64-dcom-async-stub-call :convention :stdcall) :long  (|pThis| :pointer) (|pChannel| :pointer) (|pRpcMsg| prpc_message) (|pdwStubPhase| :pointer))
(defcfun ("NdrStubCall3" ndr-stub-call-3 :convention :stdcall) :long  (|pThis| :pointer) (|pChannel| :pointer) (|pRpcMsg| prpc_message) (|pdwStubPhase| :pointer))
(defcfun ("NdrServerCallAll" ndr-server-call-all :convention :stdcall) :void  (|pRpcMsg| prpc_message))
(defcfun ("NdrServerCallNdr64" ndr-server-call-ndr-64 :convention :stdcall) :void  (|pRpcMsg| prpc_message))
(defcfun ("NdrServerCall3" ndr-server-call-3 :convention :stdcall) :void  (|pRpcMsg| prpc_message))
(defcfun ("NdrPartialIgnoreClientMarshall" ndr-partial-ignore-client-marshall :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer))
(defcfun ("NdrPartialIgnoreServerUnmarshall" ndr-partial-ignore-server-unmarshall :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer))
(defcfun ("NdrPartialIgnoreClientBufferSize" ndr-partial-ignore-client-buffer-size :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|pMemory| :pointer))
(defcfun ("NdrPartialIgnoreServerInitialize" ndr-partial-ignore-server-initialize :convention :stdcall) :void  (|pStubMsg| pmidl_stub_message) (|ppMemory| :pointer) (|pFormat| pformat_string))
(defcfun ("RpcUserFree" rpc-user-free :convention :stdcall) :void  (|AsyncHandle| |handle_t|) (|pBuffer| :pointer))
(defcfun ("SCardEstablishContext" scard-establish-context :convention :stdcall) long  (|dwScope| dword) (|pvReserved1| lpcvoid) (|pvReserved2| lpcvoid) (|phContext| lpscardcontext))
(defcfun ("SCardReleaseContext" scard-release-context :convention :stdcall) long  (|hContext| scardcontext))
(defcfun ("SCardIsValidContext" scard-is-valid-context :convention :stdcall) long  (|hContext| scardcontext))
(defcfun ("SCardListReaderGroupsA" scard-list-reader-groups-a :convention :stdcall) long  (|hContext| scardcontext) (|mszGroups| lpstr) (|pcchGroups| lpdword))
(defcfun ("SCardListReaderGroupsW" scard-list-reader-groups-w :convention :stdcall) long  (|hContext| scardcontext) (|mszGroups| lpwstr) (|pcchGroups| lpdword))
(defcfun ("SCardListReadersA" scard-list-readers-a :convention :stdcall) long  (|hContext| scardcontext) (|mszGroups| lpcstr) (|mszReaders| lpstr) (|pcchReaders| lpdword))
(defcfun ("SCardListReadersW" scard-list-readers-w :convention :stdcall) long  (|hContext| scardcontext) (|mszGroups| lpcwstr) (|mszReaders| lpwstr) (|pcchReaders| lpdword))
(defcfun ("SCardListCardsA" scard-list-cards-a :convention :stdcall) long  (|hContext| scardcontext) (|pbAtr| lpcbyte) (|rgquidInterfaces| lpcguid) (|cguidInterfaceCount| dword) (|mszCards| lpstr) (|pcchCards| lpdword))
(defcfun ("SCardListCardsW" scard-list-cards-w :convention :stdcall) long  (|hContext| scardcontext) (|pbAtr| lpcbyte) (|rgquidInterfaces| lpcguid) (|cguidInterfaceCount| dword) (|mszCards| lpwstr) (|pcchCards| lpdword))
(defcfun ("SCardListInterfacesA" scard-list-interfaces-a :convention :stdcall) long  (|hContext| scardcontext) (|szCard| lpcstr) (|pguidInterfaces| lpguid) (|pcguidInterfaces| lpdword))
(defcfun ("SCardListInterfacesW" scard-list-interfaces-w :convention :stdcall) long  (|hContext| scardcontext) (|szCard| lpcwstr) (|pguidInterfaces| lpguid) (|pcguidInterfaces| lpdword))
(defcfun ("SCardGetProviderIdA" scard-get-provider-id-a :convention :stdcall) long  (|hContext| scardcontext) (|szCard| lpcstr) (|pguidProviderId| lpguid))
(defcfun ("SCardGetProviderIdW" scard-get-provider-id-w :convention :stdcall) long  (|hContext| scardcontext) (|szCard| lpcwstr) (|pguidProviderId| lpguid))
(defcfun ("SCardGetCardTypeProviderNameA" scard-get-card-type-provider-name-a :convention :stdcall) long  (|hContext| scardcontext) (|szCardName| lpcstr) (|dwProviderId| dword) (|szProvider| lpstr) (|pcchProvider| lpdword))
(defcfun ("SCardGetCardTypeProviderNameW" scard-get-card-type-provider-name-w :convention :stdcall) long  (|hContext| scardcontext) (|szCardName| lpcwstr) (|dwProviderId| dword) (|szProvider| lpwstr) (|pcchProvider| lpdword))
(defcfun ("SCardIntroduceReaderGroupA" scard-introduce-reader-group-a :convention :stdcall) long  (|hContext| scardcontext) (|szGroupName| lpcstr))
(defcfun ("SCardIntroduceReaderGroupW" scard-introduce-reader-group-w :convention :stdcall) long  (|hContext| scardcontext) (|szGroupName| lpcwstr))
(defcfun ("SCardForgetReaderGroupA" scard-forget-reader-group-a :convention :stdcall) long  (|hContext| scardcontext) (|szGroupName| lpcstr))
(defcfun ("SCardForgetReaderGroupW" scard-forget-reader-group-w :convention :stdcall) long  (|hContext| scardcontext) (|szGroupName| lpcwstr))
(defcfun ("SCardIntroduceReaderA" scard-introduce-reader-a :convention :stdcall) long  (|hContext| scardcontext) (|szReaderName| lpcstr) (|szDeviceName| lpcstr))
(defcfun ("SCardIntroduceReaderW" scard-introduce-reader-w :convention :stdcall) long  (|hContext| scardcontext) (|szReaderName| lpcwstr) (|szDeviceName| lpcwstr))
(defcfun ("SCardForgetReaderA" scard-forget-reader-a :convention :stdcall) long  (|hContext| scardcontext) (|szReaderName| lpcstr))
(defcfun ("SCardForgetReaderW" scard-forget-reader-w :convention :stdcall) long  (|hContext| scardcontext) (|szReaderName| lpcwstr))
(defcfun ("SCardAddReaderToGroupA" scard-add-reader-to-group-a :convention :stdcall) long  (|hContext| scardcontext) (|szReaderName| lpcstr) (|szGroupName| lpcstr))
(defcfun ("SCardAddReaderToGroupW" scard-add-reader-to-group-w :convention :stdcall) long  (|hContext| scardcontext) (|szReaderName| lpcwstr) (|szGroupName| lpcwstr))
(defcfun ("SCardRemoveReaderFromGroupA" scard-remove-reader-from-group-a :convention :stdcall) long  (|hContext| scardcontext) (|szReaderName| lpcstr) (|szGroupName| lpcstr))
(defcfun ("SCardRemoveReaderFromGroupW" scard-remove-reader-from-group-w :convention :stdcall) long  (|hContext| scardcontext) (|szReaderName| lpcwstr) (|szGroupName| lpcwstr))
(defcfun ("SCardIntroduceCardTypeA" scard-introduce-card-type-a :convention :stdcall) long  (|hContext| scardcontext) (|szCardName| lpcstr) (|pguidPrimaryProvider| lpcguid) (|rgguidInterfaces| lpcguid) (|dwInterfaceCount| dword) (|pbAtr| lpcbyte) (|pbAtrMask| lpcbyte) (|cbAtrLen| dword))
(defcfun ("SCardIntroduceCardTypeW" scard-introduce-card-type-w :convention :stdcall) long  (|hContext| scardcontext) (|szCardName| lpcwstr) (|pguidPrimaryProvider| lpcguid) (|rgguidInterfaces| lpcguid) (|dwInterfaceCount| dword) (|pbAtr| lpcbyte) (|pbAtrMask| lpcbyte) (|cbAtrLen| dword))
(defcfun ("SCardSetCardTypeProviderNameA" scard-set-card-type-provider-name-a :convention :stdcall) long  (|hContext| scardcontext) (|szCardName| lpcstr) (|dwProviderId| dword) (|szProvider| lpcstr))
(defcfun ("SCardSetCardTypeProviderNameW" scard-set-card-type-provider-name-w :convention :stdcall) long  (|hContext| scardcontext) (|szCardName| lpcwstr) (|dwProviderId| dword) (|szProvider| lpcwstr))
(defcfun ("SCardForgetCardTypeA" scard-forget-card-type-a :convention :stdcall) long  (|hContext| scardcontext) (|szCardName| lpcstr))
(defcfun ("SCardForgetCardTypeW" scard-forget-card-type-w :convention :stdcall) long  (|hContext| scardcontext) (|szCardName| lpcwstr))
(defcfun ("SCardFreeMemory" scard-free-memory :convention :stdcall) long  (|hContext| scardcontext) (|pvMem| lpcvoid))
(defcfun ("SCardAccessStartedEvent" scard-access-started-event :convention :stdcall) handle )
(defcfun ("SCardReleaseStartedEvent" scard-release-started-event :convention :stdcall) :void )
(defcfun ("SCardLocateCardsA" scard-locate-cards-a :convention :stdcall) long  (|hContext| scardcontext) (|mszCards| lpcstr) (|rgReaderStates| lpscard_readerstatea) (|cReaders| dword))
(defcfun ("SCardLocateCardsW" scard-locate-cards-w :convention :stdcall) long  (|hContext| scardcontext) (|mszCards| lpcwstr) (|rgReaderStates| lpscard_readerstatew) (|cReaders| dword))
(defcfun ("SCardLocateCardsByATRA" scard-locate-cards-by-atra :convention :stdcall) long  (|hContext| scardcontext) (|rgAtrMasks| lpscard_atrmask) (|cAtrs| dword) (|rgReaderStates| lpscard_readerstatea) (|cReaders| dword))
(defcfun ("SCardLocateCardsByATRW" scard-locate-cards-by-atrw :convention :stdcall) long  (|hContext| scardcontext) (|rgAtrMasks| lpscard_atrmask) (|cAtrs| dword) (|rgReaderStates| lpscard_readerstatew) (|cReaders| dword))
(defcfun ("SCardGetStatusChangeA" scard-get-status-change-a :convention :stdcall) long  (|hContext| scardcontext) (|dwTimeout| dword) (|rgReaderStates| lpscard_readerstatea) (|cReaders| dword))
(defcfun ("SCardGetStatusChangeW" scard-get-status-change-w :convention :stdcall) long  (|hContext| scardcontext) (|dwTimeout| dword) (|rgReaderStates| lpscard_readerstatew) (|cReaders| dword))
(defcfun ("SCardCancel" scard-cancel :convention :stdcall) long  (|hContext| scardcontext))
(defcfun ("SCardConnectA" scard-connect-a :convention :stdcall) long  (|hContext| scardcontext) (|szReader| lpcstr) (|dwShareMode| dword) (|dwPreferredProtocols| dword) (|phCard| lpscardhandle) (|pdwActiveProtocol| lpdword))
(defcfun ("SCardConnectW" scard-connect-w :convention :stdcall) long  (|hContext| scardcontext) (|szReader| lpcwstr) (|dwShareMode| dword) (|dwPreferredProtocols| dword) (|phCard| lpscardhandle) (|pdwActiveProtocol| lpdword))
(defcfun ("SCardReconnect" scard-reconnect :convention :stdcall) long  (|hCard| scardhandle) (|dwShareMode| dword) (|dwPreferredProtocols| dword) (|dwInitialization| dword) (|pdwActiveProtocol| lpdword))
(defcfun ("SCardDisconnect" scard-disconnect :convention :stdcall) long  (|hCard| scardhandle) (|dwDisposition| dword))
(defcfun ("SCardBeginTransaction" scard-begin-transaction :convention :stdcall) long  (|hCard| scardhandle))
(defcfun ("SCardEndTransaction" scard-end-transaction :convention :stdcall) long  (|hCard| scardhandle) (|dwDisposition| dword))
(defcfun ("SCardCancelTransaction" scard-cancel-transaction :convention :stdcall) long  (|hCard| scardhandle))
(defcfun ("SCardState" scard-state :convention :stdcall) long  (|hCard| scardhandle) (|pdwState| lpdword) (|pdwProtocol| lpdword) (|pbAtr| lpbyte) (|pcbAtrLen| lpdword))
(defcfun ("SCardStatusA" scard-status-a :convention :stdcall) long  (|hCard| scardhandle) (|szReaderName| lpstr) (|pcchReaderLen| lpdword) (|pdwState| lpdword) (|pdwProtocol| lpdword) (|pbAtr| lpbyte) (|pcbAtrLen| lpdword))
(defcfun ("SCardStatusW" scard-status-w :convention :stdcall) long  (|hCard| scardhandle) (|szReaderName| lpwstr) (|pcchReaderLen| lpdword) (|pdwState| lpdword) (|pdwProtocol| lpdword) (|pbAtr| lpbyte) (|pcbAtrLen| lpdword))
(defcfun ("SCardTransmit" scard-transmit :convention :stdcall) long  (|hCard| scardhandle) (|pioSendPci| lpcscard_io_request) (|pbSendBuffer| lpcbyte) (|cbSendLength| dword) (|pioRecvPci| lpscard_io_request) (|pbRecvBuffer| lpbyte) (|pcbRecvLength| lpdword))
(defcfun ("SCardControl" scard-control :convention :stdcall) long  (|hCard| scardhandle) (|dwControlCode| dword) (|lpInBuffer| lpcvoid) (|nInBufferSize| dword) (|lpOutBuffer| lpvoid) (|nOutBufferSize| dword) (|lpBytesReturned| lpdword))
(defcfun ("SCardGetAttrib" scard-get-attrib :convention :stdcall) long  (|hCard| scardhandle) (|dwAttrId| dword) (|pbAttr| lpbyte) (|pcbAttrLen| lpdword))
(defcfun ("SCardSetAttrib" scard-set-attrib :convention :stdcall) long  (|hCard| scardhandle) (|dwAttrId| dword) (|pbAttr| lpcbyte) (|cbAttrLen| dword))
(defcfun ("SCardUIDlgSelectCardA" scard-ui-dlg-select-card-a :convention :stdcall) long  (arg0 lpopencardname_exa))
(defcfun ("SCardUIDlgSelectCardW" scard-ui-dlg-select-card-w :convention :stdcall) long  (arg0 lpopencardname_exw))
(defcfun ("GetOpenCardNameA" get-open-card-name-a :convention :stdcall) long  (arg0 lpopencardnamea))
(defcfun ("GetOpenCardNameW" get-open-card-name-w :convention :stdcall) long  (arg0 lpopencardnamew))
(defcfun ("SCardDlgExtendedError" scard-dlg-extended-error :convention :stdcall) long )
(defcfun ("CreatePropertySheetPageA" create-property-sheet-page-a :convention :stdcall) hpropsheetpage  (|constPropSheetPagePointer| lpcpropsheetpagea))
(defcfun ("CreatePropertySheetPageW" create-property-sheet-page-w :convention :stdcall) hpropsheetpage  (|constPropSheetPagePointer| lpcpropsheetpagew))
(defcfun ("DestroyPropertySheetPage" destroy-property-sheet-page :convention :stdcall) winbool  (arg0 hpropsheetpage))
(defcfun ("PropertySheetA" property-sheet-a :convention :stdcall) int_ptr  (arg0 lpcpropsheetheadera))
(defcfun ("PropertySheetW" property-sheet-w :convention :stdcall) int_ptr  (arg0 lpcpropsheetheaderw))
(defcfun ("EnumPrintersA" enum-printers-a :convention :stdcall) winbool  (|Flags| dword) (|Name| lpstr) (|Level| dword) (|pPrinterEnum| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword) (|pcReturned| lpdword))
(defcfun ("EnumPrintersW" enum-printers-w :convention :stdcall) winbool  (|Flags| dword) (|Name| lpwstr) (|Level| dword) (|pPrinterEnum| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword) (|pcReturned| lpdword))
(defcfun ("OpenPrinterA" open-printer-a :convention :stdcall) winbool  (|pPrinterName| lpstr) (|phPrinter| lphandle) (|pDefault| lpprinter_defaultsa))
(defcfun ("OpenPrinterW" open-printer-w :convention :stdcall) winbool  (|pPrinterName| lpwstr) (|phPrinter| lphandle) (|pDefault| lpprinter_defaultsw))
(defcfun ("ResetPrinterA" reset-printer-a :convention :stdcall) winbool  (|hPrinter| handle) (|pDefault| lpprinter_defaultsa))
(defcfun ("ResetPrinterW" reset-printer-w :convention :stdcall) winbool  (|hPrinter| handle) (|pDefault| lpprinter_defaultsw))
(defcfun ("SetJobA" set-job-a :convention :stdcall) winbool  (|hPrinter| handle) (|JobId| dword) (|Level| dword) (|pJob| lpbyte) (|Command| dword))
(defcfun ("SetJobW" set-job-w :convention :stdcall) winbool  (|hPrinter| handle) (|JobId| dword) (|Level| dword) (|pJob| lpbyte) (|Command| dword))
(defcfun ("GetJobA" get-job-a :convention :stdcall) winbool  (|hPrinter| handle) (|JobId| dword) (|Level| dword) (|pJob| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword))
(defcfun ("GetJobW" get-job-w :convention :stdcall) winbool  (|hPrinter| handle) (|JobId| dword) (|Level| dword) (|pJob| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword))
(defcfun ("EnumJobsA" enum-jobs-a :convention :stdcall) winbool  (|hPrinter| handle) (|FirstJob| dword) (|NoJobs| dword) (|Level| dword) (|pJob| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword) (|pcReturned| lpdword))
(defcfun ("EnumJobsW" enum-jobs-w :convention :stdcall) winbool  (|hPrinter| handle) (|FirstJob| dword) (|NoJobs| dword) (|Level| dword) (|pJob| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword) (|pcReturned| lpdword))
(defcfun ("AddPrinterA" add-printer-a :convention :stdcall) handle  (|pName| lpstr) (|Level| dword) (|pPrinter| lpbyte))
(defcfun ("AddPrinterW" add-printer-w :convention :stdcall) handle  (|pName| lpwstr) (|Level| dword) (|pPrinter| lpbyte))
(defcfun ("DeletePrinter" delete-printer :convention :stdcall) winbool  (|hPrinter| handle))
(defcfun ("SetPrinterA" set-printer-a :convention :stdcall) winbool  (|hPrinter| handle) (|Level| dword) (|pPrinter| lpbyte) (|Command| dword))
(defcfun ("SetPrinterW" set-printer-w :convention :stdcall) winbool  (|hPrinter| handle) (|Level| dword) (|pPrinter| lpbyte) (|Command| dword))
(defcfun ("GetPrinterA" get-printer-a :convention :stdcall) winbool  (|hPrinter| handle) (|Level| dword) (|pPrinter| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword))
(defcfun ("GetPrinterW" get-printer-w :convention :stdcall) winbool  (|hPrinter| handle) (|Level| dword) (|pPrinter| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword))
(defcfun ("AddPrinterDriverA" add-printer-driver-a :convention :stdcall) winbool  (|pName| lpstr) (|Level| dword) (|pDriverInfo| lpbyte))
(defcfun ("AddPrinterDriverW" add-printer-driver-w :convention :stdcall) winbool  (|pName| lpwstr) (|Level| dword) (|pDriverInfo| lpbyte))
(defcfun ("AddPrinterDriverExA" add-printer-driver-ex-a :convention :stdcall) winbool  (|pName| lpstr) (|Level| dword) (|pDriverInfo| lpbyte) (|dwFileCopyFlags| dword))
(defcfun ("AddPrinterDriverExW" add-printer-driver-ex-w :convention :stdcall) winbool  (|pName| lpwstr) (|Level| dword) (|pDriverInfo| lpbyte) (|dwFileCopyFlags| dword))
(defcfun ("EnumPrinterDriversA" enum-printer-drivers-a :convention :stdcall) winbool  (|pName| lpstr) (|pEnvironment| lpstr) (|Level| dword) (|pDriverInfo| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword) (|pcReturned| lpdword))
(defcfun ("EnumPrinterDriversW" enum-printer-drivers-w :convention :stdcall) winbool  (|pName| lpwstr) (|pEnvironment| lpwstr) (|Level| dword) (|pDriverInfo| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword) (|pcReturned| lpdword))
(defcfun ("GetPrinterDriverA" get-printer-driver-a :convention :stdcall) winbool  (|hPrinter| handle) (|pEnvironment| lpstr) (|Level| dword) (|pDriverInfo| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword))
(defcfun ("GetPrinterDriverW" get-printer-driver-w :convention :stdcall) winbool  (|hPrinter| handle) (|pEnvironment| lpwstr) (|Level| dword) (|pDriverInfo| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword))
(defcfun ("GetPrinterDriverDirectoryA" get-printer-driver-directory-a :convention :stdcall) winbool  (|pName| lpstr) (|pEnvironment| lpstr) (|Level| dword) (|pDriverDirectory| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword))
(defcfun ("GetPrinterDriverDirectoryW" get-printer-driver-directory-w :convention :stdcall) winbool  (|pName| lpwstr) (|pEnvironment| lpwstr) (|Level| dword) (|pDriverDirectory| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword))
(defcfun ("DeletePrinterDriverA" delete-printer-driver-a :convention :stdcall) winbool  (|pName| lpstr) (|pEnvironment| lpstr) (|pDriverName| lpstr))
(defcfun ("DeletePrinterDriverW" delete-printer-driver-w :convention :stdcall) winbool  (|pName| lpwstr) (|pEnvironment| lpwstr) (|pDriverName| lpwstr))
(defcfun ("DeletePrinterDriverExA" delete-printer-driver-ex-a :convention :stdcall) winbool  (|pName| lpstr) (|pEnvironment| lpstr) (|pDriverName| lpstr) (|dwDeleteFlag| dword) (|dwVersionFlag| dword))
(defcfun ("DeletePrinterDriverExW" delete-printer-driver-ex-w :convention :stdcall) winbool  (|pName| lpwstr) (|pEnvironment| lpwstr) (|pDriverName| lpwstr) (|dwDeleteFlag| dword) (|dwVersionFlag| dword))
(defcfun ("AddPrintProcessorA" add-print-processor-a :convention :stdcall) winbool  (|pName| lpstr) (|pEnvironment| lpstr) (|pPathName| lpstr) (|pPrintProcessorName| lpstr))
(defcfun ("AddPrintProcessorW" add-print-processor-w :convention :stdcall) winbool  (|pName| lpwstr) (|pEnvironment| lpwstr) (|pPathName| lpwstr) (|pPrintProcessorName| lpwstr))
(defcfun ("EnumPrintProcessorsA" enum-print-processors-a :convention :stdcall) winbool  (|pName| lpstr) (|pEnvironment| lpstr) (|Level| dword) (|pPrintProcessorInfo| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword) (|pcReturned| lpdword))
(defcfun ("EnumPrintProcessorsW" enum-print-processors-w :convention :stdcall) winbool  (|pName| lpwstr) (|pEnvironment| lpwstr) (|Level| dword) (|pPrintProcessorInfo| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword) (|pcReturned| lpdword))
(defcfun ("GetPrintProcessorDirectoryA" get-print-processor-directory-a :convention :stdcall) winbool  (|pName| lpstr) (|pEnvironment| lpstr) (|Level| dword) (|pPrintProcessorInfo| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword))
(defcfun ("GetPrintProcessorDirectoryW" get-print-processor-directory-w :convention :stdcall) winbool  (|pName| lpwstr) (|pEnvironment| lpwstr) (|Level| dword) (|pPrintProcessorInfo| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword))
(defcfun ("EnumPrintProcessorDatatypesA" enum-print-processor-datatypes-a :convention :stdcall) winbool  (|pName| lpstr) (|pPrintProcessorName| lpstr) (|Level| dword) (|pDatatypes| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword) (|pcReturned| lpdword))
(defcfun ("EnumPrintProcessorDatatypesW" enum-print-processor-datatypes-w :convention :stdcall) winbool  (|pName| lpwstr) (|pPrintProcessorName| lpwstr) (|Level| dword) (|pDatatypes| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword) (|pcReturned| lpdword))
(defcfun ("DeletePrintProcessorA" delete-print-processor-a :convention :stdcall) winbool  (|pName| lpstr) (|pEnvironment| lpstr) (|pPrintProcessorName| lpstr))
(defcfun ("DeletePrintProcessorW" delete-print-processor-w :convention :stdcall) winbool  (|pName| lpwstr) (|pEnvironment| lpwstr) (|pPrintProcessorName| lpwstr))
(defcfun ("StartDocPrinterA" start-doc-printer-a :convention :stdcall) dword  (|hPrinter| handle) (|Level| dword) (|pDocInfo| lpbyte))
(defcfun ("StartDocPrinterW" start-doc-printer-w :convention :stdcall) dword  (|hPrinter| handle) (|Level| dword) (|pDocInfo| lpbyte))
(defcfun ("StartPagePrinter" start-page-printer :convention :stdcall) winbool  (|hPrinter| handle))
(defcfun ("WritePrinter" write-printer :convention :stdcall) winbool  (|hPrinter| handle) (|pBuf| lpvoid) (|cbBuf| dword) (|pcWritten| lpdword))
(defcfun ("FlushPrinter" flush-printer :convention :stdcall) winbool  (|hPrinter| handle) (|pBuf| lpvoid) (|cbBuf| dword) (|pcWritten| lpdword) (|cSleep| dword))
(defcfun ("EndPagePrinter" end-page-printer :convention :stdcall) winbool  (|hPrinter| handle))
(defcfun ("AbortPrinter" abort-printer :convention :stdcall) winbool  (|hPrinter| handle))
(defcfun ("ReadPrinter" read-printer :convention :stdcall) winbool  (|hPrinter| handle) (|pBuf| lpvoid) (|cbBuf| dword) (|pNoBytesRead| lpdword))
(defcfun ("EndDocPrinter" end-doc-printer :convention :stdcall) winbool  (|hPrinter| handle))
(defcfun ("AddJobA" add-job-a :convention :stdcall) winbool  (|hPrinter| handle) (|Level| dword) (|pData| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword))
(defcfun ("AddJobW" add-job-w :convention :stdcall) winbool  (|hPrinter| handle) (|Level| dword) (|pData| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword))
(defcfun ("ScheduleJob" schedule-job :convention :stdcall) winbool  (|hPrinter| handle) (|JobId| dword))
(defcfun ("PrinterProperties" printer-properties :convention :stdcall) winbool  (|hWnd| hwnd) (|hPrinter| handle))
(defcfun ("DocumentPropertiesA" document-properties-a :convention :stdcall) long  (|hWnd| hwnd) (|hPrinter| handle) (|pDeviceName| lpstr) (|pDevModeOutput| pdevmodea) (|pDevModeInput| pdevmodea) (|fMode| dword))
(defcfun ("DocumentPropertiesW" document-properties-w :convention :stdcall) long  (|hWnd| hwnd) (|hPrinter| handle) (|pDeviceName| lpwstr) (|pDevModeOutput| pdevmodew) (|pDevModeInput| pdevmodew) (|fMode| dword))
(defcfun ("AdvancedDocumentPropertiesA" advanced-document-properties-a :convention :stdcall) long  (|hWnd| hwnd) (|hPrinter| handle) (|pDeviceName| lpstr) (|pDevModeOutput| pdevmodea) (|pDevModeInput| pdevmodea))
(defcfun ("AdvancedDocumentPropertiesW" advanced-document-properties-w :convention :stdcall) long  (|hWnd| hwnd) (|hPrinter| handle) (|pDeviceName| lpwstr) (|pDevModeOutput| pdevmodew) (|pDevModeInput| pdevmodew))
(defcfun ("ExtDeviceMode" ext-device-mode) long  (|hWnd| hwnd) (|hInst| handle) (|pDevModeOutput| lpdevmodea) (|pDeviceName| lpstr) (|pPort| lpstr) (|pDevModeInput| lpdevmodea) (|pProfile| lpstr) (|fMode| dword))
(defcfun ("GetPrinterDataA" get-printer-data-a :convention :stdcall) dword  (|hPrinter| handle) (|pValueName| lpstr) (|pType| lpdword) (|pData| lpbyte) (|nSize| dword) (|pcbNeeded| lpdword))
(defcfun ("GetPrinterDataW" get-printer-data-w :convention :stdcall) dword  (|hPrinter| handle) (|pValueName| lpwstr) (|pType| lpdword) (|pData| lpbyte) (|nSize| dword) (|pcbNeeded| lpdword))
(defcfun ("GetPrinterDataExA" get-printer-data-ex-a :convention :stdcall) dword  (|hPrinter| handle) (|pKeyName| lpcstr) (|pValueName| lpcstr) (|pType| lpdword) (|pData| lpbyte) (|nSize| dword) (|pcbNeeded| lpdword))
(defcfun ("GetPrinterDataExW" get-printer-data-ex-w :convention :stdcall) dword  (|hPrinter| handle) (|pKeyName| lpcwstr) (|pValueName| lpcwstr) (|pType| lpdword) (|pData| lpbyte) (|nSize| dword) (|pcbNeeded| lpdword))
(defcfun ("EnumPrinterDataA" enum-printer-data-a :convention :stdcall) dword  (|hPrinter| handle) (|dwIndex| dword) (|pValueName| lpstr) (|cbValueName| dword) (|pcbValueName| lpdword) (|pType| lpdword) (|pData| lpbyte) (|cbData| dword) (|pcbData| lpdword))
(defcfun ("EnumPrinterDataW" enum-printer-data-w :convention :stdcall) dword  (|hPrinter| handle) (|dwIndex| dword) (|pValueName| lpwstr) (|cbValueName| dword) (|pcbValueName| lpdword) (|pType| lpdword) (|pData| lpbyte) (|cbData| dword) (|pcbData| lpdword))
(defcfun ("EnumPrinterDataExA" enum-printer-data-ex-a :convention :stdcall) dword  (|hPrinter| handle) (|pKeyName| lpcstr) (|pEnumValues| lpbyte) (|cbEnumValues| dword) (|pcbEnumValues| lpdword) (|pnEnumValues| lpdword))
(defcfun ("EnumPrinterDataExW" enum-printer-data-ex-w :convention :stdcall) dword  (|hPrinter| handle) (|pKeyName| lpcwstr) (|pEnumValues| lpbyte) (|cbEnumValues| dword) (|pcbEnumValues| lpdword) (|pnEnumValues| lpdword))
(defcfun ("EnumPrinterKeyA" enum-printer-key-a :convention :stdcall) dword  (|hPrinter| handle) (|pKeyName| lpcstr) (|pSubkey| lpstr) (|cbSubkey| dword) (|pcbSubkey| lpdword))
(defcfun ("EnumPrinterKeyW" enum-printer-key-w :convention :stdcall) dword  (|hPrinter| handle) (|pKeyName| lpcwstr) (|pSubkey| lpwstr) (|cbSubkey| dword) (|pcbSubkey| lpdword))
(defcfun ("SetPrinterDataA" set-printer-data-a :convention :stdcall) dword  (|hPrinter| handle) (|pValueName| lpstr) (|Type| dword) (|pData| lpbyte) (|cbData| dword))
(defcfun ("SetPrinterDataW" set-printer-data-w :convention :stdcall) dword  (|hPrinter| handle) (|pValueName| lpwstr) (|Type| dword) (|pData| lpbyte) (|cbData| dword))
(defcfun ("SetPrinterDataExA" set-printer-data-ex-a :convention :stdcall) dword  (|hPrinter| handle) (|pKeyName| lpcstr) (|pValueName| lpcstr) (|Type| dword) (|pData| lpbyte) (|cbData| dword))
(defcfun ("SetPrinterDataExW" set-printer-data-ex-w :convention :stdcall) dword  (|hPrinter| handle) (|pKeyName| lpcwstr) (|pValueName| lpcwstr) (|Type| dword) (|pData| lpbyte) (|cbData| dword))
(defcfun ("DeletePrinterDataA" delete-printer-data-a :convention :stdcall) dword  (|hPrinter| handle) (|pValueName| lpstr))
(defcfun ("DeletePrinterDataW" delete-printer-data-w :convention :stdcall) dword  (|hPrinter| handle) (|pValueName| lpwstr))
(defcfun ("DeletePrinterDataExA" delete-printer-data-ex-a :convention :stdcall) dword  (|hPrinter| handle) (|pKeyName| lpcstr) (|pValueName| lpcstr))
(defcfun ("DeletePrinterDataExW" delete-printer-data-ex-w :convention :stdcall) dword  (|hPrinter| handle) (|pKeyName| lpcwstr) (|pValueName| lpcwstr))
(defcfun ("DeletePrinterKeyA" delete-printer-key-a :convention :stdcall) dword  (|hPrinter| handle) (|pKeyName| lpcstr))
(defcfun ("DeletePrinterKeyW" delete-printer-key-w :convention :stdcall) dword  (|hPrinter| handle) (|pKeyName| lpcwstr))
(defcfun ("WaitForPrinterChange" wait-for-printer-change :convention :stdcall) dword  (|hPrinter| handle) (|Flags| dword))
(defcfun ("FindFirstPrinterChangeNotification" find-first-printer-change-notification :convention :stdcall) handle  (|hPrinter| handle) (|fdwFlags| dword) (|fdwOptions| dword) (|pPrinterNotifyOptions| lpvoid))
(defcfun ("FindNextPrinterChangeNotification" find-next-printer-change-notification :convention :stdcall) winbool  (|hChange| handle) (|pdwChange| pdword) (|pPrinterNotifyOptions| lpvoid) (|ppPrinterNotifyInfo| :pointer))
(defcfun ("FreePrinterNotifyInfo" free-printer-notify-info :convention :stdcall) winbool  (|pPrinterNotifyInfo| pprinter_notify_info))
(defcfun ("FindClosePrinterChangeNotification" find-close-printer-change-notification :convention :stdcall) winbool  (|hChange| handle))
(defcfun ("PrinterMessageBoxA" printer-message-box-a :convention :stdcall) dword  (|hPrinter| handle) (|Error| dword) (|hWnd| hwnd) (|pText| lpstr) (|pCaption| lpstr) (|dwType| dword))
(defcfun ("PrinterMessageBoxW" printer-message-box-w :convention :stdcall) dword  (|hPrinter| handle) (|Error| dword) (|hWnd| hwnd) (|pText| lpwstr) (|pCaption| lpwstr) (|dwType| dword))
(defcfun ("ClosePrinter" close-printer :convention :stdcall) winbool  (|hPrinter| handle))
(defcfun ("AddFormA" add-form-a :convention :stdcall) winbool  (|hPrinter| handle) (|Level| dword) (|pForm| lpbyte))
(defcfun ("AddFormW" add-form-w :convention :stdcall) winbool  (|hPrinter| handle) (|Level| dword) (|pForm| lpbyte))
(defcfun ("DeleteFormA" delete-form-a :convention :stdcall) winbool  (|hPrinter| handle) (|pFormName| lpstr))
(defcfun ("DeleteFormW" delete-form-w :convention :stdcall) winbool  (|hPrinter| handle) (|pFormName| lpwstr))
(defcfun ("GetFormA" get-form-a :convention :stdcall) winbool  (|hPrinter| handle) (|pFormName| lpstr) (|Level| dword) (|pForm| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword))
(defcfun ("GetFormW" get-form-w :convention :stdcall) winbool  (|hPrinter| handle) (|pFormName| lpwstr) (|Level| dword) (|pForm| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword))
(defcfun ("SetFormA" set-form-a :convention :stdcall) winbool  (|hPrinter| handle) (|pFormName| lpstr) (|Level| dword) (|pForm| lpbyte))
(defcfun ("SetFormW" set-form-w :convention :stdcall) winbool  (|hPrinter| handle) (|pFormName| lpwstr) (|Level| dword) (|pForm| lpbyte))
(defcfun ("EnumFormsA" enum-forms-a :convention :stdcall) winbool  (|hPrinter| handle) (|Level| dword) (|pForm| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword) (|pcReturned| lpdword))
(defcfun ("EnumFormsW" enum-forms-w :convention :stdcall) winbool  (|hPrinter| handle) (|Level| dword) (|pForm| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword) (|pcReturned| lpdword))
(defcfun ("EnumMonitorsA" enum-monitors-a :convention :stdcall) winbool  (|pName| lpstr) (|Level| dword) (|pMonitor| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword) (|pcReturned| lpdword))
(defcfun ("EnumMonitorsW" enum-monitors-w :convention :stdcall) winbool  (|pName| lpwstr) (|Level| dword) (|pMonitor| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword) (|pcReturned| lpdword))
(defcfun ("AddMonitorA" add-monitor-a :convention :stdcall) winbool  (|pName| lpstr) (|Level| dword) (|pMonitorInfo| lpbyte))
(defcfun ("AddMonitorW" add-monitor-w :convention :stdcall) winbool  (|pName| lpwstr) (|Level| dword) (|pMonitorInfo| lpbyte))
(defcfun ("DeleteMonitorA" delete-monitor-a :convention :stdcall) winbool  (|pName| lpstr) (|pEnvironment| lpstr) (|pMonitorName| lpstr))
(defcfun ("DeleteMonitorW" delete-monitor-w :convention :stdcall) winbool  (|pName| lpwstr) (|pEnvironment| lpwstr) (|pMonitorName| lpwstr))
(defcfun ("EnumPortsA" enum-ports-a :convention :stdcall) winbool  (|pName| lpstr) (|Level| dword) (|pPorts| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword) (|pcReturned| lpdword))
(defcfun ("EnumPortsW" enum-ports-w :convention :stdcall) winbool  (|pName| lpwstr) (|Level| dword) (|pPorts| lpbyte) (|cbBuf| dword) (|pcbNeeded| lpdword) (|pcReturned| lpdword))
(defcfun ("AddPortA" add-port-a :convention :stdcall) winbool  (|pName| lpstr) (|hWnd| hwnd) (|pMonitorName| lpstr))
(defcfun ("AddPortW" add-port-w :convention :stdcall) winbool  (|pName| lpwstr) (|hWnd| hwnd) (|pMonitorName| lpwstr))
(defcfun ("ConfigurePortA" configure-port-a :convention :stdcall) winbool  (|pName| lpstr) (|hWnd| hwnd) (|pPortName| lpstr))
(defcfun ("ConfigurePortW" configure-port-w :convention :stdcall) winbool  (|pName| lpwstr) (|hWnd| hwnd) (|pPortName| lpwstr))
(defcfun ("DeletePortA" delete-port-a :convention :stdcall) winbool  (|pName| lpstr) (|hWnd| hwnd) (|pPortName| lpstr))
(defcfun ("DeletePortW" delete-port-w :convention :stdcall) winbool  (|pName| lpwstr) (|hWnd| hwnd) (|pPortName| lpwstr))
(defcfun ("XcvDataW" xcv-data-w :convention :stdcall) winbool  (|hXcv| handle) (|pszDataName| pcwstr) (|pInputData| pbyte) (|cbInputData| dword) (|pOutputData| pbyte) (|cbOutputData| dword) (|pcbOutputNeeded| pdword) (|pdwStatus| pdword))
(defcfun ("GetDefaultPrinterA" get-default-printer-a :convention :stdcall) winbool  (|pszBuffer| lpstr) (|pcchBuffer| lpdword))
(defcfun ("GetDefaultPrinterW" get-default-printer-w :convention :stdcall) winbool  (|pszBuffer| lpwstr) (|pcchBuffer| lpdword))
(defcfun ("SetDefaultPrinterA" set-default-printer-a :convention :stdcall) winbool  (|pszPrinter| lpcstr))
(defcfun ("SetDefaultPrinterW" set-default-printer-w :convention :stdcall) winbool  (|pszPrinter| lpcwstr))
(defcfun ("SetPortA" set-port-a :convention :stdcall) winbool  (|pName| lpstr) (|pPortName| lpstr) (|dwLevel| dword) (|pPortInfo| lpbyte))
(defcfun ("SetPortW" set-port-w :convention :stdcall) winbool  (|pName| lpwstr) (|pPortName| lpwstr) (|dwLevel| dword) (|pPortInfo| lpbyte))
(defcfun ("AddPrinterConnectionA" add-printer-connection-a :convention :stdcall) winbool  (|pName| lpstr))
(defcfun ("AddPrinterConnectionW" add-printer-connection-w :convention :stdcall) winbool  (|pName| lpwstr))
(defcfun ("DeletePrinterConnectionA" delete-printer-connection-a :convention :stdcall) winbool  (|pName| lpstr))
(defcfun ("DeletePrinterConnectionW" delete-printer-connection-w :convention :stdcall) winbool  (|pName| lpwstr))
(defcfun ("ConnectToPrinterDlg" connect-to-printer-dlg :convention :stdcall) handle  (|hwnd| hwnd) (|Flags| dword))
(defcfun ("AddPrintProvidorA" add-print-providor-a :convention :stdcall) winbool  (|pName| lpstr) (|level| dword) (|pProvidorInfo| lpbyte))
(defcfun ("AddPrintProvidorW" add-print-providor-w :convention :stdcall) winbool  (|pName| lpwstr) (|level| dword) (|pProvidorInfo| lpbyte))
(defcfun ("DeletePrintProvidorA" delete-print-providor-a :convention :stdcall) winbool  (|pName| lpstr) (|pEnvironment| lpstr) (|pPrintProvidorName| lpstr))
(defcfun ("DeletePrintProvidorW" delete-print-providor-w :convention :stdcall) winbool  (|pName| lpwstr) (|pEnvironment| lpwstr) (|pPrintProvidorName| lpwstr))
(defcfun ("IsValidDevmodeA" is-valid-devmode-a :convention :stdcall) winbool  (|pDevmode| pdevmodea) (|DevmodeSize| |size_t|))
(defcfun ("IsValidDevmodeW" is-valid-devmode-w :convention :stdcall) winbool  (|pDevmode| pdevmodew) (|DevmodeSize| |size_t|))
(defcfun ("_set_purecall_handler" %set-purecall-handler) |_purecall_handler|  (|_Handler| |_purecall_handler|))
(defcfun ("_get_purecall_handler" %get-purecall-handler) |_purecall_handler| )
(defcfun ("_set_invalid_parameter_handler" %set-invalid-parameter-handler) |_invalid_parameter_handler|  (|_Handler| |_invalid_parameter_handler|))
(defcfun ("_get_invalid_parameter_handler" %get-invalid-parameter-handler) |_invalid_parameter_handler| )
(defcfun ("_errno" %errno) :pointer )
(defcfun ("_set_errno" %set-errno) |errno_t|  (|_Value| :int))
(defcfun ("_get_errno" %get-errno) |errno_t|  (|_Value| :pointer))
(defcfun ("__doserrno" %%doserrno) :pointer )
(defcfun ("_set_doserrno" %set-doserrno) |errno_t|  (|_Value| :unsigned-long))
(defcfun ("_get_doserrno" %get-doserrno) |errno_t|  (|_Value| :pointer))
(defcfun ("__p___argc" %%p---argc) :pointer )
(defcfun ("__p___argv" %%p---argv) :pointer )
(defcfun ("__p___wargv" %%p---wargv) :pointer )
(defcfun ("__p__environ" %%p--environ) :pointer )
(defcfun ("__p__wenviron" %%p--wenviron) :pointer )
(defcfun ("__p__pgmptr" %%p--pgmptr) :pointer )
(defcfun ("__p__wpgmptr" %%p--wpgmptr) :pointer )
(defcfun ("_get_pgmptr" %get-pgmptr) |errno_t|  (|_Value| :pointer))
(defcfun ("_get_wpgmptr" %get-wpgmptr) |errno_t|  (|_Value| :pointer))
(defcfun ("_set_fmode" %set-fmode) |errno_t|  (|_Mode| :int))
(defcfun ("_get_fmode" %get-fmode) |errno_t|  (|_PMode| :pointer))
(defcfun ("_get_osplatform" %get-osplatform) |errno_t|  (|_Value| :pointer))
(defcfun ("_get_osver" %get-osver) |errno_t|  (|_Value| :pointer))
(defcfun ("_get_winver" %get-winver) |errno_t|  (|_Value| :pointer))
(defcfun ("_get_winmajor" %get-winmajor) |errno_t|  (|_Value| :pointer))
(defcfun ("_get_winminor" %get-winminor) |errno_t|  (|_Value| :pointer))
(defcfun ("exit" exit) :void  (|_Code| :int))
(defcfun ("_exit" %exit) :void  (|_Code| :int))
(defcfun ("_Exit" %exit) :void  (arg0 :int))
(defcfun ("abort" abort) :void )
(defcfun ("_set_abort_behavior" %set-abort-behavior) :unsigned-int  (|_Flags| :unsigned-int) (|_Mask| :unsigned-int))
(defcfun ("abs" abs) :int  (_x :int))
(defcfun ("labs" labs) :long  (_x :long))
(defcfun ("_abs64" %abs64) :long-long  (arg0 :long-long))
(defcfun ("atexit" atexit) :int  (arg0 :pointer))
(defcfun ("atof" atof) :double  (|_String| :pointer))
(defcfun ("_atof_l" %atof-l) :double  (|_String| :pointer) (|_Locale| |_locale_t|))
(defcfun ("atoi" atoi) :int  (|_Str| :pointer))
(defcfun ("_atoi_l" %atoi-l) :int  (|_Str| :pointer) (|_Locale| |_locale_t|))
(defcfun ("atol" atol) :long  (|_Str| :pointer))
(defcfun ("_atol_l" %atol-l) :long  (|_Str| :pointer) (|_Locale| |_locale_t|))
(defcfun ("bsearch" bsearch) :pointer  (|_Key| :pointer) (|_Base| :pointer) (|_NumOfElements| |size_t|) (|_SizeOfElements| |size_t|) (|_PtFuncCompare| :pointer))
(defcfun ("qsort" qsort) :void  (|_Base| :pointer) (|_NumOfElements| |size_t|) (|_SizeOfElements| |size_t|) (|_PtFuncCompare| :pointer))
(defcfun ("_byteswap_ushort" %byteswap-ushort) :unsigned-short  (|_Short| :unsigned-short))
(defcfun ("_byteswap_uint64" %byteswap-uint64) :unsigned-long-long  (|_Int64| :unsigned-long-long))
(defcfun ("div" div) |div_t|  (|_Numerator| :int) (|_Denominator| :int))
(defcfun ("getenv" getenv) :pointer  (|_VarName| :pointer))
(defcfun ("_itoa" %itoa) :pointer  (|_Value| :int) (|_Dest| :pointer) (|_Radix| :int))
(defcfun ("_i64toa" %i64toa) :pointer  (|_Val| :long-long) (|_DstBuf| :pointer) (|_Radix| :int))
(defcfun ("_ui64toa" %ui64toa) :pointer  (|_Val| :unsigned-long-long) (|_DstBuf| :pointer) (|_Radix| :int))
(defcfun ("_atoi64" %atoi64) :long-long  (|_String| :pointer))
(defcfun ("_atoi64_l" %atoi64-l) :long-long  (|_String| :pointer) (|_Locale| |_locale_t|))
(defcfun ("_strtoi64" %strtoi64) :long-long  (|_String| :pointer) (|_EndPtr| :pointer) (|_Radix| :int))
(defcfun ("_strtoi64_l" %strtoi64-l) :long-long  (|_String| :pointer) (|_EndPtr| :pointer) (|_Radix| :int) (|_Locale| |_locale_t|))
(defcfun ("_strtoui64" %strtoui64) :unsigned-long-long  (|_String| :pointer) (|_EndPtr| :pointer) (|_Radix| :int))
(defcfun ("_strtoui64_l" %strtoui64-l) :unsigned-long-long  (|_String| :pointer) (|_EndPtr| :pointer) (|_Radix| :int) (|_Locale| |_locale_t|))
(defcfun ("ldiv" ldiv) |ldiv_t|  (|_Numerator| :long) (|_Denominator| :long))
(defcfun ("_ltoa" %ltoa) :pointer  (|_Value| :long) (|_Dest| :pointer) (|_Radix| :int))
(defcfun ("mblen" mblen) :int  (|_Ch| :pointer) (|_MaxCount| |size_t|))
(defcfun ("_mblen_l" %mblen-l) :int  (|_Ch| :pointer) (|_MaxCount| |size_t|) (|_Locale| |_locale_t|))
(defcfun ("_mbstrlen" %mbstrlen) |size_t|  (|_Str| :pointer))
(defcfun ("_mbstrlen_l" %mbstrlen-l) |size_t|  (|_Str| :pointer) (|_Locale| |_locale_t|))
(defcfun ("_mbstrnlen" %mbstrnlen) |size_t|  (|_Str| :pointer) (|_MaxCount| |size_t|))
(defcfun ("_mbstrnlen_l" %mbstrnlen-l) |size_t|  (|_Str| :pointer) (|_MaxCount| |size_t|) (|_Locale| |_locale_t|))
(defcfun ("mbtowc" mbtowc) :int  (|_DstCh| :pointer) (|_SrcCh| :pointer) (|_SrcSizeInBytes| |size_t|))
(defcfun ("_mbtowc_l" %mbtowc-l) :int  (|_DstCh| :pointer) (|_SrcCh| :pointer) (|_SrcSizeInBytes| |size_t|) (|_Locale| |_locale_t|))
(defcfun ("mbstowcs" mbstowcs) |size_t|  (|_Dest| :pointer) (|_Source| :pointer) (|_MaxCount| |size_t|))
(defcfun ("_mbstowcs_l" %mbstowcs-l) |size_t|  (|_Dest| :pointer) (|_Source| :pointer) (|_MaxCount| |size_t|) (|_Locale| |_locale_t|))
(defcfun ("rand" rand) :int )
(defcfun ("_set_error_mode" %set-error-mode) :int  (|_Mode| :int))
(defcfun ("srand" srand) :void  (|_Seed| :unsigned-int))
(defcfun ("strtod" strtod) :double  (|_Str| :pointer) (|_EndPtr| :pointer))
(defcfun ("strtof" strtof) :float  (|nptr| :pointer) (|endptr| :pointer))
(defcfun ("strtold" strtold) :long-double  (arg0 :pointer) (arg1 :pointer))
(defcfun ("__mingw_strtof" %%mingw-strtof) :float  (|__restrict__| :pointer) (|__restrict__| :pointer))
(defcfun ("__mingw_strtold" %%mingw-strtold) :long-double  (|__restrict__| :pointer) (|__restrict__| :pointer))
(defcfun ("_strtod_l" %strtod-l) :double  (|_Str| :pointer) (|_EndPtr| :pointer) (|_Locale| |_locale_t|))
(defcfun ("strtol" strtol) :long  (|_Str| :pointer) (|_EndPtr| :pointer) (|_Radix| :int))
(defcfun ("_strtol_l" %strtol-l) :long  (|_Str| :pointer) (|_EndPtr| :pointer) (|_Radix| :int) (|_Locale| |_locale_t|))
(defcfun ("strtoul" strtoul) :unsigned-long  (|_Str| :pointer) (|_EndPtr| :pointer) (|_Radix| :int))
(defcfun ("_strtoul_l" %strtoul-l) :unsigned-long  (|_Str| :pointer) (|_EndPtr| :pointer) (|_Radix| :int) (|_Locale| |_locale_t|))
(defcfun ("system" system) :int  (|_Command| :pointer))
(defcfun ("_ultoa" %ultoa) :pointer  (|_Value| :unsigned-long) (|_Dest| :pointer) (|_Radix| :int))
(defcfun ("wctomb" wctomb) :int  (|_MbCh| :pointer) (|_WCh| |wchar_t|))
(defcfun ("_wctomb_l" %wctomb-l) :int  (|_MbCh| :pointer) (|_WCh| |wchar_t|) (|_Locale| |_locale_t|))
(defcfun ("wcstombs" wcstombs) |size_t|  (|_Dest| :pointer) (|_Source| :pointer) (|_MaxCount| |size_t|))
(defcfun ("_wcstombs_l" %wcstombs-l) |size_t|  (|_Dest| :pointer) (|_Source| :pointer) (|_MaxCount| |size_t|) (|_Locale| |_locale_t|))
(defcfun ("calloc" calloc) :pointer  (|_NumOfElements| |size_t|) (|_SizeOfElements| |size_t|))
(defcfun ("free" free) :void  (|_Memory| :pointer))
(defcfun ("malloc" malloc) :pointer  (|_Size| |size_t|))
(defcfun ("realloc" realloc) :pointer  (|_Memory| :pointer) (|_NewSize| |size_t|))
(defcfun ("_recalloc" %recalloc) :pointer  (|_Memory| :pointer) (|_Count| |size_t|) (|_Size| |size_t|))
(defcfun ("_aligned_free" %aligned-free) :void  (|_Memory| :pointer))
(defcfun ("_aligned_malloc" %aligned-malloc) :pointer  (|_Size| |size_t|) (|_Alignment| |size_t|))
(defcfun ("_aligned_offset_malloc" %aligned-offset-malloc) :pointer  (|_Size| |size_t|) (|_Alignment| |size_t|) (|_Offset| |size_t|))
(defcfun ("_aligned_realloc" %aligned-realloc) :pointer  (|_Memory| :pointer) (|_Size| |size_t|) (|_Alignment| |size_t|))
(defcfun ("_aligned_recalloc" %aligned-recalloc) :pointer  (|_Memory| :pointer) (|_Count| |size_t|) (|_Size| |size_t|) (|_Alignment| |size_t|))
(defcfun ("_aligned_offset_realloc" %aligned-offset-realloc) :pointer  (|_Memory| :pointer) (|_Size| |size_t|) (|_Alignment| |size_t|) (|_Offset| |size_t|))
(defcfun ("_aligned_offset_recalloc" %aligned-offset-recalloc) :pointer  (|_Memory| :pointer) (|_Count| |size_t|) (|_Size| |size_t|) (|_Alignment| |size_t|) (|_Offset| |size_t|))
(defcfun ("_itow" %itow) :pointer  (|_Value| :int) (|_Dest| :pointer) (|_Radix| :int))
(defcfun ("_ltow" %ltow) :pointer  (|_Value| :long) (|_Dest| :pointer) (|_Radix| :int))
(defcfun ("_ultow" %ultow) :pointer  (|_Value| :unsigned-long) (|_Dest| :pointer) (|_Radix| :int))
(defcfun ("wcstod" wcstod) :double  (|_Str| :pointer) (|_EndPtr| :pointer))
(defcfun ("wcstof" wcstof) :float  (|nptr| :pointer) (|endptr| :pointer))
(defcfun ("wcstof" wcstof) :float  (|__restrict__| :pointer) (|__restrict__| :pointer))
(defcfun ("wcstold" wcstold) :long-double  (|__restrict__| :pointer) (|__restrict__| :pointer))
(defcfun ("_wcstod_l" %wcstod-l) :double  (|_Str| :pointer) (|_EndPtr| :pointer) (|_Locale| |_locale_t|))
(defcfun ("wcstol" wcstol) :long  (|_Str| :pointer) (|_EndPtr| :pointer) (|_Radix| :int))
(defcfun ("_wcstol_l" %wcstol-l) :long  (|_Str| :pointer) (|_EndPtr| :pointer) (|_Radix| :int) (|_Locale| |_locale_t|))
(defcfun ("wcstoul" wcstoul) :unsigned-long  (|_Str| :pointer) (|_EndPtr| :pointer) (|_Radix| :int))
(defcfun ("_wcstoul_l" %wcstoul-l) :unsigned-long  (|_Str| :pointer) (|_EndPtr| :pointer) (|_Radix| :int) (|_Locale| |_locale_t|))
(defcfun ("_wgetenv" %wgetenv) :pointer  (|_VarName| :pointer))
(defcfun ("_wsystem" %wsystem) :int  (|_Command| :pointer))
(defcfun ("_wtof" %wtof) :double  (|_Str| :pointer))
(defcfun ("_wtof_l" %wtof-l) :double  (|_Str| :pointer) (|_Locale| |_locale_t|))
(defcfun ("_wtoi" %wtoi) :int  (|_Str| :pointer))
(defcfun ("_wtoi_l" %wtoi-l) :int  (|_Str| :pointer) (|_Locale| |_locale_t|))
(defcfun ("_wtol" %wtol) :long  (|_Str| :pointer))
(defcfun ("_wtol_l" %wtol-l) :long  (|_Str| :pointer) (|_Locale| |_locale_t|))
(defcfun ("_i64tow" %i64tow) :pointer  (|_Val| :long-long) (|_DstBuf| :pointer) (|_Radix| :int))
(defcfun ("_ui64tow" %ui64tow) :pointer  (|_Val| :unsigned-long-long) (|_DstBuf| :pointer) (|_Radix| :int))
(defcfun ("_wtoi64" %wtoi64) :long-long  (|_Str| :pointer))
(defcfun ("_wtoi64_l" %wtoi64-l) :long-long  (|_Str| :pointer) (|_Locale| |_locale_t|))
(defcfun ("_wcstoi64" %wcstoi64) :long-long  (|_Str| :pointer) (|_EndPtr| :pointer) (|_Radix| :int))
(defcfun ("_wcstoi64_l" %wcstoi64-l) :long-long  (|_Str| :pointer) (|_EndPtr| :pointer) (|_Radix| :int) (|_Locale| |_locale_t|))
(defcfun ("_wcstoui64" %wcstoui64) :unsigned-long-long  (|_Str| :pointer) (|_EndPtr| :pointer) (|_Radix| :int))
(defcfun ("_wcstoui64_l" %wcstoui64-l) :unsigned-long-long  (|_Str| :pointer) (|_EndPtr| :pointer) (|_Radix| :int) (|_Locale| |_locale_t|))
(defcfun ("_fullpath" %fullpath) :pointer  (|_FullPath| :pointer) (|_Path| :pointer) (|_SizeInBytes| |size_t|))
(defcfun ("_ecvt" %ecvt) :pointer  (|_Val| :double) (|_NumOfDigits| :int) (|_PtDec| :pointer) (|_PtSign| :pointer))
(defcfun ("_fcvt" %fcvt) :pointer  (|_Val| :double) (|_NumOfDec| :int) (|_PtDec| :pointer) (|_PtSign| :pointer))
(defcfun ("_gcvt" %gcvt) :pointer  (|_Val| :double) (|_NumOfDigits| :int) (|_DstBuf| :pointer))
(defcfun ("_atodbl" %atodbl) :int  (|_Result| :pointer) (|_Str| :pointer))
(defcfun ("_atoldbl" %atoldbl) :int  (|_Result| :pointer) (|_Str| :pointer))
(defcfun ("_atoflt" %atoflt) :int  (|_Result| :pointer) (|_Str| :pointer))
(defcfun ("_atodbl_l" %atodbl-l) :int  (|_Result| :pointer) (|_Str| :pointer) (|_Locale| |_locale_t|))
(defcfun ("_atoldbl_l" %atoldbl-l) :int  (|_Result| :pointer) (|_Str| :pointer) (|_Locale| |_locale_t|))
(defcfun ("_atoflt_l" %atoflt-l) :int  (|_Result| :pointer) (|_Str| :pointer) (|_Locale| |_locale_t|))
(defcfun ("_lrotl" %lrotl) :unsigned-long  (|_Val| :unsigned-long) (|_Shift| :int))
(defcfun ("_lrotr" %lrotr) :unsigned-long  (|_Val| :unsigned-long) (|_Shift| :int))
(defcfun ("_makepath" %makepath) :void  (|_Path| :pointer) (|_Drive| :pointer) (|_Dir| :pointer) (|_Filename| :pointer) (|_Ext| :pointer))
(defcfun ("_onexit" %onexit) |_onexit_t|  (|_Func| |_onexit_t|))
(defcfun ("perror" perror) :void  (|_ErrMsg| :pointer))
(defcfun ("_putenv" %putenv) :int  (|_EnvString| :pointer))
(defcfun ("_rotl64" %rotl64) :unsigned-long-long  (|_Val| :unsigned-long-long) (|_Shift| :int))
(defcfun ("_rotr64" %rotr64) :unsigned-long-long  (|Value| :unsigned-long-long) (|Shift| :int))
(defcfun ("_rotr" %rotr) :unsigned-int  (|_Val| :unsigned-int) (|_Shift| :int))
(defcfun ("_rotl" %rotl) :unsigned-int  (|_Val| :unsigned-int) (|_Shift| :int))
(defcfun ("_rotr64" %rotr64) :unsigned-long-long  (|_Val| :unsigned-long-long) (|_Shift| :int))
(defcfun ("_searchenv" %searchenv) :void  (|_Filename| :pointer) (|_EnvVar| :pointer) (|_ResultPath| :pointer))
(defcfun ("_splitpath" %splitpath) :void  (|_FullPath| :pointer) (|_Drive| :pointer) (|_Dir| :pointer) (|_Filename| :pointer) (|_Ext| :pointer))
(defcfun ("_swab" %swab) :void  (|_Buf1| :pointer) (|_Buf2| :pointer) (|_SizeInBytes| :int))
(defcfun ("_wfullpath" %wfullpath) :pointer  (|_FullPath| :pointer) (|_Path| :pointer) (|_SizeInWords| |size_t|))
(defcfun ("_wmakepath" %wmakepath) :void  (|_ResultPath| :pointer) (|_Drive| :pointer) (|_Dir| :pointer) (|_Filename| :pointer) (|_Ext| :pointer))
(defcfun ("_wperror" %wperror) :void  (|_ErrMsg| :pointer))
(defcfun ("_wputenv" %wputenv) :int  (|_EnvString| :pointer))
(defcfun ("_wsearchenv" %wsearchenv) :void  (|_Filename| :pointer) (|_EnvVar| :pointer) (|_ResultPath| :pointer))
(defcfun ("_wsplitpath" %wsplitpath) :void  (|_FullPath| :pointer) (|_Drive| :pointer) (|_Dir| :pointer) (|_Filename| :pointer) (|_Ext| :pointer))
(defcfun ("_beep" %beep) :void  (|_Frequency| :unsigned) (|_Duration| :unsigned))
(defcfun ("_seterrormode" %seterrormode) :void  (|_Mode| :int))
(defcfun ("_sleep" %sleep) :void  (|_Duration| :unsigned-long))
(defcfun ("ecvt" ecvt) :pointer  (|_Val| :double) (|_NumOfDigits| :int) (|_PtDec| :pointer) (|_PtSign| :pointer))
(defcfun ("fcvt" fcvt) :pointer  (|_Val| :double) (|_NumOfDec| :int) (|_PtDec| :pointer) (|_PtSign| :pointer))
(defcfun ("gcvt" gcvt) :pointer  (|_Val| :double) (|_NumOfDigits| :int) (|_DstBuf| :pointer))
(defcfun ("itoa" itoa) :pointer  (|_Val| :int) (|_DstBuf| :pointer) (|_Radix| :int))
(defcfun ("ltoa" ltoa) :pointer  (|_Val| :long) (|_DstBuf| :pointer) (|_Radix| :int))
(defcfun ("putenv" putenv) :int  (|_EnvString| :pointer))
(defcfun ("swab" swab) :void  (|_Buf1| :pointer) (|_Buf2| :pointer) (|_SizeInBytes| :int))
(defcfun ("ultoa" ultoa) :pointer  (|_Val| :unsigned-long) (|_Dstbuf| :pointer) (|_Radix| :int))
(defcfun ("onexit" onexit) |_onexit_t|  (|_Func| |_onexit_t|))
(defcfun ("lldiv" lldiv) |lldiv_t|  (arg0 :long-long) (arg1 :long-long))
(defcfun ("llabs" llabs) :long-long  (arg0 :long-long))
(defcfun ("strtoll" strtoll) :long-long  (|__restrict__| :pointer) (|__restrict| :pointer) (arg2 :int))
(defcfun ("strtoull" strtoull) :unsigned-long-long  (|__restrict__| :pointer) (|__restrict__| :pointer) (arg2 :int))
(defcfun ("atoll" atoll) :long-long  (arg0 :pointer))
(defcfun ("wtoll" wtoll) :long-long  (arg0 :pointer))
(defcfun ("lltoa" lltoa) :pointer  (arg0 :long-long) (arg1 :pointer) (arg2 :int))
(defcfun ("ulltoa" ulltoa) :pointer  (arg0 :unsigned-long-long) (arg1 :pointer) (arg2 :int))
(defcfun ("lltow" lltow) :pointer  (arg0 :long-long) (arg1 :pointer) (arg2 :int))
(defcfun ("ulltow" ulltow) :pointer  (arg0 :unsigned-long-long) (arg1 :pointer) (arg2 :int))
(defcfun ("_resetstkoflw" %resetstkoflw) :int )
(defcfun ("_set_malloc_crt_max_wait" %set-malloc-crt-max-wait) :unsigned-long  (|_NewValue| :unsigned-long))
(defcfun ("_expand" %expand) :pointer  (|_Memory| :pointer) (|_NewSize| |size_t|))
(defcfun ("_msize" %msize) |size_t|  (|_Memory| :pointer))
(defcfun ("_get_sbh_threshold" %get-sbh-threshold) |size_t| )
(defcfun ("_set_sbh_threshold" %set-sbh-threshold) :int  (|_NewValue| |size_t|))
(defcfun ("_set_amblksiz" %set-amblksiz) |errno_t|  (|_Value| |size_t|))
(defcfun ("_get_amblksiz" %get-amblksiz) |errno_t|  (|_Value| :pointer))
(defcfun ("_heapadd" %heapadd) :int  (|_Memory| :pointer) (|_Size| |size_t|))
(defcfun ("_heapchk" %heapchk) :int )
(defcfun ("_heapmin" %heapmin) :int )
(defcfun ("_heapset" %heapset) :int  (|_Fill| :unsigned-int))
(defcfun ("_heapwalk" %heapwalk) :int  (|_EntryInfo| :pointer))
(defcfun ("_heapused" %heapused) |size_t|  (|_Used| :pointer) (|_Commit| :pointer))
(defcfun ("_get_heap_handle" %get-heap-handle) |intptr_t| )
(defcfun ("IUnknown_QueryInterface_Proxy" iunknown-query-interface-proxy :convention :stdcall) hresult  (|This| :pointer) (|riid| :pointer) (|ppvObject| :pointer))
(defcfun ("IUnknown_QueryInterface_Stub" iunknown-query-interface-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IUnknown_AddRef_Proxy" iunknown-add-ref-proxy :convention :stdcall) ulong  (|This| :pointer))
(defcfun ("IUnknown_AddRef_Stub" iunknown-add-ref-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IUnknown_Release_Proxy" iunknown-release-proxy :convention :stdcall) ulong  (|This| :pointer))
(defcfun ("IUnknown_Release_Stub" iunknown-release-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIUnknown_Begin_QueryInterface_Proxy" async-iunknown-begin-query-interface-proxy :convention :stdcall) hresult  (|This| :pointer) (|riid| :pointer))
(defcfun ("AsyncIUnknown_Begin_QueryInterface_Stub" async-iunknown-begin-query-interface-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIUnknown_Finish_QueryInterface_Proxy" async-iunknown-finish-query-interface-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppvObject| :pointer))
(defcfun ("AsyncIUnknown_Finish_QueryInterface_Stub" async-iunknown-finish-query-interface-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIUnknown_Begin_AddRef_Proxy" async-iunknown-begin-add-ref-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIUnknown_Begin_AddRef_Stub" async-iunknown-begin-add-ref-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIUnknown_Finish_AddRef_Proxy" async-iunknown-finish-add-ref-proxy :convention :stdcall) ulong  (|This| :pointer))
(defcfun ("AsyncIUnknown_Finish_AddRef_Stub" async-iunknown-finish-add-ref-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIUnknown_Begin_Release_Proxy" async-iunknown-begin-release-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIUnknown_Begin_Release_Stub" async-iunknown-begin-release-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIUnknown_Finish_Release_Proxy" async-iunknown-finish-release-proxy :convention :stdcall) ulong  (|This| :pointer))
(defcfun ("AsyncIUnknown_Finish_Release_Stub" async-iunknown-finish-release-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IClassFactory_RemoteCreateInstance_Proxy" iclass-factory-remote-create-instance-proxy :convention :stdcall) hresult  (|This| :pointer) (|riid| :pointer) (|ppvObject| :pointer))
(defcfun ("IClassFactory_RemoteCreateInstance_Stub" iclass-factory-remote-create-instance-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IClassFactory_RemoteLockServer_Proxy" iclass-factory-remote-lock-server-proxy :convention :stdcall) hresult  (|This| :pointer) (|fLock| winbool))
(defcfun ("IClassFactory_RemoteLockServer_Stub" iclass-factory-remote-lock-server-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IClassFactory_CreateInstance_Proxy" iclass-factory-create-instance-proxy :convention :stdcall) hresult  (|This| :pointer) (|pUnkOuter| :pointer) (|riid| :pointer) (|ppvObject| :pointer))
(defcfun ("IClassFactory_CreateInstance_Stub" iclass-factory-create-instance-stub :convention :stdcall) hresult  (|This| :pointer) (|riid| :pointer) (|ppvObject| :pointer))
(defcfun ("IClassFactory_LockServer_Proxy" iclass-factory-lock-server-proxy :convention :stdcall) hresult  (|This| :pointer) (|fLock| winbool))
(defcfun ("IClassFactory_LockServer_Stub" iclass-factory-lock-server-stub :convention :stdcall) hresult  (|This| :pointer) (|fLock| winbool))
(defcfun ("IMarshal_GetUnmarshalClass_Proxy" imarshal-get-unmarshal-class-proxy :convention :stdcall) hresult  (|This| :pointer) (|riid| :pointer) (|pv| :pointer) (|dwDestContext| dword) (|pvDestContext| :pointer) (|mshlflags| dword) (|pCid| :pointer))
(defcfun ("IMarshal_GetUnmarshalClass_Stub" imarshal-get-unmarshal-class-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMarshal_GetMarshalSizeMax_Proxy" imarshal-get-marshal-size-max-proxy :convention :stdcall) hresult  (|This| :pointer) (|riid| :pointer) (|pv| :pointer) (|dwDestContext| dword) (|pvDestContext| :pointer) (|mshlflags| dword) (|pSize| :pointer))
(defcfun ("IMarshal_GetMarshalSizeMax_Stub" imarshal-get-marshal-size-max-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMarshal_MarshalInterface_Proxy" imarshal-marshal-interface-proxy :convention :stdcall) hresult  (|This| :pointer) (|pStm| :pointer) (|riid| :pointer) (|pv| :pointer) (|dwDestContext| dword) (|pvDestContext| :pointer) (|mshlflags| dword))
(defcfun ("IMarshal_MarshalInterface_Stub" imarshal-marshal-interface-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMarshal_UnmarshalInterface_Proxy" imarshal-unmarshal-interface-proxy :convention :stdcall) hresult  (|This| :pointer) (|pStm| :pointer) (|riid| :pointer) (|ppv| :pointer))
(defcfun ("IMarshal_UnmarshalInterface_Stub" imarshal-unmarshal-interface-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMarshal_ReleaseMarshalData_Proxy" imarshal-release-marshal-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|pStm| :pointer))
(defcfun ("IMarshal_ReleaseMarshalData_Stub" imarshal-release-marshal-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMarshal_DisconnectObject_Proxy" imarshal-disconnect-object-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwReserved| dword))
(defcfun ("IMarshal_DisconnectObject_Stub" imarshal-disconnect-object-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMalloc_Alloc_Proxy" imalloc-alloc-proxy :convention :stdcall) :pointer  (|This| :pointer) (|cb| size_t))
(defcfun ("IMalloc_Alloc_Stub" imalloc-alloc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMalloc_Realloc_Proxy" imalloc-realloc-proxy :convention :stdcall) :pointer  (|This| :pointer) (|pv| :pointer) (|cb| size_t))
(defcfun ("IMalloc_Realloc_Stub" imalloc-realloc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMalloc_Free_Proxy" imalloc-free-proxy :convention :stdcall) :void  (|This| :pointer) (|pv| :pointer))
(defcfun ("IMalloc_Free_Stub" imalloc-free-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMalloc_GetSize_Proxy" imalloc-get-size-proxy :convention :stdcall) size_t  (|This| :pointer) (|pv| :pointer))
(defcfun ("IMalloc_GetSize_Stub" imalloc-get-size-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMalloc_DidAlloc_Proxy" imalloc-did-alloc-proxy :convention :stdcall) :int  (|This| :pointer) (|pv| :pointer))
(defcfun ("IMalloc_DidAlloc_Stub" imalloc-did-alloc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMalloc_HeapMinimize_Proxy" imalloc-heap-minimize-proxy :convention :stdcall) :void  (|This| :pointer))
(defcfun ("IMalloc_HeapMinimize_Stub" imalloc-heap-minimize-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMallocSpy_PreAlloc_Proxy" imalloc-spy-pre-alloc-proxy :convention :stdcall) size_t  (|This| :pointer) (|cbRequest| size_t))
(defcfun ("IMallocSpy_PreAlloc_Stub" imalloc-spy-pre-alloc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMallocSpy_PostAlloc_Proxy" imalloc-spy-post-alloc-proxy :convention :stdcall) :pointer  (|This| :pointer) (|pActual| :pointer))
(defcfun ("IMallocSpy_PostAlloc_Stub" imalloc-spy-post-alloc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMallocSpy_PreFree_Proxy" imalloc-spy-pre-free-proxy :convention :stdcall) :pointer  (|This| :pointer) (|pRequest| :pointer) (|fSpyed| winbool))
(defcfun ("IMallocSpy_PreFree_Stub" imalloc-spy-pre-free-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMallocSpy_PostFree_Proxy" imalloc-spy-post-free-proxy :convention :stdcall) :void  (|This| :pointer) (|fSpyed| winbool))
(defcfun ("IMallocSpy_PostFree_Stub" imalloc-spy-post-free-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMallocSpy_PreRealloc_Proxy" imalloc-spy-pre-realloc-proxy :convention :stdcall) size_t  (|This| :pointer) (|pRequest| :pointer) (|cbRequest| size_t) (|ppNewRequest| :pointer) (|fSpyed| winbool))
(defcfun ("IMallocSpy_PreRealloc_Stub" imalloc-spy-pre-realloc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMallocSpy_PostRealloc_Proxy" imalloc-spy-post-realloc-proxy :convention :stdcall) :pointer  (|This| :pointer) (|pActual| :pointer) (|fSpyed| winbool))
(defcfun ("IMallocSpy_PostRealloc_Stub" imalloc-spy-post-realloc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMallocSpy_PreGetSize_Proxy" imalloc-spy-pre-get-size-proxy :convention :stdcall) :pointer  (|This| :pointer) (|pRequest| :pointer) (|fSpyed| winbool))
(defcfun ("IMallocSpy_PreGetSize_Stub" imalloc-spy-pre-get-size-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMallocSpy_PostGetSize_Proxy" imalloc-spy-post-get-size-proxy :convention :stdcall) size_t  (|This| :pointer) (|cbActual| size_t) (|fSpyed| winbool))
(defcfun ("IMallocSpy_PostGetSize_Stub" imalloc-spy-post-get-size-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMallocSpy_PreDidAlloc_Proxy" imalloc-spy-pre-did-alloc-proxy :convention :stdcall) :pointer  (|This| :pointer) (|pRequest| :pointer) (|fSpyed| winbool))
(defcfun ("IMallocSpy_PreDidAlloc_Stub" imalloc-spy-pre-did-alloc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMallocSpy_PostDidAlloc_Proxy" imalloc-spy-post-did-alloc-proxy :convention :stdcall) :int  (|This| :pointer) (|pRequest| :pointer) (|fSpyed| winbool) (|fActual| :int))
(defcfun ("IMallocSpy_PostDidAlloc_Stub" imalloc-spy-post-did-alloc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMallocSpy_PreHeapMinimize_Proxy" imalloc-spy-pre-heap-minimize-proxy :convention :stdcall) :void  (|This| :pointer))
(defcfun ("IMallocSpy_PreHeapMinimize_Stub" imalloc-spy-pre-heap-minimize-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMallocSpy_PostHeapMinimize_Proxy" imalloc-spy-post-heap-minimize-proxy :convention :stdcall) :void  (|This| :pointer))
(defcfun ("IMallocSpy_PostHeapMinimize_Stub" imalloc-spy-post-heap-minimize-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStdMarshalInfo_GetClassForHandler_Proxy" istd-marshal-info-get-class-for-handler-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwDestContext| dword) (|pvDestContext| :pointer) (|pClsid| :pointer))
(defcfun ("IStdMarshalInfo_GetClassForHandler_Stub" istd-marshal-info-get-class-for-handler-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IExternalConnection_AddConnection_Proxy" iexternal-connection-add-connection-proxy :convention :stdcall) dword  (|This| :pointer) (|extconn| dword) (|reserved| dword))
(defcfun ("IExternalConnection_AddConnection_Stub" iexternal-connection-add-connection-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IExternalConnection_ReleaseConnection_Proxy" iexternal-connection-release-connection-proxy :convention :stdcall) dword  (|This| :pointer) (|extconn| dword) (|reserved| dword) (|fLastReleaseCloses| winbool))
(defcfun ("IExternalConnection_ReleaseConnection_Stub" iexternal-connection-release-connection-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMultiQI_QueryMultipleInterfaces_Proxy" imulti-qi-query-multiple-interfaces-proxy :convention :stdcall) hresult  (|This| :pointer) (|cMQIs| ulong) (|pMQIs| :pointer))
(defcfun ("IMultiQI_QueryMultipleInterfaces_Stub" imulti-qi-query-multiple-interfaces-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIMultiQI_Begin_QueryMultipleInterfaces_Proxy" async-imulti-qi-begin-query-multiple-interfaces-proxy :convention :stdcall) hresult  (|This| :pointer) (|cMQIs| ulong) (|pMQIs| :pointer))
(defcfun ("AsyncIMultiQI_Begin_QueryMultipleInterfaces_Stub" async-imulti-qi-begin-query-multiple-interfaces-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIMultiQI_Finish_QueryMultipleInterfaces_Proxy" async-imulti-qi-finish-query-multiple-interfaces-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMQIs| :pointer))
(defcfun ("AsyncIMultiQI_Finish_QueryMultipleInterfaces_Stub" async-imulti-qi-finish-query-multiple-interfaces-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternalUnknown_QueryInternalInterface_Proxy" iinternal-unknown-query-internal-interface-proxy :convention :stdcall) hresult  (|This| :pointer) (|riid| :pointer) (|ppv| :pointer))
(defcfun ("IInternalUnknown_QueryInternalInterface_Stub" iinternal-unknown-query-internal-interface-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumUnknown_RemoteNext_Proxy" ienum-unknown-remote-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IEnumUnknown_RemoteNext_Stub" ienum-unknown-remote-next-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumUnknown_Skip_Proxy" ienum-unknown-skip-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong))
(defcfun ("IEnumUnknown_Skip_Stub" ienum-unknown-skip-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumUnknown_Reset_Proxy" ienum-unknown-reset-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IEnumUnknown_Reset_Stub" ienum-unknown-reset-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumUnknown_Clone_Proxy" ienum-unknown-clone-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppenum| :pointer))
(defcfun ("IEnumUnknown_Clone_Stub" ienum-unknown-clone-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindCtx_RegisterObjectBound_Proxy" ibind-ctx-register-object-bound-proxy :convention :stdcall) hresult  (|This| :pointer) (|punk| :pointer))
(defcfun ("IBindCtx_RegisterObjectBound_Stub" ibind-ctx-register-object-bound-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindCtx_RevokeObjectBound_Proxy" ibind-ctx-revoke-object-bound-proxy :convention :stdcall) hresult  (|This| :pointer) (|punk| :pointer))
(defcfun ("IBindCtx_RevokeObjectBound_Stub" ibind-ctx-revoke-object-bound-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindCtx_ReleaseBoundObjects_Proxy" ibind-ctx-release-bound-objects-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IBindCtx_ReleaseBoundObjects_Stub" ibind-ctx-release-bound-objects-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindCtx_RemoteSetBindOptions_Proxy" ibind-ctx-remote-set-bind-options-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbindopts| :pointer))
(defcfun ("IBindCtx_RemoteSetBindOptions_Stub" ibind-ctx-remote-set-bind-options-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindCtx_RemoteGetBindOptions_Proxy" ibind-ctx-remote-get-bind-options-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbindopts| :pointer))
(defcfun ("IBindCtx_RemoteGetBindOptions_Stub" ibind-ctx-remote-get-bind-options-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindCtx_GetRunningObjectTable_Proxy" ibind-ctx-get-running-object-table-proxy :convention :stdcall) hresult  (|This| :pointer) (|pprot| :pointer))
(defcfun ("IBindCtx_GetRunningObjectTable_Stub" ibind-ctx-get-running-object-table-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindCtx_RegisterObjectParam_Proxy" ibind-ctx-register-object-param-proxy :convention :stdcall) hresult  (|This| :pointer) (|pszKey| lpolestr) (|punk| :pointer))
(defcfun ("IBindCtx_RegisterObjectParam_Stub" ibind-ctx-register-object-param-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindCtx_GetObjectParam_Proxy" ibind-ctx-get-object-param-proxy :convention :stdcall) hresult  (|This| :pointer) (|pszKey| lpolestr) (|ppunk| :pointer))
(defcfun ("IBindCtx_GetObjectParam_Stub" ibind-ctx-get-object-param-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindCtx_EnumObjectParam_Proxy" ibind-ctx-enum-object-param-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppenum| :pointer))
(defcfun ("IBindCtx_EnumObjectParam_Stub" ibind-ctx-enum-object-param-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindCtx_RevokeObjectParam_Proxy" ibind-ctx-revoke-object-param-proxy :convention :stdcall) hresult  (|This| :pointer) (|pszKey| lpolestr))
(defcfun ("IBindCtx_RevokeObjectParam_Stub" ibind-ctx-revoke-object-param-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumMoniker_RemoteNext_Proxy" ienum-moniker-remote-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IEnumMoniker_RemoteNext_Stub" ienum-moniker-remote-next-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumMoniker_Skip_Proxy" ienum-moniker-skip-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong))
(defcfun ("IEnumMoniker_Skip_Stub" ienum-moniker-skip-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumMoniker_Reset_Proxy" ienum-moniker-reset-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IEnumMoniker_Reset_Stub" ienum-moniker-reset-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumMoniker_Clone_Proxy" ienum-moniker-clone-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppenum| :pointer))
(defcfun ("IEnumMoniker_Clone_Stub" ienum-moniker-clone-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRunnableObject_GetRunningClass_Proxy" irunnable-object-get-running-class-proxy :convention :stdcall) hresult  (|This| :pointer) (|lpClsid| lpclsid))
(defcfun ("IRunnableObject_GetRunningClass_Stub" irunnable-object-get-running-class-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRunnableObject_Run_Proxy" irunnable-object-run-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbc| lpbindctx))
(defcfun ("IRunnableObject_Run_Stub" irunnable-object-run-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRunnableObject_RemoteIsRunning_Proxy" irunnable-object-remote-is-running-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IRunnableObject_RemoteIsRunning_Stub" irunnable-object-remote-is-running-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRunnableObject_LockRunning_Proxy" irunnable-object-lock-running-proxy :convention :stdcall) hresult  (|This| :pointer) (|fLock| winbool) (|fLastUnlockCloses| winbool))
(defcfun ("IRunnableObject_LockRunning_Stub" irunnable-object-lock-running-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRunnableObject_SetContainedObject_Proxy" irunnable-object-set-contained-object-proxy :convention :stdcall) hresult  (|This| :pointer) (|fContained| winbool))
(defcfun ("IRunnableObject_SetContainedObject_Stub" irunnable-object-set-contained-object-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRunningObjectTable_Register_Proxy" irunning-object-table-register-proxy :convention :stdcall) hresult  (|This| :pointer) (|grfFlags| dword) (|punkObject| :pointer) (|pmkObjectName| :pointer) (|pdwRegister| :pointer))
(defcfun ("IRunningObjectTable_Register_Stub" irunning-object-table-register-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRunningObjectTable_Revoke_Proxy" irunning-object-table-revoke-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwRegister| dword))
(defcfun ("IRunningObjectTable_Revoke_Stub" irunning-object-table-revoke-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRunningObjectTable_IsRunning_Proxy" irunning-object-table-is-running-proxy :convention :stdcall) hresult  (|This| :pointer) (|pmkObjectName| :pointer))
(defcfun ("IRunningObjectTable_IsRunning_Stub" irunning-object-table-is-running-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRunningObjectTable_GetObject_Proxy" irunning-object-table-get-object-proxy :convention :stdcall) hresult  (|This| :pointer) (|pmkObjectName| :pointer) (|ppunkObject| :pointer))
(defcfun ("IRunningObjectTable_GetObject_Stub" irunning-object-table-get-object-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRunningObjectTable_NoteChangeTime_Proxy" irunning-object-table-note-change-time-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwRegister| dword) (|pfiletime| :pointer))
(defcfun ("IRunningObjectTable_NoteChangeTime_Stub" irunning-object-table-note-change-time-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRunningObjectTable_GetTimeOfLastChange_Proxy" irunning-object-table-get-time-of-last-change-proxy :convention :stdcall) hresult  (|This| :pointer) (|pmkObjectName| :pointer) (|pfiletime| :pointer))
(defcfun ("IRunningObjectTable_GetTimeOfLastChange_Stub" irunning-object-table-get-time-of-last-change-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRunningObjectTable_EnumRunning_Proxy" irunning-object-table-enum-running-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppenumMoniker| :pointer))
(defcfun ("IRunningObjectTable_EnumRunning_Stub" irunning-object-table-enum-running-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersist_GetClassID_Proxy" ipersist-get-class-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|pClassID| :pointer))
(defcfun ("IPersist_GetClassID_Stub" ipersist-get-class-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistStream_IsDirty_Proxy" ipersist-stream-is-dirty-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IPersistStream_IsDirty_Stub" ipersist-stream-is-dirty-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistStream_Load_Proxy" ipersist-stream-load-proxy :convention :stdcall) hresult  (|This| :pointer) (|pStm| :pointer))
(defcfun ("IPersistStream_Load_Stub" ipersist-stream-load-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistStream_Save_Proxy" ipersist-stream-save-proxy :convention :stdcall) hresult  (|This| :pointer) (|pStm| :pointer) (|fClearDirty| winbool))
(defcfun ("IPersistStream_Save_Stub" ipersist-stream-save-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistStream_GetSizeMax_Proxy" ipersist-stream-get-size-max-proxy :convention :stdcall) hresult  (|This| :pointer) (|pcbSize| :pointer))
(defcfun ("IPersistStream_GetSizeMax_Stub" ipersist-stream-get-size-max-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMoniker_RemoteBindToObject_Proxy" imoniker-remote-bind-to-object-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbc| :pointer) (|pmkToLeft| :pointer) (|riidResult| :pointer) (|ppvResult| :pointer))
(defcfun ("IMoniker_RemoteBindToObject_Stub" imoniker-remote-bind-to-object-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMoniker_RemoteBindToStorage_Proxy" imoniker-remote-bind-to-storage-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbc| :pointer) (|pmkToLeft| :pointer) (|riid| :pointer) (|ppvObj| :pointer))
(defcfun ("IMoniker_RemoteBindToStorage_Stub" imoniker-remote-bind-to-storage-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMoniker_Reduce_Proxy" imoniker-reduce-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbc| :pointer) (|dwReduceHowFar| dword) (|ppmkToLeft| :pointer) (|ppmkReduced| :pointer))
(defcfun ("IMoniker_Reduce_Stub" imoniker-reduce-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMoniker_ComposeWith_Proxy" imoniker-compose-with-proxy :convention :stdcall) hresult  (|This| :pointer) (|pmkRight| :pointer) (|fOnlyIfNotGeneric| winbool) (|ppmkComposite| :pointer))
(defcfun ("IMoniker_ComposeWith_Stub" imoniker-compose-with-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMoniker_Enum_Proxy" imoniker-enum-proxy :convention :stdcall) hresult  (|This| :pointer) (|fForward| winbool) (|ppenumMoniker| :pointer))
(defcfun ("IMoniker_Enum_Stub" imoniker-enum-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMoniker_IsEqual_Proxy" imoniker-is-equal-proxy :convention :stdcall) hresult  (|This| :pointer) (|pmkOtherMoniker| :pointer))
(defcfun ("IMoniker_IsEqual_Stub" imoniker-is-equal-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMoniker_Hash_Proxy" imoniker-hash-proxy :convention :stdcall) hresult  (|This| :pointer) (|pdwHash| :pointer))
(defcfun ("IMoniker_Hash_Stub" imoniker-hash-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMoniker_IsRunning_Proxy" imoniker-is-running-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbc| :pointer) (|pmkToLeft| :pointer) (|pmkNewlyRunning| :pointer))
(defcfun ("IMoniker_IsRunning_Stub" imoniker-is-running-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMoniker_GetTimeOfLastChange_Proxy" imoniker-get-time-of-last-change-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbc| :pointer) (|pmkToLeft| :pointer) (|pFileTime| :pointer))
(defcfun ("IMoniker_GetTimeOfLastChange_Stub" imoniker-get-time-of-last-change-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMoniker_Inverse_Proxy" imoniker-inverse-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppmk| :pointer))
(defcfun ("IMoniker_Inverse_Stub" imoniker-inverse-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMoniker_CommonPrefixWith_Proxy" imoniker-common-prefix-with-proxy :convention :stdcall) hresult  (|This| :pointer) (|pmkOther| :pointer) (|ppmkPrefix| :pointer))
(defcfun ("IMoniker_CommonPrefixWith_Stub" imoniker-common-prefix-with-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMoniker_RelativePathTo_Proxy" imoniker-relative-path-to-proxy :convention :stdcall) hresult  (|This| :pointer) (|pmkOther| :pointer) (|ppmkRelPath| :pointer))
(defcfun ("IMoniker_RelativePathTo_Stub" imoniker-relative-path-to-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMoniker_GetDisplayName_Proxy" imoniker-get-display-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbc| :pointer) (|pmkToLeft| :pointer) (|ppszDisplayName| :pointer))
(defcfun ("IMoniker_GetDisplayName_Stub" imoniker-get-display-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMoniker_ParseDisplayName_Proxy" imoniker-parse-display-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbc| :pointer) (|pmkToLeft| :pointer) (|pszDisplayName| lpolestr) (|pchEaten| :pointer) (|ppmkOut| :pointer))
(defcfun ("IMoniker_ParseDisplayName_Stub" imoniker-parse-display-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMoniker_IsSystemMoniker_Proxy" imoniker-is-system-moniker-proxy :convention :stdcall) hresult  (|This| :pointer) (|pdwMksys| :pointer))
(defcfun ("IMoniker_IsSystemMoniker_Stub" imoniker-is-system-moniker-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IROTData_GetComparisonData_Proxy" irot-data-get-comparison-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbData| :pointer) (|cbMax| ulong) (|pcbData| :pointer))
(defcfun ("IROTData_GetComparisonData_Stub" irot-data-get-comparison-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumString_RemoteNext_Proxy" ienum-string-remote-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IEnumString_RemoteNext_Stub" ienum-string-remote-next-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumString_Skip_Proxy" ienum-string-skip-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong))
(defcfun ("IEnumString_Skip_Stub" ienum-string-skip-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumString_Reset_Proxy" ienum-string-reset-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IEnumString_Reset_Stub" ienum-string-reset-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumString_Clone_Proxy" ienum-string-clone-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppenum| :pointer))
(defcfun ("IEnumString_Clone_Stub" ienum-string-clone-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISequentialStream_RemoteRead_Proxy" isequential-stream-remote-read-proxy :convention :stdcall) hresult  (|This| :pointer) (|pv| :pointer) (|cb| ulong) (|pcbRead| :pointer))
(defcfun ("ISequentialStream_RemoteRead_Stub" isequential-stream-remote-read-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISequentialStream_RemoteWrite_Proxy" isequential-stream-remote-write-proxy :convention :stdcall) hresult  (|This| :pointer) (|pv| :pointer) (|cb| ulong) (|pcbWritten| :pointer))
(defcfun ("ISequentialStream_RemoteWrite_Stub" isequential-stream-remote-write-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStream_RemoteSeek_Proxy" istream-remote-seek-proxy :convention :stdcall) hresult  (|This| :pointer) (|dlibMove| large_integer) (|dwOrigin| dword) (|plibNewPosition| :pointer))
(defcfun ("IStream_RemoteSeek_Stub" istream-remote-seek-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStream_SetSize_Proxy" istream-set-size-proxy :convention :stdcall) hresult  (|This| :pointer) (|libNewSize| ularge_integer))
(defcfun ("IStream_SetSize_Stub" istream-set-size-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStream_RemoteCopyTo_Proxy" istream-remote-copy-to-proxy :convention :stdcall) hresult  (|This| :pointer) (|pstm| :pointer) (|cb| ularge_integer) (|pcbRead| :pointer) (|pcbWritten| :pointer))
(defcfun ("IStream_RemoteCopyTo_Stub" istream-remote-copy-to-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStream_Commit_Proxy" istream-commit-proxy :convention :stdcall) hresult  (|This| :pointer) (|grfCommitFlags| dword))
(defcfun ("IStream_Commit_Stub" istream-commit-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStream_Revert_Proxy" istream-revert-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IStream_Revert_Stub" istream-revert-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStream_LockRegion_Proxy" istream-lock-region-proxy :convention :stdcall) hresult  (|This| :pointer) (|libOffset| ularge_integer) (|cb| ularge_integer) (|dwLockType| dword))
(defcfun ("IStream_LockRegion_Stub" istream-lock-region-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStream_UnlockRegion_Proxy" istream-unlock-region-proxy :convention :stdcall) hresult  (|This| :pointer) (|libOffset| ularge_integer) (|cb| ularge_integer) (|dwLockType| dword))
(defcfun ("IStream_UnlockRegion_Stub" istream-unlock-region-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStream_Stat_Proxy" istream-stat-proxy :convention :stdcall) hresult  (|This| :pointer) (|pstatstg| :pointer) (|grfStatFlag| dword))
(defcfun ("IStream_Stat_Stub" istream-stat-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStream_Clone_Proxy" istream-clone-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppstm| :pointer))
(defcfun ("IStream_Clone_Stub" istream-clone-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumSTATSTG_RemoteNext_Proxy" ienum-statstg-remote-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IEnumSTATSTG_RemoteNext_Stub" ienum-statstg-remote-next-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumSTATSTG_Skip_Proxy" ienum-statstg-skip-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong))
(defcfun ("IEnumSTATSTG_Skip_Stub" ienum-statstg-skip-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumSTATSTG_Reset_Proxy" ienum-statstg-reset-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IEnumSTATSTG_Reset_Stub" ienum-statstg-reset-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumSTATSTG_Clone_Proxy" ienum-statstg-clone-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppenum| :pointer))
(defcfun ("IEnumSTATSTG_Clone_Stub" ienum-statstg-clone-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStorage_CreateStream_Proxy" istorage-create-stream-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwcsName| :pointer) (|grfMode| dword) (|reserved1| dword) (|reserved2| dword) (|ppstm| :pointer))
(defcfun ("IStorage_CreateStream_Stub" istorage-create-stream-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStorage_RemoteOpenStream_Proxy" istorage-remote-open-stream-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwcsName| :pointer) (|cbReserved1| :unsigned-long) (|reserved1| :pointer) (|grfMode| dword) (|reserved2| dword) (|ppstm| :pointer))
(defcfun ("IStorage_RemoteOpenStream_Stub" istorage-remote-open-stream-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStorage_CreateStorage_Proxy" istorage-create-storage-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwcsName| :pointer) (|grfMode| dword) (|reserved1| dword) (|reserved2| dword) (|ppstg| :pointer))
(defcfun ("IStorage_CreateStorage_Stub" istorage-create-storage-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStorage_OpenStorage_Proxy" istorage-open-storage-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwcsName| :pointer) (|pstgPriority| :pointer) (|grfMode| dword) (|snbExclude| snb) (|reserved| dword) (|ppstg| :pointer))
(defcfun ("IStorage_OpenStorage_Stub" istorage-open-storage-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStorage_CopyTo_Proxy" istorage-copy-to-proxy :convention :stdcall) hresult  (|This| :pointer) (|ciidExclude| dword) (|rgiidExclude| :pointer) (|snbExclude| snb) (|pstgDest| :pointer))
(defcfun ("IStorage_CopyTo_Stub" istorage-copy-to-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStorage_MoveElementTo_Proxy" istorage-move-element-to-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwcsName| :pointer) (|pstgDest| :pointer) (|pwcsNewName| :pointer) (|grfFlags| dword))
(defcfun ("IStorage_MoveElementTo_Stub" istorage-move-element-to-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStorage_Commit_Proxy" istorage-commit-proxy :convention :stdcall) hresult  (|This| :pointer) (|grfCommitFlags| dword))
(defcfun ("IStorage_Commit_Stub" istorage-commit-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStorage_Revert_Proxy" istorage-revert-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IStorage_Revert_Stub" istorage-revert-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStorage_RemoteEnumElements_Proxy" istorage-remote-enum-elements-proxy :convention :stdcall) hresult  (|This| :pointer) (|reserved1| dword) (|cbReserved2| :unsigned-long) (|reserved2| :pointer) (|reserved3| dword) (|ppenum| :pointer))
(defcfun ("IStorage_RemoteEnumElements_Stub" istorage-remote-enum-elements-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStorage_DestroyElement_Proxy" istorage-destroy-element-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwcsName| :pointer))
(defcfun ("IStorage_DestroyElement_Stub" istorage-destroy-element-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStorage_RenameElement_Proxy" istorage-rename-element-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwcsOldName| :pointer) (|pwcsNewName| :pointer))
(defcfun ("IStorage_RenameElement_Stub" istorage-rename-element-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStorage_SetElementTimes_Proxy" istorage-set-element-times-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwcsName| :pointer) (|pctime| :pointer) (|patime| :pointer) (|pmtime| :pointer))
(defcfun ("IStorage_SetElementTimes_Stub" istorage-set-element-times-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStorage_SetClass_Proxy" istorage-set-class-proxy :convention :stdcall) hresult  (|This| :pointer) (|clsid| :pointer))
(defcfun ("IStorage_SetClass_Stub" istorage-set-class-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStorage_SetStateBits_Proxy" istorage-set-state-bits-proxy :convention :stdcall) hresult  (|This| :pointer) (|grfStateBits| dword) (|grfMask| dword))
(defcfun ("IStorage_SetStateBits_Stub" istorage-set-state-bits-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IStorage_Stat_Proxy" istorage-stat-proxy :convention :stdcall) hresult  (|This| :pointer) (|pstatstg| :pointer) (|grfStatFlag| dword))
(defcfun ("IStorage_Stat_Stub" istorage-stat-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistFile_IsDirty_Proxy" ipersist-file-is-dirty-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IPersistFile_IsDirty_Stub" ipersist-file-is-dirty-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistFile_Load_Proxy" ipersist-file-load-proxy :convention :stdcall) hresult  (|This| :pointer) (|pszFileName| lpcolestr) (|dwMode| dword))
(defcfun ("IPersistFile_Load_Stub" ipersist-file-load-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistFile_Save_Proxy" ipersist-file-save-proxy :convention :stdcall) hresult  (|This| :pointer) (|pszFileName| lpcolestr) (|fRemember| winbool))
(defcfun ("IPersistFile_Save_Stub" ipersist-file-save-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistFile_SaveCompleted_Proxy" ipersist-file-save-completed-proxy :convention :stdcall) hresult  (|This| :pointer) (|pszFileName| lpcolestr))
(defcfun ("IPersistFile_SaveCompleted_Stub" ipersist-file-save-completed-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistFile_GetCurFile_Proxy" ipersist-file-get-cur-file-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppszFileName| :pointer))
(defcfun ("IPersistFile_GetCurFile_Stub" ipersist-file-get-cur-file-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistStorage_IsDirty_Proxy" ipersist-storage-is-dirty-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IPersistStorage_IsDirty_Stub" ipersist-storage-is-dirty-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistStorage_InitNew_Proxy" ipersist-storage-init-new-proxy :convention :stdcall) hresult  (|This| :pointer) (|pStg| :pointer))
(defcfun ("IPersistStorage_InitNew_Stub" ipersist-storage-init-new-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistStorage_Load_Proxy" ipersist-storage-load-proxy :convention :stdcall) hresult  (|This| :pointer) (|pStg| :pointer))
(defcfun ("IPersistStorage_Load_Stub" ipersist-storage-load-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistStorage_Save_Proxy" ipersist-storage-save-proxy :convention :stdcall) hresult  (|This| :pointer) (|pStgSave| :pointer) (|fSameAsLoad| winbool))
(defcfun ("IPersistStorage_Save_Stub" ipersist-storage-save-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistStorage_SaveCompleted_Proxy" ipersist-storage-save-completed-proxy :convention :stdcall) hresult  (|This| :pointer) (|pStgNew| :pointer))
(defcfun ("IPersistStorage_SaveCompleted_Stub" ipersist-storage-save-completed-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistStorage_HandsOffStorage_Proxy" ipersist-storage-hands-off-storage-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IPersistStorage_HandsOffStorage_Stub" ipersist-storage-hands-off-storage-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ILockBytes_RemoteReadAt_Proxy" ilock-bytes-remote-read-at-proxy :convention :stdcall) hresult  (|This| :pointer) (|ulOffset| ularge_integer) (|pv| :pointer) (|cb| ulong) (|pcbRead| :pointer))
(defcfun ("ILockBytes_RemoteReadAt_Stub" ilock-bytes-remote-read-at-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ILockBytes_RemoteWriteAt_Proxy" ilock-bytes-remote-write-at-proxy :convention :stdcall) hresult  (|This| :pointer) (|ulOffset| ularge_integer) (|pv| :pointer) (|cb| ulong) (|pcbWritten| :pointer))
(defcfun ("ILockBytes_RemoteWriteAt_Stub" ilock-bytes-remote-write-at-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ILockBytes_Flush_Proxy" ilock-bytes-flush-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ILockBytes_Flush_Stub" ilock-bytes-flush-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ILockBytes_SetSize_Proxy" ilock-bytes-set-size-proxy :convention :stdcall) hresult  (|This| :pointer) (|cb| ularge_integer))
(defcfun ("ILockBytes_SetSize_Stub" ilock-bytes-set-size-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ILockBytes_LockRegion_Proxy" ilock-bytes-lock-region-proxy :convention :stdcall) hresult  (|This| :pointer) (|libOffset| ularge_integer) (|cb| ularge_integer) (|dwLockType| dword))
(defcfun ("ILockBytes_LockRegion_Stub" ilock-bytes-lock-region-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ILockBytes_UnlockRegion_Proxy" ilock-bytes-unlock-region-proxy :convention :stdcall) hresult  (|This| :pointer) (|libOffset| ularge_integer) (|cb| ularge_integer) (|dwLockType| dword))
(defcfun ("ILockBytes_UnlockRegion_Stub" ilock-bytes-unlock-region-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ILockBytes_Stat_Proxy" ilock-bytes-stat-proxy :convention :stdcall) hresult  (|This| :pointer) (|pstatstg| :pointer) (|grfStatFlag| dword))
(defcfun ("ILockBytes_Stat_Stub" ilock-bytes-stat-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumFORMATETC_RemoteNext_Proxy" ienum-formatetc-remote-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IEnumFORMATETC_RemoteNext_Stub" ienum-formatetc-remote-next-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumFORMATETC_Skip_Proxy" ienum-formatetc-skip-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong))
(defcfun ("IEnumFORMATETC_Skip_Stub" ienum-formatetc-skip-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumFORMATETC_Reset_Proxy" ienum-formatetc-reset-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IEnumFORMATETC_Reset_Stub" ienum-formatetc-reset-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumFORMATETC_Clone_Proxy" ienum-formatetc-clone-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppenum| :pointer))
(defcfun ("IEnumFORMATETC_Clone_Stub" ienum-formatetc-clone-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumSTATDATA_RemoteNext_Proxy" ienum-statdata-remote-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IEnumSTATDATA_RemoteNext_Stub" ienum-statdata-remote-next-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumSTATDATA_Skip_Proxy" ienum-statdata-skip-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong))
(defcfun ("IEnumSTATDATA_Skip_Stub" ienum-statdata-skip-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumSTATDATA_Reset_Proxy" ienum-statdata-reset-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IEnumSTATDATA_Reset_Stub" ienum-statdata-reset-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumSTATDATA_Clone_Proxy" ienum-statdata-clone-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppenum| :pointer))
(defcfun ("IEnumSTATDATA_Clone_Stub" ienum-statdata-clone-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRootStorage_SwitchToFile_Proxy" iroot-storage-switch-to-file-proxy :convention :stdcall) hresult  (|This| :pointer) (|pszFile| lpolestr))
(defcfun ("IRootStorage_SwitchToFile_Stub" iroot-storage-switch-to-file-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IAdviseSink_RemoteOnDataChange_Proxy" iadvise-sink-remote-on-data-change-proxy :convention :stdcall) hresult  (|This| :pointer) (|pFormatetc| :pointer) (|pStgmed| :pointer))
(defcfun ("IAdviseSink_RemoteOnDataChange_Stub" iadvise-sink-remote-on-data-change-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IAdviseSink_RemoteOnViewChange_Proxy" iadvise-sink-remote-on-view-change-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwAspect| dword) (|lindex| long))
(defcfun ("IAdviseSink_RemoteOnViewChange_Stub" iadvise-sink-remote-on-view-change-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IAdviseSink_RemoteOnRename_Proxy" iadvise-sink-remote-on-rename-proxy :convention :stdcall) hresult  (|This| :pointer) (|pmk| :pointer))
(defcfun ("IAdviseSink_RemoteOnRename_Stub" iadvise-sink-remote-on-rename-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IAdviseSink_RemoteOnSave_Proxy" iadvise-sink-remote-on-save-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IAdviseSink_RemoteOnSave_Stub" iadvise-sink-remote-on-save-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IAdviseSink_RemoteOnClose_Proxy" iadvise-sink-remote-on-close-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IAdviseSink_RemoteOnClose_Stub" iadvise-sink-remote-on-close-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIAdviseSink_Begin_RemoteOnDataChange_Proxy" async-iadvise-sink-begin-remote-on-data-change-proxy :convention :stdcall) hresult  (|This| :pointer) (|pFormatetc| :pointer) (|pStgmed| :pointer))
(defcfun ("AsyncIAdviseSink_Begin_RemoteOnDataChange_Stub" async-iadvise-sink-begin-remote-on-data-change-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIAdviseSink_Finish_RemoteOnDataChange_Proxy" async-iadvise-sink-finish-remote-on-data-change-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Finish_RemoteOnDataChange_Stub" async-iadvise-sink-finish-remote-on-data-change-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIAdviseSink_Begin_RemoteOnViewChange_Proxy" async-iadvise-sink-begin-remote-on-view-change-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwAspect| dword) (|lindex| long))
(defcfun ("AsyncIAdviseSink_Begin_RemoteOnViewChange_Stub" async-iadvise-sink-begin-remote-on-view-change-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIAdviseSink_Finish_RemoteOnViewChange_Proxy" async-iadvise-sink-finish-remote-on-view-change-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Finish_RemoteOnViewChange_Stub" async-iadvise-sink-finish-remote-on-view-change-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIAdviseSink_Begin_RemoteOnRename_Proxy" async-iadvise-sink-begin-remote-on-rename-proxy :convention :stdcall) hresult  (|This| :pointer) (|pmk| :pointer))
(defcfun ("AsyncIAdviseSink_Begin_RemoteOnRename_Stub" async-iadvise-sink-begin-remote-on-rename-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIAdviseSink_Finish_RemoteOnRename_Proxy" async-iadvise-sink-finish-remote-on-rename-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Finish_RemoteOnRename_Stub" async-iadvise-sink-finish-remote-on-rename-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIAdviseSink_Begin_RemoteOnSave_Proxy" async-iadvise-sink-begin-remote-on-save-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Begin_RemoteOnSave_Stub" async-iadvise-sink-begin-remote-on-save-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIAdviseSink_Finish_RemoteOnSave_Proxy" async-iadvise-sink-finish-remote-on-save-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Finish_RemoteOnSave_Stub" async-iadvise-sink-finish-remote-on-save-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIAdviseSink_Begin_RemoteOnClose_Proxy" async-iadvise-sink-begin-remote-on-close-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Begin_RemoteOnClose_Stub" async-iadvise-sink-begin-remote-on-close-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIAdviseSink_Finish_RemoteOnClose_Proxy" async-iadvise-sink-finish-remote-on-close-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Finish_RemoteOnClose_Stub" async-iadvise-sink-finish-remote-on-close-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IAdviseSink2_RemoteOnLinkSrcChange_Proxy" iadvise-sink-2-remote-on-link-src-change-proxy :convention :stdcall) hresult  (|This| :pointer) (|pmk| :pointer))
(defcfun ("IAdviseSink2_RemoteOnLinkSrcChange_Stub" iadvise-sink-2-remote-on-link-src-change-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Proxy" async-iadvise-sink-2-begin-remote-on-link-src-change-proxy :convention :stdcall) hresult  (|This| :pointer) (|pmk| :pointer))
(defcfun ("AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Stub" async-iadvise-sink-2-begin-remote-on-link-src-change-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Proxy" async-iadvise-sink-2-finish-remote-on-link-src-change-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Stub" async-iadvise-sink-2-finish-remote-on-link-src-change-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDataObject_RemoteGetData_Proxy" idata-object-remote-get-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|pformatetcIn| :pointer) (|pRemoteMedium| :pointer))
(defcfun ("IDataObject_RemoteGetData_Stub" idata-object-remote-get-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDataObject_RemoteGetDataHere_Proxy" idata-object-remote-get-data-here-proxy :convention :stdcall) hresult  (|This| :pointer) (|pformatetc| :pointer) (|pRemoteMedium| :pointer))
(defcfun ("IDataObject_RemoteGetDataHere_Stub" idata-object-remote-get-data-here-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDataObject_QueryGetData_Proxy" idata-object-query-get-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|pformatetc| :pointer))
(defcfun ("IDataObject_QueryGetData_Stub" idata-object-query-get-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDataObject_GetCanonicalFormatEtc_Proxy" idata-object-get-canonical-format-etc-proxy :convention :stdcall) hresult  (|This| :pointer) (|pformatectIn| :pointer) (|pformatetcOut| :pointer))
(defcfun ("IDataObject_GetCanonicalFormatEtc_Stub" idata-object-get-canonical-format-etc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDataObject_RemoteSetData_Proxy" idata-object-remote-set-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|pformatetc| :pointer) (|pmedium| :pointer) (|fRelease| winbool))
(defcfun ("IDataObject_RemoteSetData_Stub" idata-object-remote-set-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDataObject_EnumFormatEtc_Proxy" idata-object-enum-format-etc-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwDirection| dword) (|ppenumFormatEtc| :pointer))
(defcfun ("IDataObject_EnumFormatEtc_Stub" idata-object-enum-format-etc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDataObject_DAdvise_Proxy" idata-object-dadvise-proxy :convention :stdcall) hresult  (|This| :pointer) (|pformatetc| :pointer) (|advf| dword) (|pAdvSink| :pointer) (|pdwConnection| :pointer))
(defcfun ("IDataObject_DAdvise_Stub" idata-object-dadvise-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDataObject_DUnadvise_Proxy" idata-object-dunadvise-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwConnection| dword))
(defcfun ("IDataObject_DUnadvise_Stub" idata-object-dunadvise-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDataObject_EnumDAdvise_Proxy" idata-object-enum-dadvise-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppenumAdvise| :pointer))
(defcfun ("IDataObject_EnumDAdvise_Stub" idata-object-enum-dadvise-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDataAdviseHolder_Advise_Proxy" idata-advise-holder-advise-proxy :convention :stdcall) hresult  (|This| :pointer) (|pDataObject| :pointer) (|pFetc| :pointer) (|advf| dword) (|pAdvise| :pointer) (|pdwConnection| :pointer))
(defcfun ("IDataAdviseHolder_Advise_Stub" idata-advise-holder-advise-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDataAdviseHolder_Unadvise_Proxy" idata-advise-holder-unadvise-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwConnection| dword))
(defcfun ("IDataAdviseHolder_Unadvise_Stub" idata-advise-holder-unadvise-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDataAdviseHolder_EnumAdvise_Proxy" idata-advise-holder-enum-advise-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppenumAdvise| :pointer))
(defcfun ("IDataAdviseHolder_EnumAdvise_Stub" idata-advise-holder-enum-advise-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDataAdviseHolder_SendOnDataChange_Proxy" idata-advise-holder-send-on-data-change-proxy :convention :stdcall) hresult  (|This| :pointer) (|pDataObject| :pointer) (|dwReserved| dword) (|advf| dword))
(defcfun ("IDataAdviseHolder_SendOnDataChange_Stub" idata-advise-holder-send-on-data-change-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMessageFilter_HandleInComingCall_Proxy" imessage-filter-handle-in-coming-call-proxy :convention :stdcall) dword  (|This| :pointer) (|dwCallType| dword) (|htaskCaller| htask) (|dwTickCount| dword) (|lpInterfaceInfo| lpinterfaceinfo))
(defcfun ("IMessageFilter_HandleInComingCall_Stub" imessage-filter-handle-in-coming-call-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMessageFilter_RetryRejectedCall_Proxy" imessage-filter-retry-rejected-call-proxy :convention :stdcall) dword  (|This| :pointer) (|htaskCallee| htask) (|dwTickCount| dword) (|dwRejectType| dword))
(defcfun ("IMessageFilter_RetryRejectedCall_Stub" imessage-filter-retry-rejected-call-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMessageFilter_MessagePending_Proxy" imessage-filter-message-pending-proxy :convention :stdcall) dword  (|This| :pointer) (|htaskCallee| htask) (|dwTickCount| dword) (|dwPendingType| dword))
(defcfun ("IMessageFilter_MessagePending_Stub" imessage-filter-message-pending-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcChannelBuffer_GetBuffer_Proxy" irpc-channel-buffer-get-buffer-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMessage| :pointer) (|riid| :pointer))
(defcfun ("IRpcChannelBuffer_GetBuffer_Stub" irpc-channel-buffer-get-buffer-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcChannelBuffer_SendReceive_Proxy" irpc-channel-buffer-send-receive-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMessage| :pointer) (|pStatus| :pointer))
(defcfun ("IRpcChannelBuffer_SendReceive_Stub" irpc-channel-buffer-send-receive-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcChannelBuffer_FreeBuffer_Proxy" irpc-channel-buffer-free-buffer-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMessage| :pointer))
(defcfun ("IRpcChannelBuffer_FreeBuffer_Stub" irpc-channel-buffer-free-buffer-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcChannelBuffer_GetDestCtx_Proxy" irpc-channel-buffer-get-dest-ctx-proxy :convention :stdcall) hresult  (|This| :pointer) (|pdwDestContext| :pointer) (|ppvDestContext| :pointer))
(defcfun ("IRpcChannelBuffer_GetDestCtx_Stub" irpc-channel-buffer-get-dest-ctx-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcChannelBuffer_IsConnected_Proxy" irpc-channel-buffer-is-connected-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IRpcChannelBuffer_IsConnected_Stub" irpc-channel-buffer-is-connected-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcChannelBuffer2_GetProtocolVersion_Proxy" irpc-channel-buffer-2-get-protocol-version-proxy :convention :stdcall) hresult  (|This| :pointer) (|pdwVersion| :pointer))
(defcfun ("IRpcChannelBuffer2_GetProtocolVersion_Stub" irpc-channel-buffer-2-get-protocol-version-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IAsyncRpcChannelBuffer_Send_Proxy" iasync-rpc-channel-buffer-send-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMsg| :pointer) (|pSync| :pointer) (|pulStatus| :pointer))
(defcfun ("IAsyncRpcChannelBuffer_Send_Stub" iasync-rpc-channel-buffer-send-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IAsyncRpcChannelBuffer_Receive_Proxy" iasync-rpc-channel-buffer-receive-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMsg| :pointer) (|pulStatus| :pointer))
(defcfun ("IAsyncRpcChannelBuffer_Receive_Stub" iasync-rpc-channel-buffer-receive-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IAsyncRpcChannelBuffer_GetDestCtxEx_Proxy" iasync-rpc-channel-buffer-get-dest-ctx-ex-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMsg| :pointer) (|pdwDestContext| :pointer) (|ppvDestContext| :pointer))
(defcfun ("IAsyncRpcChannelBuffer_GetDestCtxEx_Stub" iasync-rpc-channel-buffer-get-dest-ctx-ex-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcChannelBuffer3_Send_Proxy" irpc-channel-buffer-3-send-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMsg| :pointer) (|pulStatus| :pointer))
(defcfun ("IRpcChannelBuffer3_Send_Stub" irpc-channel-buffer-3-send-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcChannelBuffer3_Receive_Proxy" irpc-channel-buffer-3-receive-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMsg| :pointer) (|ulSize| ulong) (|pulStatus| :pointer))
(defcfun ("IRpcChannelBuffer3_Receive_Stub" irpc-channel-buffer-3-receive-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcChannelBuffer3_Cancel_Proxy" irpc-channel-buffer-3-cancel-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMsg| :pointer))
(defcfun ("IRpcChannelBuffer3_Cancel_Stub" irpc-channel-buffer-3-cancel-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcChannelBuffer3_GetCallContext_Proxy" irpc-channel-buffer-3-get-call-context-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMsg| :pointer) (|riid| :pointer) (|pInterface| :pointer))
(defcfun ("IRpcChannelBuffer3_GetCallContext_Stub" irpc-channel-buffer-3-get-call-context-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcChannelBuffer3_GetDestCtxEx_Proxy" irpc-channel-buffer-3-get-dest-ctx-ex-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMsg| :pointer) (|pdwDestContext| :pointer) (|ppvDestContext| :pointer))
(defcfun ("IRpcChannelBuffer3_GetDestCtxEx_Stub" irpc-channel-buffer-3-get-dest-ctx-ex-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcChannelBuffer3_GetState_Proxy" irpc-channel-buffer-3-get-state-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMsg| :pointer) (|pState| :pointer))
(defcfun ("IRpcChannelBuffer3_GetState_Stub" irpc-channel-buffer-3-get-state-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcChannelBuffer3_RegisterAsync_Proxy" irpc-channel-buffer-3-register-async-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMsg| :pointer) (|pAsyncMgr| :pointer))
(defcfun ("IRpcChannelBuffer3_RegisterAsync_Stub" irpc-channel-buffer-3-register-async-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcSyntaxNegotiate_NegotiateSyntax_Proxy" irpc-syntax-negotiate-negotiate-syntax-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMsg| :pointer))
(defcfun ("IRpcSyntaxNegotiate_NegotiateSyntax_Stub" irpc-syntax-negotiate-negotiate-syntax-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcProxyBuffer_Connect_Proxy" irpc-proxy-buffer-connect-proxy :convention :stdcall) hresult  (|This| :pointer) (|pRpcChannelBuffer| :pointer))
(defcfun ("IRpcProxyBuffer_Connect_Stub" irpc-proxy-buffer-connect-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcProxyBuffer_Disconnect_Proxy" irpc-proxy-buffer-disconnect-proxy :convention :stdcall) :void  (|This| :pointer))
(defcfun ("IRpcProxyBuffer_Disconnect_Stub" irpc-proxy-buffer-disconnect-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcStubBuffer_Connect_Proxy" irpc-stub-buffer-connect-proxy :convention :stdcall) hresult  (|This| :pointer) (|pUnkServer| :pointer))
(defcfun ("IRpcStubBuffer_Connect_Stub" irpc-stub-buffer-connect-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcStubBuffer_Disconnect_Proxy" irpc-stub-buffer-disconnect-proxy :convention :stdcall) :void  (|This| :pointer))
(defcfun ("IRpcStubBuffer_Disconnect_Stub" irpc-stub-buffer-disconnect-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcStubBuffer_Invoke_Proxy" irpc-stub-buffer-invoke-proxy :convention :stdcall) hresult  (|This| :pointer) (|_prpcmsg| :pointer) (|_pRpcChannelBuffer| :pointer))
(defcfun ("IRpcStubBuffer_Invoke_Stub" irpc-stub-buffer-invoke-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcStubBuffer_IsIIDSupported_Proxy" irpc-stub-buffer-is-iid-supported-proxy :convention :stdcall) :pointer  (|This| :pointer) (|riid| :pointer))
(defcfun ("IRpcStubBuffer_IsIIDSupported_Stub" irpc-stub-buffer-is-iid-supported-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcStubBuffer_CountRefs_Proxy" irpc-stub-buffer-count-refs-proxy :convention :stdcall) ulong  (|This| :pointer))
(defcfun ("IRpcStubBuffer_CountRefs_Stub" irpc-stub-buffer-count-refs-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcStubBuffer_DebugServerQueryInterface_Proxy" irpc-stub-buffer-debug-server-query-interface-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppv| :pointer))
(defcfun ("IRpcStubBuffer_DebugServerQueryInterface_Stub" irpc-stub-buffer-debug-server-query-interface-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcStubBuffer_DebugServerRelease_Proxy" irpc-stub-buffer-debug-server-release-proxy :convention :stdcall) :void  (|This| :pointer) (|pv| :pointer))
(defcfun ("IRpcStubBuffer_DebugServerRelease_Stub" irpc-stub-buffer-debug-server-release-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPSFactoryBuffer_CreateProxy_Proxy" ips-factory-buffer-create-proxy-proxy :convention :stdcall) hresult  (|This| :pointer) (|pUnkOuter| :pointer) (|riid| :pointer) (|ppProxy| :pointer) (|ppv| :pointer))
(defcfun ("IPSFactoryBuffer_CreateProxy_Stub" ips-factory-buffer-create-proxy-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPSFactoryBuffer_CreateStub_Proxy" ips-factory-buffer-create-stub-proxy :convention :stdcall) hresult  (|This| :pointer) (|riid| :pointer) (|pUnkServer| :pointer) (|ppStub| :pointer))
(defcfun ("IPSFactoryBuffer_CreateStub_Stub" ips-factory-buffer-create-stub-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IChannelHook_ClientGetSize_Proxy" ichannel-hook-client-get-size-proxy :convention :stdcall) :void  (|This| :pointer) (|uExtent| :pointer) (|riid| :pointer) (|pDataSize| :pointer))
(defcfun ("IChannelHook_ClientGetSize_Stub" ichannel-hook-client-get-size-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IChannelHook_ClientFillBuffer_Proxy" ichannel-hook-client-fill-buffer-proxy :convention :stdcall) :void  (|This| :pointer) (|uExtent| :pointer) (|riid| :pointer) (|pDataSize| :pointer) (|pDataBuffer| :pointer))
(defcfun ("IChannelHook_ClientFillBuffer_Stub" ichannel-hook-client-fill-buffer-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IChannelHook_ClientNotify_Proxy" ichannel-hook-client-notify-proxy :convention :stdcall) :void  (|This| :pointer) (|uExtent| :pointer) (|riid| :pointer) (|cbDataSize| ulong) (|pDataBuffer| :pointer) (|lDataRep| dword) (|hrFault| hresult))
(defcfun ("IChannelHook_ClientNotify_Stub" ichannel-hook-client-notify-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IChannelHook_ServerNotify_Proxy" ichannel-hook-server-notify-proxy :convention :stdcall) :void  (|This| :pointer) (|uExtent| :pointer) (|riid| :pointer) (|cbDataSize| ulong) (|pDataBuffer| :pointer) (|lDataRep| dword))
(defcfun ("IChannelHook_ServerNotify_Stub" ichannel-hook-server-notify-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IChannelHook_ServerGetSize_Proxy" ichannel-hook-server-get-size-proxy :convention :stdcall) :void  (|This| :pointer) (|uExtent| :pointer) (|riid| :pointer) (|hrFault| hresult) (|pDataSize| :pointer))
(defcfun ("IChannelHook_ServerGetSize_Stub" ichannel-hook-server-get-size-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IChannelHook_ServerFillBuffer_Proxy" ichannel-hook-server-fill-buffer-proxy :convention :stdcall) :void  (|This| :pointer) (|uExtent| :pointer) (|riid| :pointer) (|pDataSize| :pointer) (|pDataBuffer| :pointer) (|hrFault| hresult))
(defcfun ("IChannelHook_ServerFillBuffer_Stub" ichannel-hook-server-fill-buffer-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IClientSecurity_QueryBlanket_Proxy" iclient-security-query-blanket-proxy :convention :stdcall) hresult  (|This| :pointer) (|pProxy| :pointer) (|pAuthnSvc| :pointer) (|pAuthzSvc| :pointer) (|pServerPrincName| :pointer) (|pAuthnLevel| :pointer) (|pImpLevel| :pointer) (|pAuthInfo| :pointer) (|pCapabilites| :pointer))
(defcfun ("IClientSecurity_QueryBlanket_Stub" iclient-security-query-blanket-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IClientSecurity_SetBlanket_Proxy" iclient-security-set-blanket-proxy :convention :stdcall) hresult  (|This| :pointer) (|pProxy| :pointer) (|dwAuthnSvc| dword) (|dwAuthzSvc| dword) (|pServerPrincName| :pointer) (|dwAuthnLevel| dword) (|dwImpLevel| dword) (|pAuthInfo| :pointer) (|dwCapabilities| dword))
(defcfun ("IClientSecurity_SetBlanket_Stub" iclient-security-set-blanket-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IClientSecurity_CopyProxy_Proxy" iclient-security-copy-proxy-proxy :convention :stdcall) hresult  (|This| :pointer) (|pProxy| :pointer) (|ppCopy| :pointer))
(defcfun ("IClientSecurity_CopyProxy_Stub" iclient-security-copy-proxy-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IServerSecurity_QueryBlanket_Proxy" iserver-security-query-blanket-proxy :convention :stdcall) hresult  (|This| :pointer) (|pAuthnSvc| :pointer) (|pAuthzSvc| :pointer) (|pServerPrincName| :pointer) (|pAuthnLevel| :pointer) (|pImpLevel| :pointer) (|pPrivs| :pointer) (|pCapabilities| :pointer))
(defcfun ("IServerSecurity_QueryBlanket_Stub" iserver-security-query-blanket-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IServerSecurity_ImpersonateClient_Proxy" iserver-security-impersonate-client-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IServerSecurity_ImpersonateClient_Stub" iserver-security-impersonate-client-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IServerSecurity_RevertToSelf_Proxy" iserver-security-revert-to-self-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IServerSecurity_RevertToSelf_Stub" iserver-security-revert-to-self-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IServerSecurity_IsImpersonating_Proxy" iserver-security-is-impersonating-proxy :convention :stdcall) winbool  (|This| :pointer))
(defcfun ("IServerSecurity_IsImpersonating_Stub" iserver-security-is-impersonating-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IClassActivator_GetClassObject_Proxy" iclass-activator-get-class-object-proxy :convention :stdcall) hresult  (|This| :pointer) (|rclsid| :pointer) (|dwClassContext| dword) (|locale| lcid) (|riid| :pointer) (|ppv| :pointer))
(defcfun ("IClassActivator_GetClassObject_Stub" iclass-activator-get-class-object-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcOptions_Set_Proxy" irpc-options-set-proxy :convention :stdcall) hresult  (|This| :pointer) (|pPrx| :pointer) (|dwProperty| dword) (|dwValue| ulong_ptr))
(defcfun ("IRpcOptions_Set_Stub" irpc-options-set-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcOptions_Query_Proxy" irpc-options-query-proxy :convention :stdcall) hresult  (|This| :pointer) (|pPrx| :pointer) (|dwProperty| dword) (|pdwValue| :pointer))
(defcfun ("IRpcOptions_Query_Stub" irpc-options-query-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IFillLockBytes_RemoteFillAppend_Proxy" ifill-lock-bytes-remote-fill-append-proxy :convention :stdcall) hresult  (|This| :pointer) (|pv| :pointer) (|cb| ulong) (|pcbWritten| :pointer))
(defcfun ("IFillLockBytes_RemoteFillAppend_Stub" ifill-lock-bytes-remote-fill-append-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IFillLockBytes_RemoteFillAt_Proxy" ifill-lock-bytes-remote-fill-at-proxy :convention :stdcall) hresult  (|This| :pointer) (|ulOffset| ularge_integer) (|pv| :pointer) (|cb| ulong) (|pcbWritten| :pointer))
(defcfun ("IFillLockBytes_RemoteFillAt_Stub" ifill-lock-bytes-remote-fill-at-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IFillLockBytes_SetFillSize_Proxy" ifill-lock-bytes-set-fill-size-proxy :convention :stdcall) hresult  (|This| :pointer) (|ulSize| ularge_integer))
(defcfun ("IFillLockBytes_SetFillSize_Stub" ifill-lock-bytes-set-fill-size-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IFillLockBytes_Terminate_Proxy" ifill-lock-bytes-terminate-proxy :convention :stdcall) hresult  (|This| :pointer) (|bCanceled| winbool))
(defcfun ("IFillLockBytes_Terminate_Stub" ifill-lock-bytes-terminate-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IProgressNotify_OnProgress_Proxy" iprogress-notify-on-progress-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwProgressCurrent| dword) (|dwProgressMaximum| dword) (|fAccurate| winbool) (|fOwner| winbool))
(defcfun ("IProgressNotify_OnProgress_Stub" iprogress-notify-on-progress-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ILayoutStorage_LayoutScript_Proxy" ilayout-storage-layout-script-proxy :convention :stdcall) hresult  (|This| :pointer) (|pStorageLayout| :pointer) (|nEntries| dword) (|glfInterleavedFlag| dword))
(defcfun ("ILayoutStorage_LayoutScript_Stub" ilayout-storage-layout-script-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ILayoutStorage_BeginMonitor_Proxy" ilayout-storage-begin-monitor-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ILayoutStorage_BeginMonitor_Stub" ilayout-storage-begin-monitor-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ILayoutStorage_EndMonitor_Proxy" ilayout-storage-end-monitor-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ILayoutStorage_EndMonitor_Stub" ilayout-storage-end-monitor-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ILayoutStorage_ReLayoutDocfile_Proxy" ilayout-storage-re-layout-docfile-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwcsNewDfName| :pointer))
(defcfun ("ILayoutStorage_ReLayoutDocfile_Stub" ilayout-storage-re-layout-docfile-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ILayoutStorage_ReLayoutDocfileOnILockBytes_Proxy" ilayout-storage-re-layout-docfile-on-ilock-bytes-proxy :convention :stdcall) hresult  (|This| :pointer) (|pILockBytes| :pointer))
(defcfun ("ILayoutStorage_ReLayoutDocfileOnILockBytes_Stub" ilayout-storage-re-layout-docfile-on-ilock-bytes-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBlockingLock_Lock_Proxy" iblocking-lock-lock-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwTimeout| dword))
(defcfun ("IBlockingLock_Lock_Stub" iblocking-lock-lock-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBlockingLock_Unlock_Proxy" iblocking-lock-unlock-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IBlockingLock_Unlock_Stub" iblocking-lock-unlock-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITimeAndNoticeControl_SuppressChanges_Proxy" itime-and-notice-control-suppress-changes-proxy :convention :stdcall) hresult  (|This| :pointer) (|res1| dword) (|res2| dword))
(defcfun ("ITimeAndNoticeControl_SuppressChanges_Stub" itime-and-notice-control-suppress-changes-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOplockStorage_CreateStorageEx_Proxy" ioplock-storage-create-storage-ex-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwcsName| lpcwstr) (|grfMode| dword) (|stgfmt| dword) (|grfAttrs| dword) (|riid| :pointer) (|ppstgOpen| :pointer))
(defcfun ("IOplockStorage_CreateStorageEx_Stub" ioplock-storage-create-storage-ex-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOplockStorage_OpenStorageEx_Proxy" ioplock-storage-open-storage-ex-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwcsName| lpcwstr) (|grfMode| dword) (|stgfmt| dword) (|grfAttrs| dword) (|riid| :pointer) (|ppstgOpen| :pointer))
(defcfun ("IOplockStorage_OpenStorageEx_Stub" ioplock-storage-open-storage-ex-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISurrogate_LoadDllServer_Proxy" isurrogate-load-dll-server-proxy :convention :stdcall) hresult  (|This| :pointer) (|Clsid| :pointer))
(defcfun ("ISurrogate_LoadDllServer_Stub" isurrogate-load-dll-server-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISurrogate_FreeSurrogate_Proxy" isurrogate-free-surrogate-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ISurrogate_FreeSurrogate_Stub" isurrogate-free-surrogate-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IGlobalInterfaceTable_RegisterInterfaceInGlobal_Proxy" iglobal-interface-table-register-interface-in-global-proxy :convention :stdcall) hresult  (|This| :pointer) (|pUnk| :pointer) (|riid| :pointer) (|pdwCookie| :pointer))
(defcfun ("IGlobalInterfaceTable_RegisterInterfaceInGlobal_Stub" iglobal-interface-table-register-interface-in-global-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IGlobalInterfaceTable_RevokeInterfaceFromGlobal_Proxy" iglobal-interface-table-revoke-interface-from-global-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwCookie| dword))
(defcfun ("IGlobalInterfaceTable_RevokeInterfaceFromGlobal_Stub" iglobal-interface-table-revoke-interface-from-global-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IGlobalInterfaceTable_GetInterfaceFromGlobal_Proxy" iglobal-interface-table-get-interface-from-global-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwCookie| dword) (|riid| :pointer) (|ppv| :pointer))
(defcfun ("IGlobalInterfaceTable_GetInterfaceFromGlobal_Stub" iglobal-interface-table-get-interface-from-global-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDirectWriterLock_WaitForWriteAccess_Proxy" idirect-writer-lock-wait-for-write-access-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwTimeout| dword))
(defcfun ("IDirectWriterLock_WaitForWriteAccess_Stub" idirect-writer-lock-wait-for-write-access-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDirectWriterLock_ReleaseWriteAccess_Proxy" idirect-writer-lock-release-write-access-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IDirectWriterLock_ReleaseWriteAccess_Stub" idirect-writer-lock-release-write-access-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDirectWriterLock_HaveWriteAccess_Proxy" idirect-writer-lock-have-write-access-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IDirectWriterLock_HaveWriteAccess_Stub" idirect-writer-lock-have-write-access-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISynchronize_Wait_Proxy" isynchronize-wait-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwFlags| dword) (|dwMilliseconds| dword))
(defcfun ("ISynchronize_Wait_Stub" isynchronize-wait-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISynchronize_Signal_Proxy" isynchronize-signal-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ISynchronize_Signal_Stub" isynchronize-signal-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISynchronize_Reset_Proxy" isynchronize-reset-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ISynchronize_Reset_Stub" isynchronize-reset-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISynchronizeHandle_GetHandle_Proxy" isynchronize-handle-get-handle-proxy :convention :stdcall) hresult  (|This| :pointer) (|ph| :pointer))
(defcfun ("ISynchronizeHandle_GetHandle_Stub" isynchronize-handle-get-handle-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISynchronizeEvent_SetEventHandle_Proxy" isynchronize-event-set-event-handle-proxy :convention :stdcall) hresult  (|This| :pointer) (|ph| :pointer))
(defcfun ("ISynchronizeEvent_SetEventHandle_Stub" isynchronize-event-set-event-handle-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISynchronizeContainer_AddSynchronize_Proxy" isynchronize-container-add-synchronize-proxy :convention :stdcall) hresult  (|This| :pointer) (|pSync| :pointer))
(defcfun ("ISynchronizeContainer_AddSynchronize_Stub" isynchronize-container-add-synchronize-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISynchronizeContainer_WaitMultiple_Proxy" isynchronize-container-wait-multiple-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwFlags| dword) (|dwTimeOut| dword) (|ppSync| :pointer))
(defcfun ("ISynchronizeContainer_WaitMultiple_Stub" isynchronize-container-wait-multiple-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISynchronizeMutex_ReleaseMutex_Proxy" isynchronize-mutex-release-mutex-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ISynchronizeMutex_ReleaseMutex_Stub" isynchronize-mutex-release-mutex-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICancelMethodCalls_Cancel_Proxy" icancel-method-calls-cancel-proxy :convention :stdcall) hresult  (|This| :pointer) (|ulSeconds| ulong))
(defcfun ("ICancelMethodCalls_Cancel_Stub" icancel-method-calls-cancel-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICancelMethodCalls_TestCancel_Proxy" icancel-method-calls-test-cancel-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ICancelMethodCalls_TestCancel_Stub" icancel-method-calls-test-cancel-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IAsyncManager_CompleteCall_Proxy" iasync-manager-complete-call-proxy :convention :stdcall) hresult  (|This| :pointer) (|Result| hresult))
(defcfun ("IAsyncManager_CompleteCall_Stub" iasync-manager-complete-call-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IAsyncManager_GetCallContext_Proxy" iasync-manager-get-call-context-proxy :convention :stdcall) hresult  (|This| :pointer) (|riid| :pointer) (|pInterface| :pointer))
(defcfun ("IAsyncManager_GetCallContext_Stub" iasync-manager-get-call-context-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IAsyncManager_GetState_Proxy" iasync-manager-get-state-proxy :convention :stdcall) hresult  (|This| :pointer) (|pulStateFlags| :pointer))
(defcfun ("IAsyncManager_GetState_Stub" iasync-manager-get-state-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICallFactory_CreateCall_Proxy" icall-factory-create-call-proxy :convention :stdcall) hresult  (|This| :pointer) (|riid| :pointer) (|pCtrlUnk| :pointer) (|riid2| :pointer) (|ppv| :pointer))
(defcfun ("ICallFactory_CreateCall_Stub" icall-factory-create-call-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcHelper_GetDCOMProtocolVersion_Proxy" irpc-helper-get-dcom-protocol-version-proxy :convention :stdcall) hresult  (|This| :pointer) (|pComVersion| :pointer))
(defcfun ("IRpcHelper_GetDCOMProtocolVersion_Stub" irpc-helper-get-dcom-protocol-version-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRpcHelper_GetIIDFromOBJREF_Proxy" irpc-helper-get-iid-from-objref-proxy :convention :stdcall) hresult  (|This| :pointer) (|pObjRef| :pointer) (|piid| :pointer))
(defcfun ("IRpcHelper_GetIIDFromOBJREF_Stub" irpc-helper-get-iid-from-objref-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IReleaseMarshalBuffers_ReleaseMarshalBuffer_Proxy" irelease-marshal-buffers-release-marshal-buffer-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMsg| :pointer) (|dwFlags| dword) (|pChnl| :pointer))
(defcfun ("IReleaseMarshalBuffers_ReleaseMarshalBuffer_Stub" irelease-marshal-buffers-release-marshal-buffer-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IWaitMultiple_WaitMultiple_Proxy" iwait-multiple-wait-multiple-proxy :convention :stdcall) hresult  (|This| :pointer) (|timeout| dword) (|pSync| :pointer))
(defcfun ("IWaitMultiple_WaitMultiple_Stub" iwait-multiple-wait-multiple-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IWaitMultiple_AddSynchronize_Proxy" iwait-multiple-add-synchronize-proxy :convention :stdcall) hresult  (|This| :pointer) (|pSync| :pointer))
(defcfun ("IWaitMultiple_AddSynchronize_Stub" iwait-multiple-add-synchronize-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IUrlMon_AsyncGetClassBits_Proxy" iurl-mon-async-get-class-bits-proxy :convention :stdcall) hresult  (|This| :pointer) (|rclsid| :pointer) (|pszTYPE| lpcwstr) (|pszExt| lpcwstr) (|dwFileVersionMS| dword) (|dwFileVersionLS| dword) (|pszCodeBase| lpcwstr) (|pbc| :pointer) (|dwClassContext| dword) (|riid| :pointer) (|flags| dword))
(defcfun ("IUrlMon_AsyncGetClassBits_Stub" iurl-mon-async-get-class-bits-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IForegroundTransfer_AllowForegroundTransfer_Proxy" iforeground-transfer-allow-foreground-transfer-proxy :convention :stdcall) hresult  (|This| :pointer) (|lpvReserved| :pointer))
(defcfun ("IForegroundTransfer_AllowForegroundTransfer_Stub" iforeground-transfer-allow-foreground-transfer-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IAddrTrackingControl_EnableCOMDynamicAddrTracking_Proxy" iaddr-tracking-control-enable-com-dynamic-addr-tracking-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IAddrTrackingControl_EnableCOMDynamicAddrTracking_Stub" iaddr-tracking-control-enable-com-dynamic-addr-tracking-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IAddrTrackingControl_DisableCOMDynamicAddrTracking_Proxy" iaddr-tracking-control-disable-com-dynamic-addr-tracking-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IAddrTrackingControl_DisableCOMDynamicAddrTracking_Stub" iaddr-tracking-control-disable-com-dynamic-addr-tracking-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IAddrExclusionControl_GetCurrentAddrExclusionList_Proxy" iaddr-exclusion-control-get-current-addr-exclusion-list-proxy :convention :stdcall) hresult  (|This| :pointer) (|riid| :pointer) (|ppEnumerator| :pointer))
(defcfun ("IAddrExclusionControl_GetCurrentAddrExclusionList_Stub" iaddr-exclusion-control-get-current-addr-exclusion-list-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IAddrExclusionControl_UpdateAddrExclusionList_Proxy" iaddr-exclusion-control-update-addr-exclusion-list-proxy :convention :stdcall) hresult  (|This| :pointer) (|pEnumerator| :pointer))
(defcfun ("IAddrExclusionControl_UpdateAddrExclusionList_Stub" iaddr-exclusion-control-update-addr-exclusion-list-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPipeByte_Pull_Proxy" ipipe-byte-pull-proxy :convention :stdcall) hresult  (|This| :pointer) (|buf| :pointer) (|cRequest| ulong) (|pcReturned| :pointer))
(defcfun ("IPipeByte_Pull_Stub" ipipe-byte-pull-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPipeByte_Push_Proxy" ipipe-byte-push-proxy :convention :stdcall) hresult  (|This| :pointer) (|buf| :pointer) (|cSent| ulong))
(defcfun ("IPipeByte_Push_Stub" ipipe-byte-push-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIPipeByte_Begin_Pull_Proxy" async-ipipe-byte-begin-pull-proxy :convention :stdcall) hresult  (|This| :pointer) (|cRequest| ulong))
(defcfun ("AsyncIPipeByte_Begin_Pull_Stub" async-ipipe-byte-begin-pull-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIPipeByte_Finish_Pull_Proxy" async-ipipe-byte-finish-pull-proxy :convention :stdcall) hresult  (|This| :pointer) (|buf| :pointer) (|pcReturned| :pointer))
(defcfun ("AsyncIPipeByte_Finish_Pull_Stub" async-ipipe-byte-finish-pull-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIPipeByte_Begin_Push_Proxy" async-ipipe-byte-begin-push-proxy :convention :stdcall) hresult  (|This| :pointer) (|buf| :pointer) (|cSent| ulong))
(defcfun ("AsyncIPipeByte_Begin_Push_Stub" async-ipipe-byte-begin-push-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIPipeByte_Finish_Push_Proxy" async-ipipe-byte-finish-push-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIPipeByte_Finish_Push_Stub" async-ipipe-byte-finish-push-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPipeLong_Pull_Proxy" ipipe-long-pull-proxy :convention :stdcall) hresult  (|This| :pointer) (|buf| :pointer) (|cRequest| ulong) (|pcReturned| :pointer))
(defcfun ("IPipeLong_Pull_Stub" ipipe-long-pull-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPipeLong_Push_Proxy" ipipe-long-push-proxy :convention :stdcall) hresult  (|This| :pointer) (|buf| :pointer) (|cSent| ulong))
(defcfun ("IPipeLong_Push_Stub" ipipe-long-push-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIPipeLong_Begin_Pull_Proxy" async-ipipe-long-begin-pull-proxy :convention :stdcall) hresult  (|This| :pointer) (|cRequest| ulong))
(defcfun ("AsyncIPipeLong_Begin_Pull_Stub" async-ipipe-long-begin-pull-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIPipeLong_Finish_Pull_Proxy" async-ipipe-long-finish-pull-proxy :convention :stdcall) hresult  (|This| :pointer) (|buf| :pointer) (|pcReturned| :pointer))
(defcfun ("AsyncIPipeLong_Finish_Pull_Stub" async-ipipe-long-finish-pull-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIPipeLong_Begin_Push_Proxy" async-ipipe-long-begin-push-proxy :convention :stdcall) hresult  (|This| :pointer) (|buf| :pointer) (|cSent| ulong))
(defcfun ("AsyncIPipeLong_Begin_Push_Stub" async-ipipe-long-begin-push-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIPipeLong_Finish_Push_Proxy" async-ipipe-long-finish-push-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIPipeLong_Finish_Push_Stub" async-ipipe-long-finish-push-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPipeDouble_Pull_Proxy" ipipe-double-pull-proxy :convention :stdcall) hresult  (|This| :pointer) (|buf| :pointer) (|cRequest| ulong) (|pcReturned| :pointer))
(defcfun ("IPipeDouble_Pull_Stub" ipipe-double-pull-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPipeDouble_Push_Proxy" ipipe-double-push-proxy :convention :stdcall) hresult  (|This| :pointer) (|buf| :pointer) (|cSent| ulong))
(defcfun ("IPipeDouble_Push_Stub" ipipe-double-push-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIPipeDouble_Begin_Pull_Proxy" async-ipipe-double-begin-pull-proxy :convention :stdcall) hresult  (|This| :pointer) (|cRequest| ulong))
(defcfun ("AsyncIPipeDouble_Begin_Pull_Stub" async-ipipe-double-begin-pull-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIPipeDouble_Finish_Pull_Proxy" async-ipipe-double-finish-pull-proxy :convention :stdcall) hresult  (|This| :pointer) (|buf| :pointer) (|pcReturned| :pointer))
(defcfun ("AsyncIPipeDouble_Finish_Pull_Stub" async-ipipe-double-finish-pull-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIPipeDouble_Begin_Push_Proxy" async-ipipe-double-begin-push-proxy :convention :stdcall) hresult  (|This| :pointer) (|buf| :pointer) (|cSent| ulong))
(defcfun ("AsyncIPipeDouble_Begin_Push_Stub" async-ipipe-double-begin-push-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("AsyncIPipeDouble_Finish_Push_Proxy" async-ipipe-double-finish-push-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIPipeDouble_Finish_Push_Stub" async-ipipe-double-finish-push-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IThumbnailExtractor_ExtractThumbnail_Proxy" ithumbnail-extractor-extract-thumbnail-proxy :convention :stdcall) hresult  (|This| :pointer) (|pStg| :pointer) (|ulLength| ulong) (|ulHeight| ulong) (|pulOutputLength| :pointer) (|pulOutputHeight| :pointer) (|phOutputBitmap| :pointer))
(defcfun ("IThumbnailExtractor_ExtractThumbnail_Stub" ithumbnail-extractor-extract-thumbnail-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IThumbnailExtractor_OnFileUpdated_Proxy" ithumbnail-extractor-on-file-updated-proxy :convention :stdcall) hresult  (|This| :pointer) (|pStg| :pointer))
(defcfun ("IThumbnailExtractor_OnFileUpdated_Stub" ithumbnail-extractor-on-file-updated-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDummyHICONIncluder_Dummy_Proxy" idummy-hicon-includer-dummy-proxy :convention :stdcall) hresult  (|This| :pointer) (|h1| hicon) (|h2| hdc))
(defcfun ("IDummyHICONIncluder_Dummy_Stub" idummy-hicon-includer-dummy-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IProcessLock_AddRefOnProcess_Proxy" iprocess-lock-add-ref-on-process-proxy :convention :stdcall) ulong  (|This| :pointer))
(defcfun ("IProcessLock_AddRefOnProcess_Stub" iprocess-lock-add-ref-on-process-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IProcessLock_ReleaseRefOnProcess_Proxy" iprocess-lock-release-ref-on-process-proxy :convention :stdcall) ulong  (|This| :pointer))
(defcfun ("IProcessLock_ReleaseRefOnProcess_Stub" iprocess-lock-release-ref-on-process-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISurrogateService_Init_Proxy" isurrogate-service-init-proxy :convention :stdcall) hresult  (|This| :pointer) (|rguidProcessID| :pointer) (|pProcessLock| :pointer) (|pfApplicationAware| :pointer))
(defcfun ("ISurrogateService_Init_Stub" isurrogate-service-init-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISurrogateService_ApplicationLaunch_Proxy" isurrogate-service-application-launch-proxy :convention :stdcall) hresult  (|This| :pointer) (|rguidApplID| :pointer) (|appType| |ApplicationType|))
(defcfun ("ISurrogateService_ApplicationLaunch_Stub" isurrogate-service-application-launch-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISurrogateService_ApplicationFree_Proxy" isurrogate-service-application-free-proxy :convention :stdcall) hresult  (|This| :pointer) (|rguidApplID| :pointer))
(defcfun ("ISurrogateService_ApplicationFree_Stub" isurrogate-service-application-free-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISurrogateService_CatalogRefresh_Proxy" isurrogate-service-catalog-refresh-proxy :convention :stdcall) hresult  (|This| :pointer) (|ulReserved| ulong))
(defcfun ("ISurrogateService_CatalogRefresh_Stub" isurrogate-service-catalog-refresh-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISurrogateService_ProcessShutdown_Proxy" isurrogate-service-process-shutdown-proxy :convention :stdcall) hresult  (|This| :pointer) (|shutdownType| |ShutdownType|))
(defcfun ("ISurrogateService_ProcessShutdown_Stub" isurrogate-service-process-shutdown-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IComThreadingInfo_GetCurrentApartmentType_Proxy" icom-threading-info-get-current-apartment-type-proxy :convention :stdcall) hresult  (|This| :pointer) (|pAptType| :pointer))
(defcfun ("IComThreadingInfo_GetCurrentApartmentType_Stub" icom-threading-info-get-current-apartment-type-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IComThreadingInfo_GetCurrentThreadType_Proxy" icom-threading-info-get-current-thread-type-proxy :convention :stdcall) hresult  (|This| :pointer) (|pThreadType| :pointer))
(defcfun ("IComThreadingInfo_GetCurrentThreadType_Stub" icom-threading-info-get-current-thread-type-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IComThreadingInfo_GetCurrentLogicalThreadId_Proxy" icom-threading-info-get-current-logical-thread-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|pguidLogicalThreadId| :pointer))
(defcfun ("IComThreadingInfo_GetCurrentLogicalThreadId_Stub" icom-threading-info-get-current-logical-thread-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IComThreadingInfo_SetCurrentLogicalThreadId_Proxy" icom-threading-info-set-current-logical-thread-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|rguid| :pointer))
(defcfun ("IComThreadingInfo_SetCurrentLogicalThreadId_Stub" icom-threading-info-set-current-logical-thread-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IProcessInitControl_ResetInitializerTimeout_Proxy" iprocess-init-control-reset-initializer-timeout-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwSecondsRemaining| dword))
(defcfun ("IProcessInitControl_ResetInitializerTimeout_Stub" iprocess-init-control-reset-initializer-timeout-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInitializeSpy_PreInitialize_Proxy" iinitialize-spy-pre-initialize-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwCoInit| dword) (|dwCurThreadAptRefs| dword))
(defcfun ("IInitializeSpy_PreInitialize_Stub" iinitialize-spy-pre-initialize-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInitializeSpy_PostInitialize_Proxy" iinitialize-spy-post-initialize-proxy :convention :stdcall) hresult  (|This| :pointer) (|hrCoInit| hresult) (|dwCoInit| dword) (|dwNewThreadAptRefs| dword))
(defcfun ("IInitializeSpy_PostInitialize_Stub" iinitialize-spy-post-initialize-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInitializeSpy_PreUninitialize_Proxy" iinitialize-spy-pre-uninitialize-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwCurThreadAptRefs| dword))
(defcfun ("IInitializeSpy_PreUninitialize_Stub" iinitialize-spy-pre-uninitialize-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInitializeSpy_PostUninitialize_Proxy" iinitialize-spy-post-uninitialize-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwNewThreadAptRefs| dword))
(defcfun ("IInitializeSpy_PostUninitialize_Stub" iinitialize-spy-post-uninitialize-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ASYNC_STGMEDIUM_UserSize" asyncstgmedium-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("ASYNC_STGMEDIUM_UserMarshal" asyncstgmedium-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("ASYNC_STGMEDIUM_UserUnmarshal" asyncstgmedium-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("ASYNC_STGMEDIUM_UserFree" asyncstgmedium-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("CLIPFORMAT_UserSize" clipformat-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("CLIPFORMAT_UserMarshal" clipformat-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("CLIPFORMAT_UserUnmarshal" clipformat-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("CLIPFORMAT_UserFree" clipformat-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("FLAG_STGMEDIUM_UserSize" flagstgmedium-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("FLAG_STGMEDIUM_UserMarshal" flagstgmedium-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("FLAG_STGMEDIUM_UserUnmarshal" flagstgmedium-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("FLAG_STGMEDIUM_UserFree" flagstgmedium-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("HBITMAP_UserSize" hbitmap-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("HBITMAP_UserMarshal" hbitmap-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("HBITMAP_UserUnmarshal" hbitmap-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("HBITMAP_UserFree" hbitmap-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("HDC_UserSize" hdc-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("HDC_UserMarshal" hdc-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("HDC_UserUnmarshal" hdc-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("HDC_UserFree" hdc-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("HICON_UserSize" hicon-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("HICON_UserMarshal" hicon-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("HICON_UserUnmarshal" hicon-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("HICON_UserFree" hicon-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("SNB_UserSize" snb-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("SNB_UserMarshal" snb-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("SNB_UserUnmarshal" snb-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("SNB_UserFree" snb-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("STGMEDIUM_UserSize" stgmedium-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("STGMEDIUM_UserMarshal" stgmedium-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("STGMEDIUM_UserUnmarshal" stgmedium-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("STGMEDIUM_UserFree" stgmedium-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("IEnumUnknown_Next_Proxy" ienum-unknown-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IEnumUnknown_Next_Stub" ienum-unknown-next-stub :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IBindCtx_SetBindOptions_Proxy" ibind-ctx-set-bind-options-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbindopts| :pointer))
(defcfun ("IBindCtx_SetBindOptions_Stub" ibind-ctx-set-bind-options-stub :convention :stdcall) hresult  (|This| :pointer) (|pbindopts| :pointer))
(defcfun ("IBindCtx_GetBindOptions_Proxy" ibind-ctx-get-bind-options-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbindopts| :pointer))
(defcfun ("IBindCtx_GetBindOptions_Stub" ibind-ctx-get-bind-options-stub :convention :stdcall) hresult  (|This| :pointer) (|pbindopts| :pointer))
(defcfun ("IEnumMoniker_Next_Proxy" ienum-moniker-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IEnumMoniker_Next_Stub" ienum-moniker-next-stub :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IRunnableObject_IsRunning_Proxy" irunnable-object-is-running-proxy :convention :stdcall) winbool  (|This| :pointer))
(defcfun ("IRunnableObject_IsRunning_Stub" irunnable-object-is-running-stub :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IMoniker_BindToObject_Proxy" imoniker-bind-to-object-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbc| :pointer) (|pmkToLeft| :pointer) (|riidResult| :pointer) (|ppvResult| :pointer))
(defcfun ("IMoniker_BindToObject_Stub" imoniker-bind-to-object-stub :convention :stdcall) hresult  (|This| :pointer) (|pbc| :pointer) (|pmkToLeft| :pointer) (|riidResult| :pointer) (|ppvResult| :pointer))
(defcfun ("IMoniker_BindToStorage_Proxy" imoniker-bind-to-storage-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbc| :pointer) (|pmkToLeft| :pointer) (|riid| :pointer) (|ppvObj| :pointer))
(defcfun ("IMoniker_BindToStorage_Stub" imoniker-bind-to-storage-stub :convention :stdcall) hresult  (|This| :pointer) (|pbc| :pointer) (|pmkToLeft| :pointer) (|riid| :pointer) (|ppvObj| :pointer))
(defcfun ("IEnumString_Next_Proxy" ienum-string-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IEnumString_Next_Stub" ienum-string-next-stub :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("ISequentialStream_Read_Proxy" isequential-stream-read-proxy :convention :stdcall) hresult  (|This| :pointer) (|pv| :pointer) (|cb| ulong) (|pcbRead| :pointer))
(defcfun ("ISequentialStream_Read_Stub" isequential-stream-read-stub :convention :stdcall) hresult  (|This| :pointer) (|pv| :pointer) (|cb| ulong) (|pcbRead| :pointer))
(defcfun ("ISequentialStream_Write_Proxy" isequential-stream-write-proxy :convention :stdcall) hresult  (|This| :pointer) (|pv| :pointer) (|cb| ulong) (|pcbWritten| :pointer))
(defcfun ("ISequentialStream_Write_Stub" isequential-stream-write-stub :convention :stdcall) hresult  (|This| :pointer) (|pv| :pointer) (|cb| ulong) (|pcbWritten| :pointer))
(defcfun ("IStream_Seek_Proxy" istream-seek-proxy :convention :stdcall) hresult  (|This| :pointer) (|dlibMove| large_integer) (|dwOrigin| dword) (|plibNewPosition| :pointer))
(defcfun ("IStream_Seek_Stub" istream-seek-stub :convention :stdcall) hresult  (|This| :pointer) (|dlibMove| large_integer) (|dwOrigin| dword) (|plibNewPosition| :pointer))
(defcfun ("IStream_CopyTo_Proxy" istream-copy-to-proxy :convention :stdcall) hresult  (|This| :pointer) (|pstm| :pointer) (|cb| ularge_integer) (|pcbRead| :pointer) (|pcbWritten| :pointer))
(defcfun ("IStream_CopyTo_Stub" istream-copy-to-stub :convention :stdcall) hresult  (|This| :pointer) (|pstm| :pointer) (|cb| ularge_integer) (|pcbRead| :pointer) (|pcbWritten| :pointer))
(defcfun ("IEnumSTATSTG_Next_Proxy" ienum-statstg-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IEnumSTATSTG_Next_Stub" ienum-statstg-next-stub :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IStorage_OpenStream_Proxy" istorage-open-stream-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwcsName| :pointer) (|reserved1| :pointer) (|grfMode| dword) (|reserved2| dword) (|ppstm| :pointer))
(defcfun ("IStorage_OpenStream_Stub" istorage-open-stream-stub :convention :stdcall) hresult  (|This| :pointer) (|pwcsName| :pointer) (|cbReserved1| :unsigned-long) (|reserved1| :pointer) (|grfMode| dword) (|reserved2| dword) (|ppstm| :pointer))
(defcfun ("IStorage_EnumElements_Proxy" istorage-enum-elements-proxy :convention :stdcall) hresult  (|This| :pointer) (|reserved1| dword) (|reserved2| :pointer) (|reserved3| dword) (|ppenum| :pointer))
(defcfun ("IStorage_EnumElements_Stub" istorage-enum-elements-stub :convention :stdcall) hresult  (|This| :pointer) (|reserved1| dword) (|cbReserved2| :unsigned-long) (|reserved2| :pointer) (|reserved3| dword) (|ppenum| :pointer))
(defcfun ("ILockBytes_ReadAt_Proxy" ilock-bytes-read-at-proxy :convention :stdcall) hresult  (|This| :pointer) (|ulOffset| ularge_integer) (|pv| :pointer) (|cb| ulong) (|pcbRead| :pointer))
(defcfun ("ILockBytes_ReadAt_Stub" ilock-bytes-read-at-stub :convention :stdcall) hresult  (|This| :pointer) (|ulOffset| ularge_integer) (|pv| :pointer) (|cb| ulong) (|pcbRead| :pointer))
(defcfun ("ILockBytes_WriteAt_Proxy" ilock-bytes-write-at-proxy :convention :stdcall) hresult  (|This| :pointer) (|ulOffset| ularge_integer) (|pv| :pointer) (|cb| ulong) (|pcbWritten| :pointer))
(defcfun ("ILockBytes_WriteAt_Stub" ilock-bytes-write-at-stub :convention :stdcall) hresult  (|This| :pointer) (|ulOffset| ularge_integer) (|pv| :pointer) (|cb| ulong) (|pcbWritten| :pointer))
(defcfun ("IEnumFORMATETC_Next_Proxy" ienum-formatetc-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IEnumFORMATETC_Next_Stub" ienum-formatetc-next-stub :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IEnumSTATDATA_Next_Proxy" ienum-statdata-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IEnumSTATDATA_Next_Stub" ienum-statdata-next-stub :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IAdviseSink_OnDataChange_Proxy" iadvise-sink-on-data-change-proxy :convention :stdcall) :void  (|This| :pointer) (|pFormatetc| :pointer) (|pStgmed| :pointer))
(defcfun ("IAdviseSink_OnDataChange_Stub" iadvise-sink-on-data-change-stub :convention :stdcall) hresult  (|This| :pointer) (|pFormatetc| :pointer) (|pStgmed| :pointer))
(defcfun ("IAdviseSink_OnViewChange_Proxy" iadvise-sink-on-view-change-proxy :convention :stdcall) :void  (|This| :pointer) (|dwAspect| dword) (|lindex| long))
(defcfun ("IAdviseSink_OnViewChange_Stub" iadvise-sink-on-view-change-stub :convention :stdcall) hresult  (|This| :pointer) (|dwAspect| dword) (|lindex| long))
(defcfun ("IAdviseSink_OnRename_Proxy" iadvise-sink-on-rename-proxy :convention :stdcall) :void  (|This| :pointer) (|pmk| :pointer))
(defcfun ("IAdviseSink_OnRename_Stub" iadvise-sink-on-rename-stub :convention :stdcall) hresult  (|This| :pointer) (|pmk| :pointer))
(defcfun ("IAdviseSink_OnSave_Proxy" iadvise-sink-on-save-proxy :convention :stdcall) :void  (|This| :pointer))
(defcfun ("IAdviseSink_OnSave_Stub" iadvise-sink-on-save-stub :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IAdviseSink_OnClose_Proxy" iadvise-sink-on-close-proxy :convention :stdcall) :void  (|This| :pointer))
(defcfun ("IAdviseSink_OnClose_Stub" iadvise-sink-on-close-stub :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IAdviseSink2_OnLinkSrcChange_Proxy" iadvise-sink-2-on-link-src-change-proxy :convention :stdcall) :void  (|This| :pointer) (|pmk| :pointer))
(defcfun ("IAdviseSink2_OnLinkSrcChange_Stub" iadvise-sink-2-on-link-src-change-stub :convention :stdcall) hresult  (|This| :pointer) (|pmk| :pointer))
(defcfun ("IDataObject_GetData_Proxy" idata-object-get-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|pformatetcIn| :pointer) (|pmedium| :pointer))
(defcfun ("IDataObject_GetData_Stub" idata-object-get-data-stub :convention :stdcall) hresult  (|This| :pointer) (|pformatetcIn| :pointer) (|pRemoteMedium| :pointer))
(defcfun ("IDataObject_GetDataHere_Proxy" idata-object-get-data-here-proxy :convention :stdcall) hresult  (|This| :pointer) (|pformatetc| :pointer) (|pmedium| :pointer))
(defcfun ("IDataObject_GetDataHere_Stub" idata-object-get-data-here-stub :convention :stdcall) hresult  (|This| :pointer) (|pformatetc| :pointer) (|pRemoteMedium| :pointer))
(defcfun ("IDataObject_SetData_Proxy" idata-object-set-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|pformatetc| :pointer) (|pmedium| :pointer) (|fRelease| winbool))
(defcfun ("IDataObject_SetData_Stub" idata-object-set-data-stub :convention :stdcall) hresult  (|This| :pointer) (|pformatetc| :pointer) (|pmedium| :pointer) (|fRelease| winbool))
(defcfun ("IFillLockBytes_FillAppend_Proxy" ifill-lock-bytes-fill-append-proxy :convention :stdcall) hresult  (|This| :pointer) (|pv| :pointer) (|cb| ulong) (|pcbWritten| :pointer))
(defcfun ("IFillLockBytes_FillAppend_Stub" ifill-lock-bytes-fill-append-stub :convention :stdcall) hresult  (|This| :pointer) (|pv| :pointer) (|cb| ulong) (|pcbWritten| :pointer))
(defcfun ("IFillLockBytes_FillAt_Proxy" ifill-lock-bytes-fill-at-proxy :convention :stdcall) hresult  (|This| :pointer) (|ulOffset| ularge_integer) (|pv| :pointer) (|cb| ulong) (|pcbWritten| :pointer))
(defcfun ("IFillLockBytes_FillAt_Stub" ifill-lock-bytes-fill-at-stub :convention :stdcall) hresult  (|This| :pointer) (|ulOffset| ularge_integer) (|pv| :pointer) (|cb| ulong) (|pcbWritten| :pointer))
(defcfun ("AsyncIAdviseSink_Begin_OnDataChange_Proxy" async-iadvise-sink-begin-on-data-change-proxy :convention :stdcall) :void  (|This| :pointer) (|pFormatetc| :pointer) (|pStgmed| :pointer))
(defcfun ("AsyncIAdviseSink_Begin_OnDataChange_Stub" async-iadvise-sink-begin-on-data-change-stub :convention :stdcall) hresult  (|This| :pointer) (|pFormatetc| :pointer) (|pStgmed| :pointer))
(defcfun ("AsyncIAdviseSink_Finish_OnDataChange_Proxy" async-iadvise-sink-finish-on-data-change-proxy :convention :stdcall) :void  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Finish_OnDataChange_Stub" async-iadvise-sink-finish-on-data-change-stub :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Begin_OnViewChange_Proxy" async-iadvise-sink-begin-on-view-change-proxy :convention :stdcall) :void  (|This| :pointer) (|dwAspect| dword) (|lindex| long))
(defcfun ("AsyncIAdviseSink_Begin_OnViewChange_Stub" async-iadvise-sink-begin-on-view-change-stub :convention :stdcall) hresult  (|This| :pointer) (|dwAspect| dword) (|lindex| long))
(defcfun ("AsyncIAdviseSink_Finish_OnViewChange_Proxy" async-iadvise-sink-finish-on-view-change-proxy :convention :stdcall) :void  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Finish_OnViewChange_Stub" async-iadvise-sink-finish-on-view-change-stub :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Begin_OnRename_Proxy" async-iadvise-sink-begin-on-rename-proxy :convention :stdcall) :void  (|This| :pointer) (|pmk| :pointer))
(defcfun ("AsyncIAdviseSink_Begin_OnRename_Stub" async-iadvise-sink-begin-on-rename-stub :convention :stdcall) hresult  (|This| :pointer) (|pmk| :pointer))
(defcfun ("AsyncIAdviseSink_Finish_OnRename_Proxy" async-iadvise-sink-finish-on-rename-proxy :convention :stdcall) :void  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Finish_OnRename_Stub" async-iadvise-sink-finish-on-rename-stub :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Begin_OnSave_Proxy" async-iadvise-sink-begin-on-save-proxy :convention :stdcall) :void  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Begin_OnSave_Stub" async-iadvise-sink-begin-on-save-stub :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Finish_OnSave_Proxy" async-iadvise-sink-finish-on-save-proxy :convention :stdcall) :void  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Finish_OnSave_Stub" async-iadvise-sink-finish-on-save-stub :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Begin_OnClose_Proxy" async-iadvise-sink-begin-on-close-proxy :convention :stdcall) :void  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Begin_OnClose_Stub" async-iadvise-sink-begin-on-close-stub :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Finish_OnClose_Proxy" async-iadvise-sink-finish-on-close-proxy :convention :stdcall) :void  (|This| :pointer))
(defcfun ("AsyncIAdviseSink_Finish_OnClose_Stub" async-iadvise-sink-finish-on-close-stub :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("AsyncIAdviseSink2_Begin_OnLinkSrcChange_Proxy" async-iadvise-sink-2-begin-on-link-src-change-proxy :convention :stdcall) :void  (|This| :pointer) (|pmk| :pointer))
(defcfun ("AsyncIAdviseSink2_Begin_OnLinkSrcChange_Stub" async-iadvise-sink-2-begin-on-link-src-change-stub :convention :stdcall) hresult  (|This| :pointer) (|pmk| :pointer))
(defcfun ("AsyncIAdviseSink2_Finish_OnLinkSrcChange_Proxy" async-iadvise-sink-2-finish-on-link-src-change-proxy :convention :stdcall) :void  (|This| :pointer))
(defcfun ("AsyncIAdviseSink2_Finish_OnLinkSrcChange_Stub" async-iadvise-sink-2-finish-on-link-src-change-stub :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("CoBuildVersion" co-build-version :convention :stdcall) dword )
(defcfun ("CoInitialize" co-initialize :convention :stdcall) hresult  (|pvReserved| lpvoid))
(defcfun ("CoUninitialize" co-uninitialize :convention :stdcall) :void )
(defcfun ("CoGetMalloc" co-get-malloc :convention :stdcall) hresult  (|dwMemContext| dword) (|ppMalloc| :pointer))
(defcfun ("CoGetCurrentProcess" co-get-current-process :convention :stdcall) dword )
(defcfun ("CoRegisterMallocSpy" co-register-malloc-spy :convention :stdcall) hresult  (|pMallocSpy| lpmallocspy))
(defcfun ("CoRevokeMallocSpy" co-revoke-malloc-spy :convention :stdcall) hresult )
(defcfun ("CoCreateStandardMalloc" co-create-standard-malloc :convention :stdcall) hresult  (|memctx| dword) (|ppMalloc| :pointer))
(defcfun ("CoInitializeEx" co-initialize-ex :convention :stdcall) hresult  (|pvReserved| lpvoid) (|dwCoInit| dword))
(defcfun ("CoGetCallerTID" co-get-caller-tid :convention :stdcall) hresult  (|lpdwTID| lpdword))
(defcfun ("CoRegisterInitializeSpy" co-register-initialize-spy :convention :stdcall) hresult  (|pSpy| lpinitializespy) (|puliCookie| :pointer))
(defcfun ("CoRevokeInitializeSpy" co-revoke-initialize-spy :convention :stdcall) hresult  (|uliCookie| ularge_integer))
(defcfun ("CoGetContextToken" co-get-context-token :convention :stdcall) hresult  (|pToken| :pointer))
(defcfun ("CoGetSystemSecurityPermissions" co-get-system-security-permissions :convention :stdcall) hresult  (|comSDType| comsd) (|ppSD| :pointer))
(defcfun ("CoGetObjectContext" co-get-object-context :convention :stdcall) hresult  (|riid| :pointer) (|ppv| :pointer))
(defcfun ("CoGetClassObject" co-get-class-object :convention :stdcall) hresult  (|rclsid| :pointer) (|dwClsContext| dword) (|pvReserved| lpvoid) (|riid| :pointer) (|ppv| :pointer))
(defcfun ("CoRegisterClassObject" co-register-class-object :convention :stdcall) hresult  (|rclsid| :pointer) (|pUnk| lpunknown) (|dwClsContext| dword) (|flags| dword) (|lpdwRegister| lpdword))
(defcfun ("CoRevokeClassObject" co-revoke-class-object :convention :stdcall) hresult  (|dwRegister| dword))
(defcfun ("CoResumeClassObjects" co-resume-class-objects :convention :stdcall) hresult )
(defcfun ("CoSuspendClassObjects" co-suspend-class-objects :convention :stdcall) hresult )
(defcfun ("CoAddRefServerProcess" co-add-ref-server-process :convention :stdcall) ulong )
(defcfun ("CoReleaseServerProcess" co-release-server-process :convention :stdcall) ulong )
(defcfun ("CoGetPSClsid" co-get-ps-clsid :convention :stdcall) hresult  (|riid| :pointer) (|pClsid| :pointer))
(defcfun ("CoRegisterPSClsid" co-register-ps-clsid :convention :stdcall) hresult  (|riid| :pointer) (|rclsid| :pointer))
(defcfun ("CoRegisterSurrogate" co-register-surrogate :convention :stdcall) hresult  (|pSurrogate| lpsurrogate))
(defcfun ("CoGetMarshalSizeMax" co-get-marshal-size-max :convention :stdcall) hresult  (|pulSize| :pointer) (|riid| :pointer) (|pUnk| lpunknown) (|dwDestContext| dword) (|pvDestContext| lpvoid) (|mshlflags| dword))
(defcfun ("CoMarshalInterface" co-marshal-interface :convention :stdcall) hresult  (|pStm| lpstream) (|riid| :pointer) (|pUnk| lpunknown) (|dwDestContext| dword) (|pvDestContext| lpvoid) (|mshlflags| dword))
(defcfun ("CoUnmarshalInterface" co-unmarshal-interface :convention :stdcall) hresult  (|pStm| lpstream) (|riid| :pointer) (|ppv| :pointer))
(defcfun ("CoMarshalHresult" co-marshal-hresult :convention :stdcall) hresult  (|pstm| lpstream) (|hresult| hresult))
(defcfun ("CoUnmarshalHresult" co-unmarshal-hresult :convention :stdcall) hresult  (|pstm| lpstream) (|phresult| :pointer))
(defcfun ("CoReleaseMarshalData" co-release-marshal-data :convention :stdcall) hresult  (|pStm| lpstream))
(defcfun ("CoDisconnectObject" co-disconnect-object :convention :stdcall) hresult  (|pUnk| lpunknown) (|dwReserved| dword))
(defcfun ("CoLockObjectExternal" co-lock-object-external :convention :stdcall) hresult  (|pUnk| lpunknown) (|fLock| winbool) (|fLastUnlockReleases| winbool))
(defcfun ("CoGetStandardMarshal" co-get-standard-marshal :convention :stdcall) hresult  (|riid| :pointer) (|pUnk| lpunknown) (|dwDestContext| dword) (|pvDestContext| lpvoid) (|mshlflags| dword) (|ppMarshal| :pointer))
(defcfun ("CoGetStdMarshalEx" co-get-std-marshal-ex :convention :stdcall) hresult  (|pUnkOuter| lpunknown) (|smexflags| dword) (|ppUnkInner| :pointer))
(defcfun ("CoIsHandlerConnected" co-is-handler-connected :convention :stdcall) winbool  (|pUnk| lpunknown))
(defcfun ("CoMarshalInterThreadInterfaceInStream" co-marshal-inter-thread-interface-in-stream :convention :stdcall) hresult  (|riid| :pointer) (|pUnk| lpunknown) (|ppStm| :pointer))
(defcfun ("CoGetInterfaceAndReleaseStream" co-get-interface-and-release-stream :convention :stdcall) hresult  (|pStm| lpstream) (|iid| :pointer) (|ppv| :pointer))
(defcfun ("CoCreateFreeThreadedMarshaler" co-create-free-threaded-marshaler :convention :stdcall) hresult  (|punkOuter| lpunknown) (|ppunkMarshal| :pointer))
(defcfun ("CoLoadLibrary" co-load-library :convention :stdcall) hinstance  (|lpszLibName| lpolestr) (|bAutoFree| winbool))
(defcfun ("CoFreeLibrary" co-free-library :convention :stdcall) :void  (|hInst| hinstance))
(defcfun ("CoFreeAllLibraries" co-free-all-libraries :convention :stdcall) :void )
(defcfun ("CoFreeUnusedLibraries" co-free-unused-libraries :convention :stdcall) :void )
(defcfun ("CoFreeUnusedLibrariesEx" co-free-unused-libraries-ex :convention :stdcall) :void  (|dwUnloadDelay| dword) (|dwReserved| dword))
(defcfun ("CoInitializeSecurity" co-initialize-security :convention :stdcall) hresult  (|pSecDesc| psecurity_descriptor) (|cAuthSvc| long) (|asAuthSvc| :pointer) (|pReserved1| :pointer) (|dwAuthnLevel| dword) (|dwImpLevel| dword) (|pAuthList| :pointer) (|dwCapabilities| dword) (|pReserved3| :pointer))
(defcfun ("CoGetCallContext" co-get-call-context :convention :stdcall) hresult  (|riid| :pointer) (|ppInterface| :pointer))
(defcfun ("CoQueryProxyBlanket" co-query-proxy-blanket :convention :stdcall) hresult  (|pProxy| :pointer) (|pwAuthnSvc| :pointer) (|pAuthzSvc| :pointer) (|pServerPrincName| :pointer) (|pAuthnLevel| :pointer) (|pImpLevel| :pointer) (|pAuthInfo| :pointer) (|pCapabilites| :pointer))
(defcfun ("CoSetProxyBlanket" co-set-proxy-blanket :convention :stdcall) hresult  (|pProxy| :pointer) (|dwAuthnSvc| dword) (|dwAuthzSvc| dword) (|pServerPrincName| :pointer) (|dwAuthnLevel| dword) (|dwImpLevel| dword) (|pAuthInfo| rpc_auth_identity_handle) (|dwCapabilities| dword))
(defcfun ("CoCopyProxy" co-copy-proxy :convention :stdcall) hresult  (|pProxy| :pointer) (|ppCopy| :pointer))
(defcfun ("CoQueryClientBlanket" co-query-client-blanket :convention :stdcall) hresult  (|pAuthnSvc| :pointer) (|pAuthzSvc| :pointer) (|pServerPrincName| :pointer) (|pAuthnLevel| :pointer) (|pImpLevel| :pointer) (|pPrivs| :pointer) (|pCapabilities| :pointer))
(defcfun ("CoImpersonateClient" co-impersonate-client :convention :stdcall) hresult )
(defcfun ("CoRevertToSelf" co-revert-to-self :convention :stdcall) hresult )
(defcfun ("CoQueryAuthenticationServices" co-query-authentication-services :convention :stdcall) hresult  (|pcAuthSvc| :pointer) (|asAuthSvc| :pointer))
(defcfun ("CoSwitchCallContext" co-switch-call-context :convention :stdcall) hresult  (|pNewObject| :pointer) (|ppOldObject| :pointer))
(defcfun ("CoCreateInstance" co-create-instance :convention :stdcall) hresult  (|rclsid| :pointer) (|pUnkOuter| lpunknown) (|dwClsContext| dword) (|riid| :pointer) (|ppv| :pointer))
(defcfun ("CoGetInstanceFromFile" co-get-instance-from-file :convention :stdcall) hresult  (|pServerInfo| :pointer) (|pClsid| :pointer) (|punkOuter| :pointer) (|dwClsCtx| dword) (|grfMode| dword) (|pwszName| :pointer) (|dwCount| dword) (|pResults| :pointer))
(defcfun ("CoGetInstanceFromIStorage" co-get-instance-from-istorage :convention :stdcall) hresult  (|pServerInfo| :pointer) (|pClsid| :pointer) (|punkOuter| :pointer) (|dwClsCtx| dword) (|pstg| :pointer) (|dwCount| dword) (|pResults| :pointer))
(defcfun ("CoCreateInstanceEx" co-create-instance-ex :convention :stdcall) hresult  (|Clsid| :pointer) (|punkOuter| :pointer) (|dwClsCtx| dword) (|pServerInfo| :pointer) (|dwCount| dword) (|pResults| :pointer))
(defcfun ("CoGetCancelObject" co-get-cancel-object :convention :stdcall) hresult  (|dwThreadId| dword) (|iid| :pointer) (|ppUnk| :pointer))
(defcfun ("CoSetCancelObject" co-set-cancel-object :convention :stdcall) hresult  (|pUnk| :pointer))
(defcfun ("CoCancelCall" co-cancel-call :convention :stdcall) hresult  (|dwThreadId| dword) (|ulTimeout| ulong))
(defcfun ("CoTestCancel" co-test-cancel :convention :stdcall) hresult )
(defcfun ("CoEnableCallCancellation" co-enable-call-cancellation :convention :stdcall) hresult  (|pReserved| lpvoid))
(defcfun ("CoDisableCallCancellation" co-disable-call-cancellation :convention :stdcall) hresult  (|pReserved| lpvoid))
(defcfun ("CoAllowSetForegroundWindow" co-allow-set-foreground-window :convention :stdcall) hresult  (|pUnk| :pointer) (|lpvReserved| lpvoid))
(defcfun ("DcomChannelSetHResult" dcom-channel-set-hresult :convention :stdcall) hresult  (|pvReserved| lpvoid) (|pulReserved| :pointer) (|appsHR| hresult))
(defcfun ("StringFromCLSID" string-from-clsid :convention :stdcall) hresult  (|rclsid| :pointer) (|lplpsz| :pointer))
(defcfun ("CLSIDFromString" clsid-from-string :convention :stdcall) hresult  (|lpsz| lpolestr) (|pclsid| lpclsid))
(defcfun ("StringFromIID" string-from-iid :convention :stdcall) hresult  (|rclsid| :pointer) (|lplpsz| :pointer))
(defcfun ("IIDFromString" iid-from-string :convention :stdcall) hresult  (|lpsz| lpolestr) (|lpiid| lpiid))
(defcfun ("CoIsOle1Class" co-is-ole-1-class :convention :stdcall) winbool  (|rclsid| :pointer))
(defcfun ("ProgIDFromCLSID" prog-id-from-clsid :convention :stdcall) hresult  (|clsid| :pointer) (|lplpszProgID| :pointer))
(defcfun ("CLSIDFromProgID" clsid-from-prog-id :convention :stdcall) hresult  (|lpszProgID| lpcolestr) (|lpclsid| lpclsid))
(defcfun ("CLSIDFromProgIDEx" clsid-from-prog-id-ex :convention :stdcall) hresult  (|lpszProgID| lpcolestr) (|lpclsid| lpclsid))
(defcfun ("StringFromGUID2" string-from-guid-2 :convention :stdcall) :int  (|rguid| :pointer) (|lpsz| lpolestr) (|cchMax| :int))
(defcfun ("CoCreateGuid" co-create-guid :convention :stdcall) hresult  (|pguid| :pointer))
(defcfun ("CoFileTimeToDosDateTime" co-file-time-to-dos-date-time :convention :stdcall) winbool  (|lpFileTime| :pointer) (|lpDosDate| lpword) (|lpDosTime| lpword))
(defcfun ("CoDosDateTimeToFileTime" co-dos-date-time-to-file-time :convention :stdcall) winbool  (|nDosDate| word) (|nDosTime| word) (|lpFileTime| :pointer))
(defcfun ("CoFileTimeNow" co-file-time-now :convention :stdcall) hresult  (|lpFileTime| :pointer))
(defcfun ("CoRegisterMessageFilter" co-register-message-filter :convention :stdcall) hresult  (|lpMessageFilter| lpmessagefilter) (|lplpMessageFilter| :pointer))
(defcfun ("CoRegisterChannelHook" co-register-channel-hook :convention :stdcall) hresult  (|ExtensionUuid| :pointer) (|pChannelHook| :pointer))
(defcfun ("CoWaitForMultipleHandles" co-wait-for-multiple-handles :convention :stdcall) hresult  (|dwFlags| dword) (|dwTimeout| dword) (|cHandles| ulong) (|pHandles| lphandle) (|lpdwindex| lpdword))
(defcfun ("CoInvalidateRemoteMachineBindings" co-invalidate-remote-machine-bindings :convention :stdcall) hresult  (|pszMachineName| lpolestr))
(defcfun ("CoGetTreatAsClass" co-get-treat-as-class :convention :stdcall) hresult  (|clsidOld| :pointer) (|pClsidNew| lpclsid))
(defcfun ("CoTreatAsClass" co-treat-as-class :convention :stdcall) hresult  (|clsidOld| :pointer) (|clsidNew| :pointer))
(defcfun ("DllGetClassObject" dll-get-class-object :convention :stdcall) hresult  (|rclsid| :pointer) (|riid| :pointer) (|ppv| :pointer))
(defcfun ("DllCanUnloadNow" dll-can-unload-now :convention :stdcall) hresult )
(defcfun ("CoTaskMemAlloc" co-task-mem-alloc :convention :stdcall) lpvoid  (|cb| size_t))
(defcfun ("CoTaskMemRealloc" co-task-mem-realloc :convention :stdcall) lpvoid  (|pv| lpvoid) (|cb| size_t))
(defcfun ("CoTaskMemFree" co-task-mem-free :convention :stdcall) :void  (|pv| lpvoid))
(defcfun ("CreateDataAdviseHolder" create-data-advise-holder :convention :stdcall) hresult  (|ppDAHolder| :pointer))
(defcfun ("CreateDataCache" create-data-cache :convention :stdcall) hresult  (|pUnkOuter| lpunknown) (|rclsid| :pointer) (|iid| :pointer) (|ppv| :pointer))
(defcfun ("StgCreateDocfile" stg-create-docfile :convention :stdcall) hresult  (|pwcsName| :pointer) (|grfMode| dword) (|reserved| dword) (|ppstgOpen| :pointer))
(defcfun ("StgCreateDocfileOnILockBytes" stg-create-docfile-on-ilock-bytes :convention :stdcall) hresult  (|plkbyt| :pointer) (|grfMode| dword) (|reserved| dword) (|ppstgOpen| :pointer))
(defcfun ("StgOpenStorage" stg-open-storage :convention :stdcall) hresult  (|pwcsName| :pointer) (|pstgPriority| :pointer) (|grfMode| dword) (|snbExclude| snb) (|reserved| dword) (|ppstgOpen| :pointer))
(defcfun ("StgOpenStorageOnILockBytes" stg-open-storage-on-ilock-bytes :convention :stdcall) hresult  (|plkbyt| :pointer) (|pstgPriority| :pointer) (|grfMode| dword) (|snbExclude| snb) (|reserved| dword) (|ppstgOpen| :pointer))
(defcfun ("StgIsStorageFile" stg-is-storage-file :convention :stdcall) hresult  (|pwcsName| :pointer))
(defcfun ("StgIsStorageILockBytes" stg-is-storage-ilock-bytes :convention :stdcall) hresult  (|plkbyt| :pointer))
(defcfun ("StgSetTimes" stg-set-times :convention :stdcall) hresult  (|lpszName| :pointer) (|pctime| :pointer) (|patime| :pointer) (|pmtime| :pointer))
(defcfun ("StgOpenAsyncDocfileOnIFillLockBytes" stg-open-async-docfile-on-ifill-lock-bytes :convention :stdcall) hresult  (|pflb| :pointer) (|grfMode| dword) (|asyncFlags| dword) (|ppstgOpen| :pointer))
(defcfun ("StgGetIFillLockBytesOnILockBytes" stg-get-ifill-lock-bytes-on-ilock-bytes :convention :stdcall) hresult  (|pilb| :pointer) (|ppflb| :pointer))
(defcfun ("StgGetIFillLockBytesOnFile" stg-get-ifill-lock-bytes-on-file :convention :stdcall) hresult  (|pwcsName| :pointer) (|ppflb| :pointer))
(defcfun ("StgOpenLayoutDocfile" stg-open-layout-docfile :convention :stdcall) hresult  (|pwcsDfName| :pointer) (|grfMode| dword) (|reserved| dword) (|ppstgOpen| :pointer))
(defcfun ("StgCreateStorageEx" stg-create-storage-ex :convention :stdcall) hresult  (|pwcsName| :pointer) (|grfMode| dword) (|stgfmt| dword) (|grfAttrs| dword) (|pStgOptions| :pointer) (|reserved| :pointer) (|riid| :pointer) (|ppObjectOpen| :pointer))
(defcfun ("StgOpenStorageEx" stg-open-storage-ex :convention :stdcall) hresult  (|pwcsName| :pointer) (|grfMode| dword) (|stgfmt| dword) (|grfAttrs| dword) (|pStgOptions| :pointer) (|reserved| :pointer) (|riid| :pointer) (|ppObjectOpen| :pointer))
(defcfun ("BindMoniker" bind-moniker :convention :stdcall) hresult  (|pmk| lpmoniker) (|grfOpt| dword) (|iidResult| :pointer) (|ppvResult| :pointer))
(defcfun ("CoInstall" co-install :convention :stdcall) hresult  (|pbc| :pointer) (|dwFlags| dword) (|pClassSpec| :pointer) (|pQuery| :pointer) (|pszCodeBase| lpwstr))
(defcfun ("CoGetObject" co-get-object :convention :stdcall) hresult  (|pszName| lpcwstr) (|pBindOptions| :pointer) (|riid| :pointer) (|ppv| :pointer))
(defcfun ("MkParseDisplayName" mk-parse-display-name :convention :stdcall) hresult  (|pbc| lpbc) (|szUserName| lpcolestr) (|pchEaten| :pointer) (|ppmk| :pointer))
(defcfun ("MonikerRelativePathTo" moniker-relative-path-to :convention :stdcall) hresult  (|pmkSrc| lpmoniker) (|pmkDest| lpmoniker) (|ppmkRelPath| :pointer) (|dwReserved| winbool))
(defcfun ("MonikerCommonPrefixWith" moniker-common-prefix-with :convention :stdcall) hresult  (|pmkThis| lpmoniker) (|pmkOther| lpmoniker) (|ppmkCommon| :pointer))
(defcfun ("CreateBindCtx" create-bind-ctx :convention :stdcall) hresult  (|reserved| dword) (|ppbc| :pointer))
(defcfun ("CreateGenericComposite" create-generic-composite :convention :stdcall) hresult  (|pmkFirst| lpmoniker) (|pmkRest| lpmoniker) (|ppmkComposite| :pointer))
(defcfun ("GetClassFile" get-class-file :convention :stdcall) hresult  (|szFilename| lpcolestr) (|pclsid| :pointer))
(defcfun ("CreateClassMoniker" create-class-moniker :convention :stdcall) hresult  (|rclsid| :pointer) (|ppmk| :pointer))
(defcfun ("CreateFileMoniker" create-file-moniker :convention :stdcall) hresult  (|lpszPathName| lpcolestr) (|ppmk| :pointer))
(defcfun ("CreateItemMoniker" create-item-moniker :convention :stdcall) hresult  (|lpszDelim| lpcolestr) (|lpszItem| lpcolestr) (|ppmk| :pointer))
(defcfun ("CreateAntiMoniker" create-anti-moniker :convention :stdcall) hresult  (|ppmk| :pointer))
(defcfun ("CreatePointerMoniker" create-pointer-moniker :convention :stdcall) hresult  (|punk| lpunknown) (|ppmk| :pointer))
(defcfun ("CreateObjrefMoniker" create-objref-moniker :convention :stdcall) hresult  (|punk| lpunknown) (|ppmk| :pointer))
(defcfun ("GetRunningObjectTable" get-running-object-table :convention :stdcall) hresult  (|reserved| dword) (|pprot| :pointer))
(defcfun ("IOleAdviseHolder_Advise_Proxy" iole-advise-holder-advise-proxy :convention :stdcall) hresult  (|This| :pointer) (|pAdvise| :pointer) (|pdwConnection| :pointer))
(defcfun ("IOleAdviseHolder_Advise_Stub" iole-advise-holder-advise-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleAdviseHolder_Unadvise_Proxy" iole-advise-holder-unadvise-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwConnection| dword))
(defcfun ("IOleAdviseHolder_Unadvise_Stub" iole-advise-holder-unadvise-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleAdviseHolder_EnumAdvise_Proxy" iole-advise-holder-enum-advise-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppenumAdvise| :pointer))
(defcfun ("IOleAdviseHolder_EnumAdvise_Stub" iole-advise-holder-enum-advise-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleAdviseHolder_SendOnRename_Proxy" iole-advise-holder-send-on-rename-proxy :convention :stdcall) hresult  (|This| :pointer) (|pmk| :pointer))
(defcfun ("IOleAdviseHolder_SendOnRename_Stub" iole-advise-holder-send-on-rename-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleAdviseHolder_SendOnSave_Proxy" iole-advise-holder-send-on-save-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleAdviseHolder_SendOnSave_Stub" iole-advise-holder-send-on-save-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleAdviseHolder_SendOnClose_Proxy" iole-advise-holder-send-on-close-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleAdviseHolder_SendOnClose_Stub" iole-advise-holder-send-on-close-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleCache_Cache_Proxy" iole-cache-cache-proxy :convention :stdcall) hresult  (|This| :pointer) (|pformatetc| :pointer) (|advf| dword) (|pdwConnection| :pointer))
(defcfun ("IOleCache_Cache_Stub" iole-cache-cache-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleCache_Uncache_Proxy" iole-cache-uncache-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwConnection| dword))
(defcfun ("IOleCache_Uncache_Stub" iole-cache-uncache-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleCache_EnumCache_Proxy" iole-cache-enum-cache-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppenumSTATDATA| :pointer))
(defcfun ("IOleCache_EnumCache_Stub" iole-cache-enum-cache-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleCache_InitCache_Proxy" iole-cache-init-cache-proxy :convention :stdcall) hresult  (|This| :pointer) (|pDataObject| :pointer))
(defcfun ("IOleCache_InitCache_Stub" iole-cache-init-cache-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleCache_SetData_Proxy" iole-cache-set-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|pformatetc| :pointer) (|pmedium| :pointer) (|fRelease| winbool))
(defcfun ("IOleCache_SetData_Stub" iole-cache-set-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleCache2_RemoteUpdateCache_Proxy" iole-cache-2-remote-update-cache-proxy :convention :stdcall) hresult  (|This| :pointer) (|pDataObject| lpdataobject) (|grfUpdf| dword) (|pReserved| long_ptr))
(defcfun ("IOleCache2_RemoteUpdateCache_Stub" iole-cache-2-remote-update-cache-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleCache2_DiscardCache_Proxy" iole-cache-2-discard-cache-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwDiscardOptions| dword))
(defcfun ("IOleCache2_DiscardCache_Stub" iole-cache-2-discard-cache-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleCacheControl_OnRun_Proxy" iole-cache-control-on-run-proxy :convention :stdcall) hresult  (|This| :pointer) (|pDataObject| lpdataobject))
(defcfun ("IOleCacheControl_OnRun_Stub" iole-cache-control-on-run-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleCacheControl_OnStop_Proxy" iole-cache-control-on-stop-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleCacheControl_OnStop_Stub" iole-cache-control-on-stop-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IParseDisplayName_ParseDisplayName_Proxy" iparse-display-name-parse-display-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbc| :pointer) (|pszDisplayName| lpolestr) (|pchEaten| :pointer) (|ppmkOut| :pointer))
(defcfun ("IParseDisplayName_ParseDisplayName_Stub" iparse-display-name-parse-display-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleContainer_EnumObjects_Proxy" iole-container-enum-objects-proxy :convention :stdcall) hresult  (|This| :pointer) (|grfFlags| dword) (|ppenum| :pointer))
(defcfun ("IOleContainer_EnumObjects_Stub" iole-container-enum-objects-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleContainer_LockContainer_Proxy" iole-container-lock-container-proxy :convention :stdcall) hresult  (|This| :pointer) (|fLock| winbool))
(defcfun ("IOleContainer_LockContainer_Stub" iole-container-lock-container-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleClientSite_SaveObject_Proxy" iole-client-site-save-object-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleClientSite_SaveObject_Stub" iole-client-site-save-object-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleClientSite_GetMoniker_Proxy" iole-client-site-get-moniker-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwAssign| dword) (|dwWhichMoniker| dword) (|ppmk| :pointer))
(defcfun ("IOleClientSite_GetMoniker_Stub" iole-client-site-get-moniker-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleClientSite_GetContainer_Proxy" iole-client-site-get-container-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppContainer| :pointer))
(defcfun ("IOleClientSite_GetContainer_Stub" iole-client-site-get-container-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleClientSite_ShowObject_Proxy" iole-client-site-show-object-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleClientSite_ShowObject_Stub" iole-client-site-show-object-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleClientSite_OnShowWindow_Proxy" iole-client-site-on-show-window-proxy :convention :stdcall) hresult  (|This| :pointer) (|fShow| winbool))
(defcfun ("IOleClientSite_OnShowWindow_Stub" iole-client-site-on-show-window-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleClientSite_RequestNewObjectLayout_Proxy" iole-client-site-request-new-object-layout-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleClientSite_RequestNewObjectLayout_Stub" iole-client-site-request-new-object-layout-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_SetClientSite_Proxy" iole-object-set-client-site-proxy :convention :stdcall) hresult  (|This| :pointer) (|pClientSite| :pointer))
(defcfun ("IOleObject_SetClientSite_Stub" iole-object-set-client-site-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_GetClientSite_Proxy" iole-object-get-client-site-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppClientSite| :pointer))
(defcfun ("IOleObject_GetClientSite_Stub" iole-object-get-client-site-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_SetHostNames_Proxy" iole-object-set-host-names-proxy :convention :stdcall) hresult  (|This| :pointer) (|szContainerApp| lpcolestr) (|szContainerObj| lpcolestr))
(defcfun ("IOleObject_SetHostNames_Stub" iole-object-set-host-names-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_Close_Proxy" iole-object-close-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwSaveOption| dword))
(defcfun ("IOleObject_Close_Stub" iole-object-close-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_SetMoniker_Proxy" iole-object-set-moniker-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwWhichMoniker| dword) (|pmk| :pointer))
(defcfun ("IOleObject_SetMoniker_Stub" iole-object-set-moniker-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_GetMoniker_Proxy" iole-object-get-moniker-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwAssign| dword) (|dwWhichMoniker| dword) (|ppmk| :pointer))
(defcfun ("IOleObject_GetMoniker_Stub" iole-object-get-moniker-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_InitFromData_Proxy" iole-object-init-from-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|pDataObject| :pointer) (|fCreation| winbool) (|dwReserved| dword))
(defcfun ("IOleObject_InitFromData_Stub" iole-object-init-from-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_GetClipboardData_Proxy" iole-object-get-clipboard-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwReserved| dword) (|ppDataObject| :pointer))
(defcfun ("IOleObject_GetClipboardData_Stub" iole-object-get-clipboard-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_DoVerb_Proxy" iole-object-do-verb-proxy :convention :stdcall) hresult  (|This| :pointer) (|iVerb| long) (|lpmsg| lpmsg) (|pActiveSite| :pointer) (|lindex| long) (|hwndParent| hwnd) (|lprcPosRect| lpcrect))
(defcfun ("IOleObject_DoVerb_Stub" iole-object-do-verb-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_EnumVerbs_Proxy" iole-object-enum-verbs-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppEnumOleVerb| :pointer))
(defcfun ("IOleObject_EnumVerbs_Stub" iole-object-enum-verbs-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_Update_Proxy" iole-object-update-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleObject_Update_Stub" iole-object-update-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_IsUpToDate_Proxy" iole-object-is-up-to-date-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleObject_IsUpToDate_Stub" iole-object-is-up-to-date-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_GetUserClassID_Proxy" iole-object-get-user-class-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|pClsid| :pointer))
(defcfun ("IOleObject_GetUserClassID_Stub" iole-object-get-user-class-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_GetUserType_Proxy" iole-object-get-user-type-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwFormOfType| dword) (|pszUserType| :pointer))
(defcfun ("IOleObject_GetUserType_Stub" iole-object-get-user-type-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_SetExtent_Proxy" iole-object-set-extent-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwDrawAspect| dword) (|psizel| :pointer))
(defcfun ("IOleObject_SetExtent_Stub" iole-object-set-extent-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_GetExtent_Proxy" iole-object-get-extent-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwDrawAspect| dword) (|psizel| :pointer))
(defcfun ("IOleObject_GetExtent_Stub" iole-object-get-extent-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_Advise_Proxy" iole-object-advise-proxy :convention :stdcall) hresult  (|This| :pointer) (|pAdvSink| :pointer) (|pdwConnection| :pointer))
(defcfun ("IOleObject_Advise_Stub" iole-object-advise-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_Unadvise_Proxy" iole-object-unadvise-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwConnection| dword))
(defcfun ("IOleObject_Unadvise_Stub" iole-object-unadvise-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_EnumAdvise_Proxy" iole-object-enum-advise-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppenumAdvise| :pointer))
(defcfun ("IOleObject_EnumAdvise_Stub" iole-object-enum-advise-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_GetMiscStatus_Proxy" iole-object-get-misc-status-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwAspect| dword) (|pdwStatus| :pointer))
(defcfun ("IOleObject_GetMiscStatus_Stub" iole-object-get-misc-status-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleObject_SetColorScheme_Proxy" iole-object-set-color-scheme-proxy :convention :stdcall) hresult  (|This| :pointer) (|pLogpal| :pointer))
(defcfun ("IOleObject_SetColorScheme_Stub" iole-object-set-color-scheme-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleWindow_GetWindow_Proxy" iole-window-get-window-proxy :convention :stdcall) hresult  (|This| :pointer) (|phwnd| :pointer))
(defcfun ("IOleWindow_GetWindow_Stub" iole-window-get-window-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleWindow_ContextSensitiveHelp_Proxy" iole-window-context-sensitive-help-proxy :convention :stdcall) hresult  (|This| :pointer) (|fEnterMode| winbool))
(defcfun ("IOleWindow_ContextSensitiveHelp_Stub" iole-window-context-sensitive-help-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleLink_SetUpdateOptions_Proxy" iole-link-set-update-options-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwUpdateOpt| dword))
(defcfun ("IOleLink_SetUpdateOptions_Stub" iole-link-set-update-options-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleLink_GetUpdateOptions_Proxy" iole-link-get-update-options-proxy :convention :stdcall) hresult  (|This| :pointer) (|pdwUpdateOpt| :pointer))
(defcfun ("IOleLink_GetUpdateOptions_Stub" iole-link-get-update-options-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleLink_SetSourceMoniker_Proxy" iole-link-set-source-moniker-proxy :convention :stdcall) hresult  (|This| :pointer) (|pmk| :pointer) (|rclsid| :pointer))
(defcfun ("IOleLink_SetSourceMoniker_Stub" iole-link-set-source-moniker-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleLink_GetSourceMoniker_Proxy" iole-link-get-source-moniker-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppmk| :pointer))
(defcfun ("IOleLink_GetSourceMoniker_Stub" iole-link-get-source-moniker-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleLink_SetSourceDisplayName_Proxy" iole-link-set-source-display-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|pszStatusText| lpcolestr))
(defcfun ("IOleLink_SetSourceDisplayName_Stub" iole-link-set-source-display-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleLink_GetSourceDisplayName_Proxy" iole-link-get-source-display-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppszDisplayName| :pointer))
(defcfun ("IOleLink_GetSourceDisplayName_Stub" iole-link-get-source-display-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleLink_BindToSource_Proxy" iole-link-bind-to-source-proxy :convention :stdcall) hresult  (|This| :pointer) (|bindflags| dword) (|pbc| :pointer))
(defcfun ("IOleLink_BindToSource_Stub" iole-link-bind-to-source-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleLink_BindIfRunning_Proxy" iole-link-bind-if-running-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleLink_BindIfRunning_Stub" iole-link-bind-if-running-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleLink_GetBoundSource_Proxy" iole-link-get-bound-source-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppunk| :pointer))
(defcfun ("IOleLink_GetBoundSource_Stub" iole-link-get-bound-source-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleLink_UnbindSource_Proxy" iole-link-unbind-source-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleLink_UnbindSource_Stub" iole-link-unbind-source-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleLink_Update_Proxy" iole-link-update-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbc| :pointer))
(defcfun ("IOleLink_Update_Stub" iole-link-update-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleItemContainer_GetObject_Proxy" iole-item-container-get-object-proxy :convention :stdcall) hresult  (|This| :pointer) (|pszItem| lpolestr) (|dwSpeedNeeded| dword) (|pbc| :pointer) (|riid| :pointer) (|ppvObject| :pointer))
(defcfun ("IOleItemContainer_GetObject_Stub" iole-item-container-get-object-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleItemContainer_GetObjectStorage_Proxy" iole-item-container-get-object-storage-proxy :convention :stdcall) hresult  (|This| :pointer) (|pszItem| lpolestr) (|pbc| :pointer) (|riid| :pointer) (|ppvStorage| :pointer))
(defcfun ("IOleItemContainer_GetObjectStorage_Stub" iole-item-container-get-object-storage-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleItemContainer_IsRunning_Proxy" iole-item-container-is-running-proxy :convention :stdcall) hresult  (|This| :pointer) (|pszItem| lpolestr))
(defcfun ("IOleItemContainer_IsRunning_Stub" iole-item-container-is-running-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceUIWindow_GetBorder_Proxy" iole-in-place-ui-window-get-border-proxy :convention :stdcall) hresult  (|This| :pointer) (|lprectBorder| lprect))
(defcfun ("IOleInPlaceUIWindow_GetBorder_Stub" iole-in-place-ui-window-get-border-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceUIWindow_RequestBorderSpace_Proxy" iole-in-place-ui-window-request-border-space-proxy :convention :stdcall) hresult  (|This| :pointer) (|pborderwidths| lpcborderwidths))
(defcfun ("IOleInPlaceUIWindow_RequestBorderSpace_Stub" iole-in-place-ui-window-request-border-space-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceUIWindow_SetBorderSpace_Proxy" iole-in-place-ui-window-set-border-space-proxy :convention :stdcall) hresult  (|This| :pointer) (|pborderwidths| lpcborderwidths))
(defcfun ("IOleInPlaceUIWindow_SetBorderSpace_Stub" iole-in-place-ui-window-set-border-space-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceUIWindow_SetActiveObject_Proxy" iole-in-place-ui-window-set-active-object-proxy :convention :stdcall) hresult  (|This| :pointer) (|pActiveObject| :pointer) (|pszObjName| lpcolestr))
(defcfun ("IOleInPlaceUIWindow_SetActiveObject_Stub" iole-in-place-ui-window-set-active-object-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceActiveObject_RemoteTranslateAccelerator_Proxy" iole-in-place-active-object-remote-translate-accelerator-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleInPlaceActiveObject_RemoteTranslateAccelerator_Stub" iole-in-place-active-object-remote-translate-accelerator-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceActiveObject_OnFrameWindowActivate_Proxy" iole-in-place-active-object-on-frame-window-activate-proxy :convention :stdcall) hresult  (|This| :pointer) (|fActivate| winbool))
(defcfun ("IOleInPlaceActiveObject_OnFrameWindowActivate_Stub" iole-in-place-active-object-on-frame-window-activate-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceActiveObject_OnDocWindowActivate_Proxy" iole-in-place-active-object-on-doc-window-activate-proxy :convention :stdcall) hresult  (|This| :pointer) (|fActivate| winbool))
(defcfun ("IOleInPlaceActiveObject_OnDocWindowActivate_Stub" iole-in-place-active-object-on-doc-window-activate-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceActiveObject_RemoteResizeBorder_Proxy" iole-in-place-active-object-remote-resize-border-proxy :convention :stdcall) hresult  (|This| :pointer) (|prcBorder| lpcrect) (|riid| :pointer) (|pUIWindow| :pointer) (|fFrameWindow| winbool))
(defcfun ("IOleInPlaceActiveObject_RemoteResizeBorder_Stub" iole-in-place-active-object-remote-resize-border-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceActiveObject_EnableModeless_Proxy" iole-in-place-active-object-enable-modeless-proxy :convention :stdcall) hresult  (|This| :pointer) (|fEnable| winbool))
(defcfun ("IOleInPlaceActiveObject_EnableModeless_Stub" iole-in-place-active-object-enable-modeless-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceFrame_InsertMenus_Proxy" iole-in-place-frame-insert-menus-proxy :convention :stdcall) hresult  (|This| :pointer) (|hmenuShared| hmenu) (|lpMenuWidths| lpolemenugroupwidths))
(defcfun ("IOleInPlaceFrame_InsertMenus_Stub" iole-in-place-frame-insert-menus-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceFrame_SetMenu_Proxy" iole-in-place-frame-set-menu-proxy :convention :stdcall) hresult  (|This| :pointer) (|hmenuShared| hmenu) (|holemenu| holemenu) (|hwndActiveObject| hwnd))
(defcfun ("IOleInPlaceFrame_SetMenu_Stub" iole-in-place-frame-set-menu-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceFrame_RemoveMenus_Proxy" iole-in-place-frame-remove-menus-proxy :convention :stdcall) hresult  (|This| :pointer) (|hmenuShared| hmenu))
(defcfun ("IOleInPlaceFrame_RemoveMenus_Stub" iole-in-place-frame-remove-menus-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceFrame_SetStatusText_Proxy" iole-in-place-frame-set-status-text-proxy :convention :stdcall) hresult  (|This| :pointer) (|pszStatusText| lpcolestr))
(defcfun ("IOleInPlaceFrame_SetStatusText_Stub" iole-in-place-frame-set-status-text-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceFrame_EnableModeless_Proxy" iole-in-place-frame-enable-modeless-proxy :convention :stdcall) hresult  (|This| :pointer) (|fEnable| winbool))
(defcfun ("IOleInPlaceFrame_EnableModeless_Stub" iole-in-place-frame-enable-modeless-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceFrame_TranslateAccelerator_Proxy" iole-in-place-frame-translate-accelerator-proxy :convention :stdcall) hresult  (|This| :pointer) (|lpmsg| lpmsg) (|wID| word))
(defcfun ("IOleInPlaceFrame_TranslateAccelerator_Stub" iole-in-place-frame-translate-accelerator-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceObject_InPlaceDeactivate_Proxy" iole-in-place-object-in-place-deactivate-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleInPlaceObject_InPlaceDeactivate_Stub" iole-in-place-object-in-place-deactivate-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceObject_UIDeactivate_Proxy" iole-in-place-object-ui-deactivate-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleInPlaceObject_UIDeactivate_Stub" iole-in-place-object-ui-deactivate-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceObject_SetObjectRects_Proxy" iole-in-place-object-set-object-rects-proxy :convention :stdcall) hresult  (|This| :pointer) (|lprcPosRect| lpcrect) (|lprcClipRect| lpcrect))
(defcfun ("IOleInPlaceObject_SetObjectRects_Stub" iole-in-place-object-set-object-rects-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceObject_ReactivateAndUndo_Proxy" iole-in-place-object-reactivate-and-undo-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleInPlaceObject_ReactivateAndUndo_Stub" iole-in-place-object-reactivate-and-undo-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceSite_CanInPlaceActivate_Proxy" iole-in-place-site-can-in-place-activate-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleInPlaceSite_CanInPlaceActivate_Stub" iole-in-place-site-can-in-place-activate-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceSite_OnInPlaceActivate_Proxy" iole-in-place-site-on-in-place-activate-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleInPlaceSite_OnInPlaceActivate_Stub" iole-in-place-site-on-in-place-activate-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceSite_OnUIActivate_Proxy" iole-in-place-site-on-ui-activate-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleInPlaceSite_OnUIActivate_Stub" iole-in-place-site-on-ui-activate-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceSite_GetWindowContext_Proxy" iole-in-place-site-get-window-context-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppFrame| :pointer) (|ppDoc| :pointer) (|lprcPosRect| lprect) (|lprcClipRect| lprect) (|lpFrameInfo| lpoleinplaceframeinfo))
(defcfun ("IOleInPlaceSite_GetWindowContext_Stub" iole-in-place-site-get-window-context-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceSite_Scroll_Proxy" iole-in-place-site-scroll-proxy :convention :stdcall) hresult  (|This| :pointer) (|scrollExtant| size))
(defcfun ("IOleInPlaceSite_Scroll_Stub" iole-in-place-site-scroll-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceSite_OnUIDeactivate_Proxy" iole-in-place-site-on-ui-deactivate-proxy :convention :stdcall) hresult  (|This| :pointer) (|fUndoable| winbool))
(defcfun ("IOleInPlaceSite_OnUIDeactivate_Stub" iole-in-place-site-on-ui-deactivate-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceSite_OnInPlaceDeactivate_Proxy" iole-in-place-site-on-in-place-deactivate-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleInPlaceSite_OnInPlaceDeactivate_Stub" iole-in-place-site-on-in-place-deactivate-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceSite_DiscardUndoState_Proxy" iole-in-place-site-discard-undo-state-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleInPlaceSite_DiscardUndoState_Stub" iole-in-place-site-discard-undo-state-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceSite_DeactivateAndUndo_Proxy" iole-in-place-site-deactivate-and-undo-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleInPlaceSite_DeactivateAndUndo_Stub" iole-in-place-site-deactivate-and-undo-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IOleInPlaceSite_OnPosRectChange_Proxy" iole-in-place-site-on-pos-rect-change-proxy :convention :stdcall) hresult  (|This| :pointer) (|lprcPosRect| lpcrect))
(defcfun ("IOleInPlaceSite_OnPosRectChange_Stub" iole-in-place-site-on-pos-rect-change-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IContinue_FContinue_Proxy" icontinue-fcontinue-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IContinue_FContinue_Stub" icontinue-fcontinue-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IViewObject_RemoteDraw_Proxy" iview-object-remote-draw-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwDrawAspect| dword) (|lindex| long) (|pvAspect| ulong_ptr) (|ptd| :pointer) (|hdcTargetDev| ulong_ptr) (|hdcDraw| ulong_ptr) (|lprcBounds| lpcrectl) (|lprcWBounds| lpcrectl) (|pContinue| :pointer))
(defcfun ("IViewObject_RemoteDraw_Stub" iview-object-remote-draw-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IViewObject_RemoteGetColorSet_Proxy" iview-object-remote-get-color-set-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwDrawAspect| dword) (|lindex| long) (|pvAspect| ulong_ptr) (|ptd| :pointer) (|hicTargetDev| ulong_ptr) (|ppColorSet| :pointer))
(defcfun ("IViewObject_RemoteGetColorSet_Stub" iview-object-remote-get-color-set-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IViewObject_RemoteFreeze_Proxy" iview-object-remote-freeze-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwDrawAspect| dword) (|lindex| long) (|pvAspect| ulong_ptr) (|pdwFreeze| :pointer))
(defcfun ("IViewObject_RemoteFreeze_Stub" iview-object-remote-freeze-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IViewObject_Unfreeze_Proxy" iview-object-unfreeze-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwFreeze| dword))
(defcfun ("IViewObject_Unfreeze_Stub" iview-object-unfreeze-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IViewObject_SetAdvise_Proxy" iview-object-set-advise-proxy :convention :stdcall) hresult  (|This| :pointer) (|aspects| dword) (|advf| dword) (|pAdvSink| :pointer))
(defcfun ("IViewObject_SetAdvise_Stub" iview-object-set-advise-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IViewObject_RemoteGetAdvise_Proxy" iview-object-remote-get-advise-proxy :convention :stdcall) hresult  (|This| :pointer) (|pAspects| :pointer) (|pAdvf| :pointer) (|ppAdvSink| :pointer))
(defcfun ("IViewObject_RemoteGetAdvise_Stub" iview-object-remote-get-advise-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IViewObject2_GetExtent_Proxy" iview-object-2-get-extent-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwDrawAspect| dword) (|lindex| long) (|ptd| :pointer) (|lpsizel| lpsizel))
(defcfun ("IViewObject2_GetExtent_Stub" iview-object-2-get-extent-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDropSource_QueryContinueDrag_Proxy" idrop-source-query-continue-drag-proxy :convention :stdcall) hresult  (|This| :pointer) (|fEscapePressed| winbool) (|grfKeyState| dword))
(defcfun ("IDropSource_QueryContinueDrag_Stub" idrop-source-query-continue-drag-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDropSource_GiveFeedback_Proxy" idrop-source-give-feedback-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwEffect| dword))
(defcfun ("IDropSource_GiveFeedback_Stub" idrop-source-give-feedback-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDropTarget_DragEnter_Proxy" idrop-target-drag-enter-proxy :convention :stdcall) hresult  (|This| :pointer) (|pDataObj| :pointer) (|grfKeyState| dword) (|pt| pointl) (|pdwEffect| :pointer))
(defcfun ("IDropTarget_DragEnter_Stub" idrop-target-drag-enter-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDropTarget_DragOver_Proxy" idrop-target-drag-over-proxy :convention :stdcall) hresult  (|This| :pointer) (|grfKeyState| dword) (|pt| pointl) (|pdwEffect| :pointer))
(defcfun ("IDropTarget_DragOver_Stub" idrop-target-drag-over-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDropTarget_DragLeave_Proxy" idrop-target-drag-leave-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IDropTarget_DragLeave_Stub" idrop-target-drag-leave-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDropTarget_Drop_Proxy" idrop-target-drop-proxy :convention :stdcall) hresult  (|This| :pointer) (|pDataObj| :pointer) (|grfKeyState| dword) (|pt| pointl) (|pdwEffect| :pointer))
(defcfun ("IDropTarget_Drop_Stub" idrop-target-drop-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumOLEVERB_RemoteNext_Proxy" ienum-oleverb-remote-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| lpoleverb) (|pceltFetched| :pointer))
(defcfun ("IEnumOLEVERB_RemoteNext_Stub" ienum-oleverb-remote-next-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumOLEVERB_Skip_Proxy" ienum-oleverb-skip-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong))
(defcfun ("IEnumOLEVERB_Skip_Stub" ienum-oleverb-skip-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumOLEVERB_Reset_Proxy" ienum-oleverb-reset-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IEnumOLEVERB_Reset_Stub" ienum-oleverb-reset-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumOLEVERB_Clone_Proxy" ienum-oleverb-clone-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppenum| :pointer))
(defcfun ("IEnumOLEVERB_Clone_Stub" ienum-oleverb-clone-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("CLIPFORMAT_UserSize" clipformat-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("CLIPFORMAT_UserMarshal" clipformat-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("CLIPFORMAT_UserUnmarshal" clipformat-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("CLIPFORMAT_UserFree" clipformat-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("HACCEL_UserSize" haccel-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("HACCEL_UserMarshal" haccel-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("HACCEL_UserUnmarshal" haccel-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("HACCEL_UserFree" haccel-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("HGLOBAL_UserSize" hglobal-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("HGLOBAL_UserMarshal" hglobal-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("HGLOBAL_UserUnmarshal" hglobal-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("HGLOBAL_UserFree" hglobal-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("HMENU_UserSize" hmenu-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("HMENU_UserMarshal" hmenu-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("HMENU_UserUnmarshal" hmenu-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("HMENU_UserFree" hmenu-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("HWND_UserSize" hwnd-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("HWND_UserMarshal" hwnd-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("HWND_UserUnmarshal" hwnd-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("HWND_UserFree" hwnd-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("STGMEDIUM_UserSize" stgmedium-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("STGMEDIUM_UserMarshal" stgmedium-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("STGMEDIUM_UserUnmarshal" stgmedium-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("STGMEDIUM_UserFree" stgmedium-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("IOleCache2_UpdateCache_Proxy" iole-cache-2-update-cache-proxy :convention :stdcall) hresult  (|This| :pointer) (|pDataObject| lpdataobject) (|grfUpdf| dword) (|pReserved| lpvoid))
(defcfun ("IOleCache2_UpdateCache_Stub" iole-cache-2-update-cache-stub :convention :stdcall) hresult  (|This| :pointer) (|pDataObject| lpdataobject) (|grfUpdf| dword) (|pReserved| long_ptr))
(defcfun ("IOleInPlaceActiveObject_TranslateAccelerator_Proxy" iole-in-place-active-object-translate-accelerator-proxy :convention :stdcall) hresult  (|This| :pointer) (|lpmsg| lpmsg))
(defcfun ("IOleInPlaceActiveObject_TranslateAccelerator_Stub" iole-in-place-active-object-translate-accelerator-stub :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IOleInPlaceActiveObject_ResizeBorder_Proxy" iole-in-place-active-object-resize-border-proxy :convention :stdcall) hresult  (|This| :pointer) (|prcBorder| lpcrect) (|pUIWindow| :pointer) (|fFrameWindow| winbool))
(defcfun ("IOleInPlaceActiveObject_ResizeBorder_Stub" iole-in-place-active-object-resize-border-stub :convention :stdcall) hresult  (|This| :pointer) (|prcBorder| lpcrect) (|riid| :pointer) (|pUIWindow| :pointer) (|fFrameWindow| winbool))
(defcfun ("IViewObject_Draw_Proxy" iview-object-draw-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwDrawAspect| dword) (|lindex| long) (|pvAspect| :pointer) (|ptd| :pointer) (|hdcTargetDev| hdc) (|hdcDraw| hdc) (|lprcBounds| lpcrectl) (|lprcWBounds| lpcrectl) (|pfnContinue| :pointer) (|dwContinue| ulong_ptr))
(defcfun ("IViewObject_Draw_Stub" iview-object-draw-stub :convention :stdcall) hresult  (|This| :pointer) (|dwDrawAspect| dword) (|lindex| long) (|pvAspect| ulong_ptr) (|ptd| :pointer) (|hdcTargetDev| ulong_ptr) (|hdcDraw| ulong_ptr) (|lprcBounds| lpcrectl) (|lprcWBounds| lpcrectl) (|pContinue| :pointer))
(defcfun ("IViewObject_GetColorSet_Proxy" iview-object-get-color-set-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwDrawAspect| dword) (|lindex| long) (|pvAspect| :pointer) (|ptd| :pointer) (|hicTargetDev| hdc) (|ppColorSet| :pointer))
(defcfun ("IViewObject_GetColorSet_Stub" iview-object-get-color-set-stub :convention :stdcall) hresult  (|This| :pointer) (|dwDrawAspect| dword) (|lindex| long) (|pvAspect| ulong_ptr) (|ptd| :pointer) (|hicTargetDev| ulong_ptr) (|ppColorSet| :pointer))
(defcfun ("IViewObject_Freeze_Proxy" iview-object-freeze-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwDrawAspect| dword) (|lindex| long) (|pvAspect| :pointer) (|pdwFreeze| :pointer))
(defcfun ("IViewObject_Freeze_Stub" iview-object-freeze-stub :convention :stdcall) hresult  (|This| :pointer) (|dwDrawAspect| dword) (|lindex| long) (|pvAspect| ulong_ptr) (|pdwFreeze| :pointer))
(defcfun ("IViewObject_GetAdvise_Proxy" iview-object-get-advise-proxy :convention :stdcall) hresult  (|This| :pointer) (|pAspects| :pointer) (|pAdvf| :pointer) (|ppAdvSink| :pointer))
(defcfun ("IViewObject_GetAdvise_Stub" iview-object-get-advise-stub :convention :stdcall) hresult  (|This| :pointer) (|pAspects| :pointer) (|pAdvf| :pointer) (|ppAdvSink| :pointer))
(defcfun ("IEnumOLEVERB_Next_Proxy" ienum-oleverb-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| lpoleverb) (|pceltFetched| :pointer))
(defcfun ("IEnumOLEVERB_Next_Stub" ienum-oleverb-next-stub :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| lpoleverb) (|pceltFetched| :pointer))
(defcfun ("IServiceProvider_RemoteQueryService_Proxy" iservice-provider-remote-query-service-proxy :convention :stdcall) hresult  (|This| :pointer) (|guidService| :pointer) (|riid| :pointer) (|ppvObject| :pointer))
(defcfun ("IServiceProvider_RemoteQueryService_Stub" iservice-provider-remote-query-service-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IServiceProvider_QueryService_Proxy" iservice-provider-query-service-proxy :convention :stdcall) hresult  (|This| :pointer) (|guidService| :pointer) (|riid| :pointer) (|ppvObject| :pointer))
(defcfun ("IServiceProvider_QueryService_Stub" iservice-provider-query-service-stub :convention :stdcall) hresult  (|This| :pointer) (|guidService| :pointer) (|riid| :pointer) (|ppvObject| :pointer))
(defcfun ("ICreateTypeInfo_SetGuid_Proxy" icreate-type-info-set-guid-proxy :convention :stdcall) hresult  (|This| :pointer) (|guid| :pointer))
(defcfun ("ICreateTypeInfo_SetGuid_Stub" icreate-type-info-set-guid-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_SetTypeFlags_Proxy" icreate-type-info-set-type-flags-proxy :convention :stdcall) hresult  (|This| :pointer) (|uTypeFlags| uint))
(defcfun ("ICreateTypeInfo_SetTypeFlags_Stub" icreate-type-info-set-type-flags-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_SetDocString_Proxy" icreate-type-info-set-doc-string-proxy :convention :stdcall) hresult  (|This| :pointer) (|pStrDoc| lpolestr))
(defcfun ("ICreateTypeInfo_SetDocString_Stub" icreate-type-info-set-doc-string-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_SetHelpContext_Proxy" icreate-type-info-set-help-context-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwHelpContext| dword))
(defcfun ("ICreateTypeInfo_SetHelpContext_Stub" icreate-type-info-set-help-context-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_SetVersion_Proxy" icreate-type-info-set-version-proxy :convention :stdcall) hresult  (|This| :pointer) (|wMajorVerNum| word) (|wMinorVerNum| word))
(defcfun ("ICreateTypeInfo_SetVersion_Stub" icreate-type-info-set-version-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_AddRefTypeInfo_Proxy" icreate-type-info-add-ref-type-info-proxy :convention :stdcall) hresult  (|This| :pointer) (|pTInfo| :pointer) (|phRefType| :pointer))
(defcfun ("ICreateTypeInfo_AddRefTypeInfo_Stub" icreate-type-info-add-ref-type-info-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_AddFuncDesc_Proxy" icreate-type-info-add-func-desc-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|pFuncDesc| :pointer))
(defcfun ("ICreateTypeInfo_AddFuncDesc_Stub" icreate-type-info-add-func-desc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_AddImplType_Proxy" icreate-type-info-add-impl-type-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|hRefType| hreftype))
(defcfun ("ICreateTypeInfo_AddImplType_Stub" icreate-type-info-add-impl-type-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_SetImplTypeFlags_Proxy" icreate-type-info-set-impl-type-flags-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|implTypeFlags| int))
(defcfun ("ICreateTypeInfo_SetImplTypeFlags_Stub" icreate-type-info-set-impl-type-flags-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_SetAlignment_Proxy" icreate-type-info-set-alignment-proxy :convention :stdcall) hresult  (|This| :pointer) (|cbAlignment| word))
(defcfun ("ICreateTypeInfo_SetAlignment_Stub" icreate-type-info-set-alignment-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_SetSchema_Proxy" icreate-type-info-set-schema-proxy :convention :stdcall) hresult  (|This| :pointer) (|pStrSchema| lpolestr))
(defcfun ("ICreateTypeInfo_SetSchema_Stub" icreate-type-info-set-schema-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_AddVarDesc_Proxy" icreate-type-info-add-var-desc-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|pVarDesc| :pointer))
(defcfun ("ICreateTypeInfo_AddVarDesc_Stub" icreate-type-info-add-var-desc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_SetFuncAndParamNames_Proxy" icreate-type-info-set-func-and-param-names-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|rgszNames| :pointer) (|cNames| uint))
(defcfun ("ICreateTypeInfo_SetFuncAndParamNames_Stub" icreate-type-info-set-func-and-param-names-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_SetVarName_Proxy" icreate-type-info-set-var-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|szName| lpolestr))
(defcfun ("ICreateTypeInfo_SetVarName_Stub" icreate-type-info-set-var-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_SetTypeDescAlias_Proxy" icreate-type-info-set-type-desc-alias-proxy :convention :stdcall) hresult  (|This| :pointer) (|pTDescAlias| :pointer))
(defcfun ("ICreateTypeInfo_SetTypeDescAlias_Stub" icreate-type-info-set-type-desc-alias-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_DefineFuncAsDllEntry_Proxy" icreate-type-info-define-func-as-dll-entry-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|szDllName| lpolestr) (|szProcName| lpolestr))
(defcfun ("ICreateTypeInfo_DefineFuncAsDllEntry_Stub" icreate-type-info-define-func-as-dll-entry-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_SetFuncDocString_Proxy" icreate-type-info-set-func-doc-string-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|szDocString| lpolestr))
(defcfun ("ICreateTypeInfo_SetFuncDocString_Stub" icreate-type-info-set-func-doc-string-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_SetVarDocString_Proxy" icreate-type-info-set-var-doc-string-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|szDocString| lpolestr))
(defcfun ("ICreateTypeInfo_SetVarDocString_Stub" icreate-type-info-set-var-doc-string-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_SetFuncHelpContext_Proxy" icreate-type-info-set-func-help-context-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|dwHelpContext| dword))
(defcfun ("ICreateTypeInfo_SetFuncHelpContext_Stub" icreate-type-info-set-func-help-context-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_SetVarHelpContext_Proxy" icreate-type-info-set-var-help-context-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|dwHelpContext| dword))
(defcfun ("ICreateTypeInfo_SetVarHelpContext_Stub" icreate-type-info-set-var-help-context-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_SetMops_Proxy" icreate-type-info-set-mops-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|bstrMops| bstr))
(defcfun ("ICreateTypeInfo_SetMops_Stub" icreate-type-info-set-mops-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_SetTypeIdldesc_Proxy" icreate-type-info-set-type-idldesc-proxy :convention :stdcall) hresult  (|This| :pointer) (|pIdlDesc| :pointer))
(defcfun ("ICreateTypeInfo_SetTypeIdldesc_Stub" icreate-type-info-set-type-idldesc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo_LayOut_Proxy" icreate-type-info-lay-out-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ICreateTypeInfo_LayOut_Stub" icreate-type-info-lay-out-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo2_DeleteFuncDesc_Proxy" icreate-type-info-2-delete-func-desc-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint))
(defcfun ("ICreateTypeInfo2_DeleteFuncDesc_Stub" icreate-type-info-2-delete-func-desc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo2_DeleteFuncDescByMemId_Proxy" icreate-type-info-2-delete-func-desc-by-mem-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|memid| memberid) (|invKind| invokekind))
(defcfun ("ICreateTypeInfo2_DeleteFuncDescByMemId_Stub" icreate-type-info-2-delete-func-desc-by-mem-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo2_DeleteVarDesc_Proxy" icreate-type-info-2-delete-var-desc-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint))
(defcfun ("ICreateTypeInfo2_DeleteVarDesc_Stub" icreate-type-info-2-delete-var-desc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo2_DeleteVarDescByMemId_Proxy" icreate-type-info-2-delete-var-desc-by-mem-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|memid| memberid))
(defcfun ("ICreateTypeInfo2_DeleteVarDescByMemId_Stub" icreate-type-info-2-delete-var-desc-by-mem-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo2_DeleteImplType_Proxy" icreate-type-info-2-delete-impl-type-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint))
(defcfun ("ICreateTypeInfo2_DeleteImplType_Stub" icreate-type-info-2-delete-impl-type-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo2_SetCustData_Proxy" icreate-type-info-2-set-cust-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|guid| :pointer) (|pVarVal| :pointer))
(defcfun ("ICreateTypeInfo2_SetCustData_Stub" icreate-type-info-2-set-cust-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo2_SetFuncCustData_Proxy" icreate-type-info-2-set-func-cust-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|guid| :pointer) (|pVarVal| :pointer))
(defcfun ("ICreateTypeInfo2_SetFuncCustData_Stub" icreate-type-info-2-set-func-cust-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo2_SetParamCustData_Proxy" icreate-type-info-2-set-param-cust-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|indexFunc| uint) (|indexParam| uint) (|guid| :pointer) (|pVarVal| :pointer))
(defcfun ("ICreateTypeInfo2_SetParamCustData_Stub" icreate-type-info-2-set-param-cust-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo2_SetVarCustData_Proxy" icreate-type-info-2-set-var-cust-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|guid| :pointer) (|pVarVal| :pointer))
(defcfun ("ICreateTypeInfo2_SetVarCustData_Stub" icreate-type-info-2-set-var-cust-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo2_SetImplTypeCustData_Proxy" icreate-type-info-2-set-impl-type-cust-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|guid| :pointer) (|pVarVal| :pointer))
(defcfun ("ICreateTypeInfo2_SetImplTypeCustData_Stub" icreate-type-info-2-set-impl-type-cust-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo2_SetHelpStringContext_Proxy" icreate-type-info-2-set-help-string-context-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwHelpStringContext| ulong))
(defcfun ("ICreateTypeInfo2_SetHelpStringContext_Stub" icreate-type-info-2-set-help-string-context-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo2_SetFuncHelpStringContext_Proxy" icreate-type-info-2-set-func-help-string-context-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|dwHelpStringContext| ulong))
(defcfun ("ICreateTypeInfo2_SetFuncHelpStringContext_Stub" icreate-type-info-2-set-func-help-string-context-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo2_SetVarHelpStringContext_Proxy" icreate-type-info-2-set-var-help-string-context-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|dwHelpStringContext| ulong))
(defcfun ("ICreateTypeInfo2_SetVarHelpStringContext_Stub" icreate-type-info-2-set-var-help-string-context-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo2_Invalidate_Proxy" icreate-type-info-2-invalidate-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ICreateTypeInfo2_Invalidate_Stub" icreate-type-info-2-invalidate-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeInfo2_SetName_Proxy" icreate-type-info-2-set-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|szName| lpolestr))
(defcfun ("ICreateTypeInfo2_SetName_Stub" icreate-type-info-2-set-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeLib_CreateTypeInfo_Proxy" icreate-type-lib-create-type-info-proxy :convention :stdcall) hresult  (|This| :pointer) (|szName| lpolestr) (|tkind| typekind) (|ppCTInfo| :pointer))
(defcfun ("ICreateTypeLib_CreateTypeInfo_Stub" icreate-type-lib-create-type-info-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeLib_SetName_Proxy" icreate-type-lib-set-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|szName| lpolestr))
(defcfun ("ICreateTypeLib_SetName_Stub" icreate-type-lib-set-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeLib_SetVersion_Proxy" icreate-type-lib-set-version-proxy :convention :stdcall) hresult  (|This| :pointer) (|wMajorVerNum| word) (|wMinorVerNum| word))
(defcfun ("ICreateTypeLib_SetVersion_Stub" icreate-type-lib-set-version-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeLib_SetGuid_Proxy" icreate-type-lib-set-guid-proxy :convention :stdcall) hresult  (|This| :pointer) (|guid| :pointer))
(defcfun ("ICreateTypeLib_SetGuid_Stub" icreate-type-lib-set-guid-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeLib_SetDocString_Proxy" icreate-type-lib-set-doc-string-proxy :convention :stdcall) hresult  (|This| :pointer) (|szDoc| lpolestr))
(defcfun ("ICreateTypeLib_SetDocString_Stub" icreate-type-lib-set-doc-string-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeLib_SetHelpFileName_Proxy" icreate-type-lib-set-help-file-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|szHelpFileName| lpolestr))
(defcfun ("ICreateTypeLib_SetHelpFileName_Stub" icreate-type-lib-set-help-file-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeLib_SetHelpContext_Proxy" icreate-type-lib-set-help-context-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwHelpContext| dword))
(defcfun ("ICreateTypeLib_SetHelpContext_Stub" icreate-type-lib-set-help-context-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeLib_SetLcid_Proxy" icreate-type-lib-set-lcid-proxy :convention :stdcall) hresult  (|This| :pointer) (|lcid| lcid))
(defcfun ("ICreateTypeLib_SetLcid_Stub" icreate-type-lib-set-lcid-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeLib_SetLibFlags_Proxy" icreate-type-lib-set-lib-flags-proxy :convention :stdcall) hresult  (|This| :pointer) (|uLibFlags| uint))
(defcfun ("ICreateTypeLib_SetLibFlags_Stub" icreate-type-lib-set-lib-flags-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeLib_SaveAllChanges_Proxy" icreate-type-lib-save-all-changes-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ICreateTypeLib_SaveAllChanges_Stub" icreate-type-lib-save-all-changes-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeLib2_DeleteTypeInfo_Proxy" icreate-type-lib-2-delete-type-info-proxy :convention :stdcall) hresult  (|This| :pointer) (|szName| lpolestr))
(defcfun ("ICreateTypeLib2_DeleteTypeInfo_Stub" icreate-type-lib-2-delete-type-info-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeLib2_SetCustData_Proxy" icreate-type-lib-2-set-cust-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|guid| :pointer) (|pVarVal| :pointer))
(defcfun ("ICreateTypeLib2_SetCustData_Stub" icreate-type-lib-2-set-cust-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeLib2_SetHelpStringContext_Proxy" icreate-type-lib-2-set-help-string-context-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwHelpStringContext| ulong))
(defcfun ("ICreateTypeLib2_SetHelpStringContext_Stub" icreate-type-lib-2-set-help-string-context-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateTypeLib2_SetHelpStringDll_Proxy" icreate-type-lib-2-set-help-string-dll-proxy :convention :stdcall) hresult  (|This| :pointer) (|szFileName| lpolestr))
(defcfun ("ICreateTypeLib2_SetHelpStringDll_Stub" icreate-type-lib-2-set-help-string-dll-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDispatch_GetTypeInfoCount_Proxy" idispatch-get-type-info-count-proxy :convention :stdcall) hresult  (|This| :pointer) (|pctinfo| :pointer))
(defcfun ("IDispatch_GetTypeInfoCount_Stub" idispatch-get-type-info-count-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDispatch_GetTypeInfo_Proxy" idispatch-get-type-info-proxy :convention :stdcall) hresult  (|This| :pointer) (|iTInfo| uint) (|lcid| lcid) (|ppTInfo| :pointer))
(defcfun ("IDispatch_GetTypeInfo_Stub" idispatch-get-type-info-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDispatch_GetIDsOfNames_Proxy" idispatch-get-ids-of-names-proxy :convention :stdcall) hresult  (|This| :pointer) (|riid| :pointer) (|rgszNames| :pointer) (|cNames| uint) (|lcid| lcid) (|rgDispId| :pointer))
(defcfun ("IDispatch_GetIDsOfNames_Stub" idispatch-get-ids-of-names-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDispatch_RemoteInvoke_Proxy" idispatch-remote-invoke-proxy :convention :stdcall) hresult  (|This| :pointer) (|dispIdMember| dispid) (|riid| :pointer) (|lcid| lcid) (|dwFlags| dword) (|pDispParams| :pointer) (|pVarResult| :pointer) (|pExcepInfo| :pointer) (|pArgErr| :pointer) (|cVarRef| uint) (|rgVarRefIdx| :pointer) (|rgVarRef| :pointer))
(defcfun ("IDispatch_RemoteInvoke_Stub" idispatch-remote-invoke-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumVARIANT_RemoteNext_Proxy" ienum-variant-remote-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgVar| :pointer) (|pCeltFetched| :pointer))
(defcfun ("IEnumVARIANT_RemoteNext_Stub" ienum-variant-remote-next-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumVARIANT_Skip_Proxy" ienum-variant-skip-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong))
(defcfun ("IEnumVARIANT_Skip_Stub" ienum-variant-skip-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumVARIANT_Reset_Proxy" ienum-variant-reset-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IEnumVARIANT_Reset_Stub" ienum-variant-reset-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumVARIANT_Clone_Proxy" ienum-variant-clone-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppEnum| :pointer))
(defcfun ("IEnumVARIANT_Clone_Stub" ienum-variant-clone-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeComp_RemoteBind_Proxy" itype-comp-remote-bind-proxy :convention :stdcall) hresult  (|This| :pointer) (|szName| lpolestr) (|lHashVal| ulong) (|wFlags| word) (|ppTInfo| :pointer) (|pDescKind| :pointer) (|ppFuncDesc| :pointer) (|ppVarDesc| :pointer) (|ppTypeComp| :pointer) (|pDummy| :pointer))
(defcfun ("ITypeComp_RemoteBind_Stub" itype-comp-remote-bind-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeComp_RemoteBindType_Proxy" itype-comp-remote-bind-type-proxy :convention :stdcall) hresult  (|This| :pointer) (|szName| lpolestr) (|lHashVal| ulong) (|ppTInfo| :pointer))
(defcfun ("ITypeComp_RemoteBindType_Stub" itype-comp-remote-bind-type-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo_RemoteGetTypeAttr_Proxy" itype-info-remote-get-type-attr-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppTypeAttr| :pointer) (|pDummy| :pointer))
(defcfun ("ITypeInfo_RemoteGetTypeAttr_Stub" itype-info-remote-get-type-attr-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo_GetTypeComp_Proxy" itype-info-get-type-comp-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppTComp| :pointer))
(defcfun ("ITypeInfo_GetTypeComp_Stub" itype-info-get-type-comp-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo_RemoteGetFuncDesc_Proxy" itype-info-remote-get-func-desc-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|ppFuncDesc| :pointer) (|pDummy| :pointer))
(defcfun ("ITypeInfo_RemoteGetFuncDesc_Stub" itype-info-remote-get-func-desc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo_RemoteGetVarDesc_Proxy" itype-info-remote-get-var-desc-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|ppVarDesc| :pointer) (|pDummy| :pointer))
(defcfun ("ITypeInfo_RemoteGetVarDesc_Stub" itype-info-remote-get-var-desc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo_RemoteGetNames_Proxy" itype-info-remote-get-names-proxy :convention :stdcall) hresult  (|This| :pointer) (|memid| memberid) (|rgBstrNames| :pointer) (|cMaxNames| uint) (|pcNames| :pointer))
(defcfun ("ITypeInfo_RemoteGetNames_Stub" itype-info-remote-get-names-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo_GetRefTypeOfImplType_Proxy" itype-info-get-ref-type-of-impl-type-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|pRefType| :pointer))
(defcfun ("ITypeInfo_GetRefTypeOfImplType_Stub" itype-info-get-ref-type-of-impl-type-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo_GetImplTypeFlags_Proxy" itype-info-get-impl-type-flags-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|pImplTypeFlags| :pointer))
(defcfun ("ITypeInfo_GetImplTypeFlags_Stub" itype-info-get-impl-type-flags-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo_LocalGetIDsOfNames_Proxy" itype-info-local-get-ids-of-names-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ITypeInfo_LocalGetIDsOfNames_Stub" itype-info-local-get-ids-of-names-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo_LocalInvoke_Proxy" itype-info-local-invoke-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ITypeInfo_LocalInvoke_Stub" itype-info-local-invoke-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo_RemoteGetDocumentation_Proxy" itype-info-remote-get-documentation-proxy :convention :stdcall) hresult  (|This| :pointer) (|memid| memberid) (|refPtrFlags| dword) (|pBstrName| :pointer) (|pBstrDocString| :pointer) (|pdwHelpContext| :pointer) (|pBstrHelpFile| :pointer))
(defcfun ("ITypeInfo_RemoteGetDocumentation_Stub" itype-info-remote-get-documentation-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo_RemoteGetDllEntry_Proxy" itype-info-remote-get-dll-entry-proxy :convention :stdcall) hresult  (|This| :pointer) (|memid| memberid) (|invKind| invokekind) (|refPtrFlags| dword) (|pBstrDllName| :pointer) (|pBstrName| :pointer) (|pwOrdinal| :pointer))
(defcfun ("ITypeInfo_RemoteGetDllEntry_Stub" itype-info-remote-get-dll-entry-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo_GetRefTypeInfo_Proxy" itype-info-get-ref-type-info-proxy :convention :stdcall) hresult  (|This| :pointer) (|hRefType| hreftype) (|ppTInfo| :pointer))
(defcfun ("ITypeInfo_GetRefTypeInfo_Stub" itype-info-get-ref-type-info-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo_LocalAddressOfMember_Proxy" itype-info-local-address-of-member-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ITypeInfo_LocalAddressOfMember_Stub" itype-info-local-address-of-member-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo_RemoteCreateInstance_Proxy" itype-info-remote-create-instance-proxy :convention :stdcall) hresult  (|This| :pointer) (|riid| :pointer) (|ppvObj| :pointer))
(defcfun ("ITypeInfo_RemoteCreateInstance_Stub" itype-info-remote-create-instance-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo_GetMops_Proxy" itype-info-get-mops-proxy :convention :stdcall) hresult  (|This| :pointer) (|memid| memberid) (|pBstrMops| :pointer))
(defcfun ("ITypeInfo_GetMops_Stub" itype-info-get-mops-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo_RemoteGetContainingTypeLib_Proxy" itype-info-remote-get-containing-type-lib-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppTLib| :pointer) (|pIndex| :pointer))
(defcfun ("ITypeInfo_RemoteGetContainingTypeLib_Stub" itype-info-remote-get-containing-type-lib-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo_LocalReleaseTypeAttr_Proxy" itype-info-local-release-type-attr-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ITypeInfo_LocalReleaseTypeAttr_Stub" itype-info-local-release-type-attr-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo_LocalReleaseFuncDesc_Proxy" itype-info-local-release-func-desc-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ITypeInfo_LocalReleaseFuncDesc_Stub" itype-info-local-release-func-desc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo_LocalReleaseVarDesc_Proxy" itype-info-local-release-var-desc-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ITypeInfo_LocalReleaseVarDesc_Stub" itype-info-local-release-var-desc-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo2_GetTypeKind_Proxy" itype-info-2-get-type-kind-proxy :convention :stdcall) hresult  (|This| :pointer) (|pTypeKind| :pointer))
(defcfun ("ITypeInfo2_GetTypeKind_Stub" itype-info-2-get-type-kind-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo2_GetTypeFlags_Proxy" itype-info-2-get-type-flags-proxy :convention :stdcall) hresult  (|This| :pointer) (|pTypeFlags| :pointer))
(defcfun ("ITypeInfo2_GetTypeFlags_Stub" itype-info-2-get-type-flags-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo2_GetFuncIndexOfMemId_Proxy" itype-info-2-get-func-index-of-mem-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|memid| memberid) (|invKind| invokekind) (|pFuncIndex| :pointer))
(defcfun ("ITypeInfo2_GetFuncIndexOfMemId_Stub" itype-info-2-get-func-index-of-mem-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo2_GetVarIndexOfMemId_Proxy" itype-info-2-get-var-index-of-mem-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|memid| memberid) (|pVarIndex| :pointer))
(defcfun ("ITypeInfo2_GetVarIndexOfMemId_Stub" itype-info-2-get-var-index-of-mem-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo2_GetCustData_Proxy" itype-info-2-get-cust-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|guid| :pointer) (|pVarVal| :pointer))
(defcfun ("ITypeInfo2_GetCustData_Stub" itype-info-2-get-cust-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo2_GetFuncCustData_Proxy" itype-info-2-get-func-cust-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|guid| :pointer) (|pVarVal| :pointer))
(defcfun ("ITypeInfo2_GetFuncCustData_Stub" itype-info-2-get-func-cust-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo2_GetParamCustData_Proxy" itype-info-2-get-param-cust-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|indexFunc| uint) (|indexParam| uint) (|guid| :pointer) (|pVarVal| :pointer))
(defcfun ("ITypeInfo2_GetParamCustData_Stub" itype-info-2-get-param-cust-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo2_GetVarCustData_Proxy" itype-info-2-get-var-cust-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|guid| :pointer) (|pVarVal| :pointer))
(defcfun ("ITypeInfo2_GetVarCustData_Stub" itype-info-2-get-var-cust-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo2_GetImplTypeCustData_Proxy" itype-info-2-get-impl-type-cust-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|guid| :pointer) (|pVarVal| :pointer))
(defcfun ("ITypeInfo2_GetImplTypeCustData_Stub" itype-info-2-get-impl-type-cust-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo2_RemoteGetDocumentation2_Proxy" itype-info-2-remote-get-documentation-2-proxy :convention :stdcall) hresult  (|This| :pointer) (|memid| memberid) (|lcid| lcid) (|refPtrFlags| dword) (|pbstrHelpString| :pointer) (|pdwHelpStringContext| :pointer) (|pbstrHelpStringDll| :pointer))
(defcfun ("ITypeInfo2_RemoteGetDocumentation2_Stub" itype-info-2-remote-get-documentation-2-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo2_GetAllCustData_Proxy" itype-info-2-get-all-cust-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|pCustData| :pointer))
(defcfun ("ITypeInfo2_GetAllCustData_Stub" itype-info-2-get-all-cust-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo2_GetAllFuncCustData_Proxy" itype-info-2-get-all-func-cust-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|pCustData| :pointer))
(defcfun ("ITypeInfo2_GetAllFuncCustData_Stub" itype-info-2-get-all-func-cust-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo2_GetAllParamCustData_Proxy" itype-info-2-get-all-param-cust-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|indexFunc| uint) (|indexParam| uint) (|pCustData| :pointer))
(defcfun ("ITypeInfo2_GetAllParamCustData_Stub" itype-info-2-get-all-param-cust-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo2_GetAllVarCustData_Proxy" itype-info-2-get-all-var-cust-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|pCustData| :pointer))
(defcfun ("ITypeInfo2_GetAllVarCustData_Stub" itype-info-2-get-all-var-cust-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeInfo2_GetAllImplTypeCustData_Proxy" itype-info-2-get-all-impl-type-cust-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|pCustData| :pointer))
(defcfun ("ITypeInfo2_GetAllImplTypeCustData_Stub" itype-info-2-get-all-impl-type-cust-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeLib_RemoteGetTypeInfoCount_Proxy" itype-lib-remote-get-type-info-count-proxy :convention :stdcall) hresult  (|This| :pointer) (|pcTInfo| :pointer))
(defcfun ("ITypeLib_RemoteGetTypeInfoCount_Stub" itype-lib-remote-get-type-info-count-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeLib_GetTypeInfo_Proxy" itype-lib-get-type-info-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|ppTInfo| :pointer))
(defcfun ("ITypeLib_GetTypeInfo_Stub" itype-lib-get-type-info-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeLib_GetTypeInfoType_Proxy" itype-lib-get-type-info-type-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|pTKind| :pointer))
(defcfun ("ITypeLib_GetTypeInfoType_Stub" itype-lib-get-type-info-type-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeLib_GetTypeInfoOfGuid_Proxy" itype-lib-get-type-info-of-guid-proxy :convention :stdcall) hresult  (|This| :pointer) (|guid| :pointer) (|ppTinfo| :pointer))
(defcfun ("ITypeLib_GetTypeInfoOfGuid_Stub" itype-lib-get-type-info-of-guid-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeLib_RemoteGetLibAttr_Proxy" itype-lib-remote-get-lib-attr-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppTLibAttr| :pointer) (|pDummy| :pointer))
(defcfun ("ITypeLib_RemoteGetLibAttr_Stub" itype-lib-remote-get-lib-attr-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeLib_GetTypeComp_Proxy" itype-lib-get-type-comp-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppTComp| :pointer))
(defcfun ("ITypeLib_GetTypeComp_Stub" itype-lib-get-type-comp-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeLib_RemoteGetDocumentation_Proxy" itype-lib-remote-get-documentation-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| int) (|refPtrFlags| dword) (|pBstrName| :pointer) (|pBstrDocString| :pointer) (|pdwHelpContext| :pointer) (|pBstrHelpFile| :pointer))
(defcfun ("ITypeLib_RemoteGetDocumentation_Stub" itype-lib-remote-get-documentation-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeLib_RemoteIsName_Proxy" itype-lib-remote-is-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|szNameBuf| lpolestr) (|lHashVal| ulong) (|pfName| :pointer) (|pBstrLibName| :pointer))
(defcfun ("ITypeLib_RemoteIsName_Stub" itype-lib-remote-is-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeLib_RemoteFindName_Proxy" itype-lib-remote-find-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|szNameBuf| lpolestr) (|lHashVal| ulong) (|ppTInfo| :pointer) (|rgMemId| :pointer) (|pcFound| :pointer) (|pBstrLibName| :pointer))
(defcfun ("ITypeLib_RemoteFindName_Stub" itype-lib-remote-find-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeLib_LocalReleaseTLibAttr_Proxy" itype-lib-local-release-tlib-attr-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ITypeLib_LocalReleaseTLibAttr_Stub" itype-lib-local-release-tlib-attr-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeLib2_GetCustData_Proxy" itype-lib-2-get-cust-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|guid| :pointer) (|pVarVal| :pointer))
(defcfun ("ITypeLib2_GetCustData_Stub" itype-lib-2-get-cust-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeLib2_RemoteGetLibStatistics_Proxy" itype-lib-2-remote-get-lib-statistics-proxy :convention :stdcall) hresult  (|This| :pointer) (|pcUniqueNames| :pointer) (|pcchUniqueNames| :pointer))
(defcfun ("ITypeLib2_RemoteGetLibStatistics_Stub" itype-lib-2-remote-get-lib-statistics-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeLib2_RemoteGetDocumentation2_Proxy" itype-lib-2-remote-get-documentation-2-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| int) (|lcid| lcid) (|refPtrFlags| dword) (|pbstrHelpString| :pointer) (|pdwHelpStringContext| :pointer) (|pbstrHelpStringDll| :pointer))
(defcfun ("ITypeLib2_RemoteGetDocumentation2_Stub" itype-lib-2-remote-get-documentation-2-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeLib2_GetAllCustData_Proxy" itype-lib-2-get-all-cust-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|pCustData| :pointer))
(defcfun ("ITypeLib2_GetAllCustData_Stub" itype-lib-2-get-all-cust-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeChangeEvents_RequestTypeChange_Proxy" itype-change-events-request-type-change-proxy :convention :stdcall) hresult  (|This| :pointer) (|changeKind| changekind) (|pTInfoBefore| :pointer) (|pStrName| lpolestr) (|pfCancel| :pointer))
(defcfun ("ITypeChangeEvents_RequestTypeChange_Stub" itype-change-events-request-type-change-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeChangeEvents_AfterTypeChange_Proxy" itype-change-events-after-type-change-proxy :convention :stdcall) hresult  (|This| :pointer) (|changeKind| changekind) (|pTInfoAfter| :pointer) (|pStrName| lpolestr))
(defcfun ("ITypeChangeEvents_AfterTypeChange_Stub" itype-change-events-after-type-change-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IErrorInfo_GetGUID_Proxy" ierror-info-get-guid-proxy :convention :stdcall) hresult  (|This| :pointer) (|pGUID| :pointer))
(defcfun ("IErrorInfo_GetGUID_Stub" ierror-info-get-guid-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IErrorInfo_GetSource_Proxy" ierror-info-get-source-proxy :convention :stdcall) hresult  (|This| :pointer) (|pBstrSource| :pointer))
(defcfun ("IErrorInfo_GetSource_Stub" ierror-info-get-source-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IErrorInfo_GetDescription_Proxy" ierror-info-get-description-proxy :convention :stdcall) hresult  (|This| :pointer) (|pBstrDescription| :pointer))
(defcfun ("IErrorInfo_GetDescription_Stub" ierror-info-get-description-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IErrorInfo_GetHelpFile_Proxy" ierror-info-get-help-file-proxy :convention :stdcall) hresult  (|This| :pointer) (|pBstrHelpFile| :pointer))
(defcfun ("IErrorInfo_GetHelpFile_Stub" ierror-info-get-help-file-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IErrorInfo_GetHelpContext_Proxy" ierror-info-get-help-context-proxy :convention :stdcall) hresult  (|This| :pointer) (|pdwHelpContext| :pointer))
(defcfun ("IErrorInfo_GetHelpContext_Stub" ierror-info-get-help-context-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateErrorInfo_SetGUID_Proxy" icreate-error-info-set-guid-proxy :convention :stdcall) hresult  (|This| :pointer) (|rguid| :pointer))
(defcfun ("ICreateErrorInfo_SetGUID_Stub" icreate-error-info-set-guid-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateErrorInfo_SetSource_Proxy" icreate-error-info-set-source-proxy :convention :stdcall) hresult  (|This| :pointer) (|szSource| lpolestr))
(defcfun ("ICreateErrorInfo_SetSource_Stub" icreate-error-info-set-source-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateErrorInfo_SetDescription_Proxy" icreate-error-info-set-description-proxy :convention :stdcall) hresult  (|This| :pointer) (|szDescription| lpolestr))
(defcfun ("ICreateErrorInfo_SetDescription_Stub" icreate-error-info-set-description-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateErrorInfo_SetHelpFile_Proxy" icreate-error-info-set-help-file-proxy :convention :stdcall) hresult  (|This| :pointer) (|szHelpFile| lpolestr))
(defcfun ("ICreateErrorInfo_SetHelpFile_Stub" icreate-error-info-set-help-file-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICreateErrorInfo_SetHelpContext_Proxy" icreate-error-info-set-help-context-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwHelpContext| dword))
(defcfun ("ICreateErrorInfo_SetHelpContext_Stub" icreate-error-info-set-help-context-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISupportErrorInfo_InterfaceSupportsErrorInfo_Proxy" isupport-error-info-interface-supports-error-info-proxy :convention :stdcall) hresult  (|This| :pointer) (|riid| :pointer))
(defcfun ("ISupportErrorInfo_InterfaceSupportsErrorInfo_Stub" isupport-error-info-interface-supports-error-info-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeFactory_CreateFromTypeInfo_Proxy" itype-factory-create-from-type-info-proxy :convention :stdcall) hresult  (|This| :pointer) (|pTypeInfo| :pointer) (|riid| :pointer) (|ppv| :pointer))
(defcfun ("ITypeFactory_CreateFromTypeInfo_Stub" itype-factory-create-from-type-info-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeMarshal_Size_Proxy" itype-marshal-size-proxy :convention :stdcall) hresult  (|This| :pointer) (|pvType| pvoid) (|dwDestContext| dword) (|pvDestContext| pvoid) (|pSize| :pointer))
(defcfun ("ITypeMarshal_Size_Stub" itype-marshal-size-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeMarshal_Marshal_Proxy" itype-marshal-marshal-proxy :convention :stdcall) hresult  (|This| :pointer) (|pvType| pvoid) (|dwDestContext| dword) (|pvDestContext| pvoid) (|cbBufferLength| ulong) (|pBuffer| :pointer) (|pcbWritten| :pointer))
(defcfun ("ITypeMarshal_Marshal_Stub" itype-marshal-marshal-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeMarshal_Unmarshal_Proxy" itype-marshal-unmarshal-proxy :convention :stdcall) hresult  (|This| :pointer) (|pvType| pvoid) (|dwFlags| dword) (|cbBufferLength| ulong) (|pBuffer| :pointer) (|pcbRead| :pointer))
(defcfun ("ITypeMarshal_Unmarshal_Stub" itype-marshal-unmarshal-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ITypeMarshal_Free_Proxy" itype-marshal-free-proxy :convention :stdcall) hresult  (|This| :pointer) (|pvType| pvoid))
(defcfun ("ITypeMarshal_Free_Stub" itype-marshal-free-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRecordInfo_RecordInit_Proxy" irecord-info-record-init-proxy :convention :stdcall) hresult  (|This| :pointer) (|pvNew| pvoid))
(defcfun ("IRecordInfo_RecordInit_Stub" irecord-info-record-init-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRecordInfo_RecordClear_Proxy" irecord-info-record-clear-proxy :convention :stdcall) hresult  (|This| :pointer) (|pvExisting| pvoid))
(defcfun ("IRecordInfo_RecordClear_Stub" irecord-info-record-clear-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRecordInfo_RecordCopy_Proxy" irecord-info-record-copy-proxy :convention :stdcall) hresult  (|This| :pointer) (|pvExisting| pvoid) (|pvNew| pvoid))
(defcfun ("IRecordInfo_RecordCopy_Stub" irecord-info-record-copy-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRecordInfo_GetGuid_Proxy" irecord-info-get-guid-proxy :convention :stdcall) hresult  (|This| :pointer) (|pguid| :pointer))
(defcfun ("IRecordInfo_GetGuid_Stub" irecord-info-get-guid-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRecordInfo_GetName_Proxy" irecord-info-get-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbstrName| :pointer))
(defcfun ("IRecordInfo_GetName_Stub" irecord-info-get-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRecordInfo_GetSize_Proxy" irecord-info-get-size-proxy :convention :stdcall) hresult  (|This| :pointer) (|pcbSize| :pointer))
(defcfun ("IRecordInfo_GetSize_Stub" irecord-info-get-size-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRecordInfo_GetTypeInfo_Proxy" irecord-info-get-type-info-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppTypeInfo| :pointer))
(defcfun ("IRecordInfo_GetTypeInfo_Stub" irecord-info-get-type-info-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRecordInfo_GetField_Proxy" irecord-info-get-field-proxy :convention :stdcall) hresult  (|This| :pointer) (|pvData| pvoid) (|szFieldName| lpcolestr) (|pvarField| :pointer))
(defcfun ("IRecordInfo_GetField_Stub" irecord-info-get-field-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRecordInfo_GetFieldNoCopy_Proxy" irecord-info-get-field-no-copy-proxy :convention :stdcall) hresult  (|This| :pointer) (|pvData| pvoid) (|szFieldName| lpcolestr) (|pvarField| :pointer) (|ppvDataCArray| :pointer))
(defcfun ("IRecordInfo_GetFieldNoCopy_Stub" irecord-info-get-field-no-copy-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRecordInfo_PutField_Proxy" irecord-info-put-field-proxy :convention :stdcall) hresult  (|This| :pointer) (|wFlags| ulong) (|pvData| pvoid) (|szFieldName| lpcolestr) (|pvarField| :pointer))
(defcfun ("IRecordInfo_PutField_Stub" irecord-info-put-field-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRecordInfo_PutFieldNoCopy_Proxy" irecord-info-put-field-no-copy-proxy :convention :stdcall) hresult  (|This| :pointer) (|wFlags| ulong) (|pvData| pvoid) (|szFieldName| lpcolestr) (|pvarField| :pointer))
(defcfun ("IRecordInfo_PutFieldNoCopy_Stub" irecord-info-put-field-no-copy-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRecordInfo_GetFieldNames_Proxy" irecord-info-get-field-names-proxy :convention :stdcall) hresult  (|This| :pointer) (|pcNames| :pointer) (|rgBstrNames| :pointer))
(defcfun ("IRecordInfo_GetFieldNames_Stub" irecord-info-get-field-names-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRecordInfo_IsMatchingType_Proxy" irecord-info-is-matching-type-proxy :convention :stdcall) winbool  (|This| :pointer) (|pRecordInfo| :pointer))
(defcfun ("IRecordInfo_IsMatchingType_Stub" irecord-info-is-matching-type-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRecordInfo_RecordCreate_Proxy" irecord-info-record-create-proxy :convention :stdcall) pvoid  (|This| :pointer))
(defcfun ("IRecordInfo_RecordCreate_Stub" irecord-info-record-create-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRecordInfo_RecordCreateCopy_Proxy" irecord-info-record-create-copy-proxy :convention :stdcall) hresult  (|This| :pointer) (|pvSource| pvoid) (|ppvDest| :pointer))
(defcfun ("IRecordInfo_RecordCreateCopy_Stub" irecord-info-record-create-copy-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IRecordInfo_RecordDestroy_Proxy" irecord-info-record-destroy-proxy :convention :stdcall) hresult  (|This| :pointer) (|pvRecord| pvoid))
(defcfun ("IRecordInfo_RecordDestroy_Stub" irecord-info-record-destroy-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IErrorLog_AddError_Proxy" ierror-log-add-error-proxy :convention :stdcall) hresult  (|This| :pointer) (|pszPropName| lpcolestr) (|pExcepInfo| :pointer))
(defcfun ("IErrorLog_AddError_Stub" ierror-log-add-error-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPropertyBag_RemoteRead_Proxy" iproperty-bag-remote-read-proxy :convention :stdcall) hresult  (|This| :pointer) (|pszPropName| lpcolestr) (|pVar| :pointer) (|pErrorLog| :pointer) (|varType| dword) (|pUnkObj| :pointer))
(defcfun ("IPropertyBag_RemoteRead_Stub" iproperty-bag-remote-read-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPropertyBag_Write_Proxy" iproperty-bag-write-proxy :convention :stdcall) hresult  (|This| :pointer) (|pszPropName| lpcolestr) (|pVar| :pointer))
(defcfun ("IPropertyBag_Write_Stub" iproperty-bag-write-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("BSTR_UserSize" bstr-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("BSTR_UserMarshal" bstr-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("BSTR_UserUnmarshal" bstr-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("BSTR_UserFree" bstr-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("CLEANLOCALSTORAGE_UserSize" cleanlocalstorage-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("CLEANLOCALSTORAGE_UserMarshal" cleanlocalstorage-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("CLEANLOCALSTORAGE_UserUnmarshal" cleanlocalstorage-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("CLEANLOCALSTORAGE_UserFree" cleanlocalstorage-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("VARIANT_UserSize" variant-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("VARIANT_UserMarshal" variant-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("VARIANT_UserUnmarshal" variant-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("VARIANT_UserFree" variant-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("IDispatch_Invoke_Proxy" idispatch-invoke-proxy :convention :stdcall) hresult  (|This| :pointer) (|dispIdMember| dispid) (|riid| :pointer) (|lcid| lcid) (|wFlags| word) (|pDispParams| :pointer) (|pVarResult| :pointer) (|pExcepInfo| :pointer) (|puArgErr| :pointer))
(defcfun ("IDispatch_Invoke_Stub" idispatch-invoke-stub :convention :stdcall) hresult  (|This| :pointer) (|dispIdMember| dispid) (|riid| :pointer) (|lcid| lcid) (|dwFlags| dword) (|pDispParams| :pointer) (|pVarResult| :pointer) (|pExcepInfo| :pointer) (|pArgErr| :pointer) (|cVarRef| uint) (|rgVarRefIdx| :pointer) (|rgVarRef| :pointer))
(defcfun ("IEnumVARIANT_Next_Proxy" ienum-variant-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgVar| :pointer) (|pCeltFetched| :pointer))
(defcfun ("IEnumVARIANT_Next_Stub" ienum-variant-next-stub :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgVar| :pointer) (|pCeltFetched| :pointer))
(defcfun ("ITypeComp_Bind_Proxy" itype-comp-bind-proxy :convention :stdcall) hresult  (|This| :pointer) (|szName| lpolestr) (|lHashVal| ulong) (|wFlags| word) (|ppTInfo| :pointer) (|pDescKind| :pointer) (|pBindPtr| :pointer))
(defcfun ("ITypeComp_Bind_Stub" itype-comp-bind-stub :convention :stdcall) hresult  (|This| :pointer) (|szName| lpolestr) (|lHashVal| ulong) (|wFlags| word) (|ppTInfo| :pointer) (|pDescKind| :pointer) (|ppFuncDesc| :pointer) (|ppVarDesc| :pointer) (|ppTypeComp| :pointer) (|pDummy| :pointer))
(defcfun ("ITypeComp_BindType_Proxy" itype-comp-bind-type-proxy :convention :stdcall) hresult  (|This| :pointer) (|szName| lpolestr) (|lHashVal| ulong) (|ppTInfo| :pointer) (|ppTComp| :pointer))
(defcfun ("ITypeComp_BindType_Stub" itype-comp-bind-type-stub :convention :stdcall) hresult  (|This| :pointer) (|szName| lpolestr) (|lHashVal| ulong) (|ppTInfo| :pointer))
(defcfun ("ITypeInfo_GetTypeAttr_Proxy" itype-info-get-type-attr-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppTypeAttr| :pointer))
(defcfun ("ITypeInfo_GetTypeAttr_Stub" itype-info-get-type-attr-stub :convention :stdcall) hresult  (|This| :pointer) (|ppTypeAttr| :pointer) (|pDummy| :pointer))
(defcfun ("ITypeInfo_GetFuncDesc_Proxy" itype-info-get-func-desc-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|ppFuncDesc| :pointer))
(defcfun ("ITypeInfo_GetFuncDesc_Stub" itype-info-get-func-desc-stub :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|ppFuncDesc| :pointer) (|pDummy| :pointer))
(defcfun ("ITypeInfo_GetVarDesc_Proxy" itype-info-get-var-desc-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|ppVarDesc| :pointer))
(defcfun ("ITypeInfo_GetVarDesc_Stub" itype-info-get-var-desc-stub :convention :stdcall) hresult  (|This| :pointer) (|index| uint) (|ppVarDesc| :pointer) (|pDummy| :pointer))
(defcfun ("ITypeInfo_GetNames_Proxy" itype-info-get-names-proxy :convention :stdcall) hresult  (|This| :pointer) (|memid| memberid) (|rgBstrNames| :pointer) (|cMaxNames| uint) (|pcNames| :pointer))
(defcfun ("ITypeInfo_GetNames_Stub" itype-info-get-names-stub :convention :stdcall) hresult  (|This| :pointer) (|memid| memberid) (|rgBstrNames| :pointer) (|cMaxNames| uint) (|pcNames| :pointer))
(defcfun ("ITypeInfo_GetIDsOfNames_Proxy" itype-info-get-ids-of-names-proxy :convention :stdcall) hresult  (|This| :pointer) (|rgszNames| :pointer) (|cNames| uint) (|pMemId| :pointer))
(defcfun ("ITypeInfo_GetIDsOfNames_Stub" itype-info-get-ids-of-names-stub :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ITypeInfo_Invoke_Proxy" itype-info-invoke-proxy :convention :stdcall) hresult  (|This| :pointer) (|pvInstance| pvoid) (|memid| memberid) (|wFlags| word) (|pDispParams| :pointer) (|pVarResult| :pointer) (|pExcepInfo| :pointer) (|puArgErr| :pointer))
(defcfun ("ITypeInfo_Invoke_Stub" itype-info-invoke-stub :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ITypeInfo_GetDocumentation_Proxy" itype-info-get-documentation-proxy :convention :stdcall) hresult  (|This| :pointer) (|memid| memberid) (|pBstrName| :pointer) (|pBstrDocString| :pointer) (|pdwHelpContext| :pointer) (|pBstrHelpFile| :pointer))
(defcfun ("ITypeInfo_GetDocumentation_Stub" itype-info-get-documentation-stub :convention :stdcall) hresult  (|This| :pointer) (|memid| memberid) (|refPtrFlags| dword) (|pBstrName| :pointer) (|pBstrDocString| :pointer) (|pdwHelpContext| :pointer) (|pBstrHelpFile| :pointer))
(defcfun ("ITypeInfo_GetDllEntry_Proxy" itype-info-get-dll-entry-proxy :convention :stdcall) hresult  (|This| :pointer) (|memid| memberid) (|invKind| invokekind) (|pBstrDllName| :pointer) (|pBstrName| :pointer) (|pwOrdinal| :pointer))
(defcfun ("ITypeInfo_GetDllEntry_Stub" itype-info-get-dll-entry-stub :convention :stdcall) hresult  (|This| :pointer) (|memid| memberid) (|invKind| invokekind) (|refPtrFlags| dword) (|pBstrDllName| :pointer) (|pBstrName| :pointer) (|pwOrdinal| :pointer))
(defcfun ("ITypeInfo_AddressOfMember_Proxy" itype-info-address-of-member-proxy :convention :stdcall) hresult  (|This| :pointer) (|memid| memberid) (|invKind| invokekind) (|ppv| :pointer))
(defcfun ("ITypeInfo_AddressOfMember_Stub" itype-info-address-of-member-stub :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ITypeInfo_CreateInstance_Proxy" itype-info-create-instance-proxy :convention :stdcall) hresult  (|This| :pointer) (|pUnkOuter| :pointer) (|riid| :pointer) (|ppvObj| :pointer))
(defcfun ("ITypeInfo_CreateInstance_Stub" itype-info-create-instance-stub :convention :stdcall) hresult  (|This| :pointer) (|riid| :pointer) (|ppvObj| :pointer))
(defcfun ("ITypeInfo_GetContainingTypeLib_Proxy" itype-info-get-containing-type-lib-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppTLib| :pointer) (|pIndex| :pointer))
(defcfun ("ITypeInfo_GetContainingTypeLib_Stub" itype-info-get-containing-type-lib-stub :convention :stdcall) hresult  (|This| :pointer) (|ppTLib| :pointer) (|pIndex| :pointer))
(defcfun ("ITypeInfo_ReleaseTypeAttr_Proxy" itype-info-release-type-attr-proxy :convention :stdcall) :void  (|This| :pointer) (|pTypeAttr| :pointer))
(defcfun ("ITypeInfo_ReleaseTypeAttr_Stub" itype-info-release-type-attr-stub :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ITypeInfo_ReleaseFuncDesc_Proxy" itype-info-release-func-desc-proxy :convention :stdcall) :void  (|This| :pointer) (|pFuncDesc| :pointer))
(defcfun ("ITypeInfo_ReleaseFuncDesc_Stub" itype-info-release-func-desc-stub :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ITypeInfo_ReleaseVarDesc_Proxy" itype-info-release-var-desc-proxy :convention :stdcall) :void  (|This| :pointer) (|pVarDesc| :pointer))
(defcfun ("ITypeInfo_ReleaseVarDesc_Stub" itype-info-release-var-desc-stub :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ITypeInfo2_GetDocumentation2_Proxy" itype-info-2-get-documentation-2-proxy :convention :stdcall) hresult  (|This| :pointer) (|memid| memberid) (|lcid| lcid) (|pbstrHelpString| :pointer) (|pdwHelpStringContext| :pointer) (|pbstrHelpStringDll| :pointer))
(defcfun ("ITypeInfo2_GetDocumentation2_Stub" itype-info-2-get-documentation-2-stub :convention :stdcall) hresult  (|This| :pointer) (|memid| memberid) (|lcid| lcid) (|refPtrFlags| dword) (|pbstrHelpString| :pointer) (|pdwHelpStringContext| :pointer) (|pbstrHelpStringDll| :pointer))
(defcfun ("ITypeLib_GetTypeInfoCount_Proxy" itype-lib-get-type-info-count-proxy :convention :stdcall) uint  (|This| :pointer))
(defcfun ("ITypeLib_GetTypeInfoCount_Stub" itype-lib-get-type-info-count-stub :convention :stdcall) hresult  (|This| :pointer) (|pcTInfo| :pointer))
(defcfun ("ITypeLib_GetLibAttr_Proxy" itype-lib-get-lib-attr-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppTLibAttr| :pointer))
(defcfun ("ITypeLib_GetLibAttr_Stub" itype-lib-get-lib-attr-stub :convention :stdcall) hresult  (|This| :pointer) (|ppTLibAttr| :pointer) (|pDummy| :pointer))
(defcfun ("ITypeLib_GetDocumentation_Proxy" itype-lib-get-documentation-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| int) (|pBstrName| :pointer) (|pBstrDocString| :pointer) (|pdwHelpContext| :pointer) (|pBstrHelpFile| :pointer))
(defcfun ("ITypeLib_GetDocumentation_Stub" itype-lib-get-documentation-stub :convention :stdcall) hresult  (|This| :pointer) (|index| int) (|refPtrFlags| dword) (|pBstrName| :pointer) (|pBstrDocString| :pointer) (|pdwHelpContext| :pointer) (|pBstrHelpFile| :pointer))
(defcfun ("ITypeLib_IsName_Proxy" itype-lib-is-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|szNameBuf| lpolestr) (|lHashVal| ulong) (|pfName| :pointer))
(defcfun ("ITypeLib_IsName_Stub" itype-lib-is-name-stub :convention :stdcall) hresult  (|This| :pointer) (|szNameBuf| lpolestr) (|lHashVal| ulong) (|pfName| :pointer) (|pBstrLibName| :pointer))
(defcfun ("ITypeLib_FindName_Proxy" itype-lib-find-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|szNameBuf| lpolestr) (|lHashVal| ulong) (|ppTInfo| :pointer) (|rgMemId| :pointer) (|pcFound| :pointer))
(defcfun ("ITypeLib_FindName_Stub" itype-lib-find-name-stub :convention :stdcall) hresult  (|This| :pointer) (|szNameBuf| lpolestr) (|lHashVal| ulong) (|ppTInfo| :pointer) (|rgMemId| :pointer) (|pcFound| :pointer) (|pBstrLibName| :pointer))
(defcfun ("ITypeLib_ReleaseTLibAttr_Proxy" itype-lib-release-tlib-attr-proxy :convention :stdcall) :void  (|This| :pointer) (|pTLibAttr| :pointer))
(defcfun ("ITypeLib_ReleaseTLibAttr_Stub" itype-lib-release-tlib-attr-stub :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("ITypeLib2_GetLibStatistics_Proxy" itype-lib-2-get-lib-statistics-proxy :convention :stdcall) hresult  (|This| :pointer) (|pcUniqueNames| :pointer) (|pcchUniqueNames| :pointer))
(defcfun ("ITypeLib2_GetLibStatistics_Stub" itype-lib-2-get-lib-statistics-stub :convention :stdcall) hresult  (|This| :pointer) (|pcUniqueNames| :pointer) (|pcchUniqueNames| :pointer))
(defcfun ("ITypeLib2_GetDocumentation2_Proxy" itype-lib-2-get-documentation-2-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| int) (|lcid| lcid) (|pbstrHelpString| :pointer) (|pdwHelpStringContext| :pointer) (|pbstrHelpStringDll| :pointer))
(defcfun ("ITypeLib2_GetDocumentation2_Stub" itype-lib-2-get-documentation-2-stub :convention :stdcall) hresult  (|This| :pointer) (|index| int) (|lcid| lcid) (|refPtrFlags| dword) (|pbstrHelpString| :pointer) (|pdwHelpStringContext| :pointer) (|pbstrHelpStringDll| :pointer))
(defcfun ("IPropertyBag_Read_Proxy" iproperty-bag-read-proxy :convention :stdcall) hresult  (|This| :pointer) (|pszPropName| lpcolestr) (|pVar| :pointer) (|pErrorLog| :pointer))
(defcfun ("IPropertyBag_Read_Stub" iproperty-bag-read-stub :convention :stdcall) hresult  (|This| :pointer) (|pszPropName| lpcolestr) (|pVar| :pointer) (|pErrorLog| :pointer) (|varType| dword) (|pUnkObj| :pointer))
(defcfun ("IXMLDOMImplementation_hasFeature_Proxy" ixmldom-implementation-has-feature-proxy :convention :stdcall) hresult  (|This| :pointer) (|feature| bstr) (|version| bstr) (|hasFeature| :pointer))
(defcfun ("IXMLDOMImplementation_hasFeature_Stub" ixmldom-implementation-has-feature-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_nodeName_Proxy" ixmldom-node-get-node-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|name| :pointer))
(defcfun ("IXMLDOMNode_get_nodeName_Stub" ixmldom-node-get-node-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_nodeValue_Proxy" ixmldom-node-get-node-value-proxy :convention :stdcall) hresult  (|This| :pointer) (|value| :pointer))
(defcfun ("IXMLDOMNode_get_nodeValue_Stub" ixmldom-node-get-node-value-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_put_nodeValue_Proxy" ixmldom-node-put-node-value-proxy :convention :stdcall) hresult  (|This| :pointer) (|value| variant))
(defcfun ("IXMLDOMNode_put_nodeValue_Stub" ixmldom-node-put-node-value-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_nodeType_Proxy" ixmldom-node-get-node-type-proxy :convention :stdcall) hresult  (|This| :pointer) (|type| :pointer))
(defcfun ("IXMLDOMNode_get_nodeType_Stub" ixmldom-node-get-node-type-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_parentNode_Proxy" ixmldom-node-get-parent-node-proxy :convention :stdcall) hresult  (|This| :pointer) (|parent| :pointer))
(defcfun ("IXMLDOMNode_get_parentNode_Stub" ixmldom-node-get-parent-node-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_childNodes_Proxy" ixmldom-node-get-child-nodes-proxy :convention :stdcall) hresult  (|This| :pointer) (|childList| :pointer))
(defcfun ("IXMLDOMNode_get_childNodes_Stub" ixmldom-node-get-child-nodes-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_firstChild_Proxy" ixmldom-node-get-first-child-proxy :convention :stdcall) hresult  (|This| :pointer) (|firstChild| :pointer))
(defcfun ("IXMLDOMNode_get_firstChild_Stub" ixmldom-node-get-first-child-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_lastChild_Proxy" ixmldom-node-get-last-child-proxy :convention :stdcall) hresult  (|This| :pointer) (|lastChild| :pointer))
(defcfun ("IXMLDOMNode_get_lastChild_Stub" ixmldom-node-get-last-child-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_previousSibling_Proxy" ixmldom-node-get-previous-sibling-proxy :convention :stdcall) hresult  (|This| :pointer) (|previousSibling| :pointer))
(defcfun ("IXMLDOMNode_get_previousSibling_Stub" ixmldom-node-get-previous-sibling-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_nextSibling_Proxy" ixmldom-node-get-next-sibling-proxy :convention :stdcall) hresult  (|This| :pointer) (|nextSibling| :pointer))
(defcfun ("IXMLDOMNode_get_nextSibling_Stub" ixmldom-node-get-next-sibling-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_attributes_Proxy" ixmldom-node-get-attributes-proxy :convention :stdcall) hresult  (|This| :pointer) (|attributeMap| :pointer))
(defcfun ("IXMLDOMNode_get_attributes_Stub" ixmldom-node-get-attributes-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_insertBefore_Proxy" ixmldom-node-insert-before-proxy :convention :stdcall) hresult  (|This| :pointer) (|newChild| :pointer) (|refChild| variant) (|outNewChild| :pointer))
(defcfun ("IXMLDOMNode_insertBefore_Stub" ixmldom-node-insert-before-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_replaceChild_Proxy" ixmldom-node-replace-child-proxy :convention :stdcall) hresult  (|This| :pointer) (|newChild| :pointer) (|oldChild| :pointer) (|outOldChild| :pointer))
(defcfun ("IXMLDOMNode_replaceChild_Stub" ixmldom-node-replace-child-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_removeChild_Proxy" ixmldom-node-remove-child-proxy :convention :stdcall) hresult  (|This| :pointer) (|childNode| :pointer) (|oldChild| :pointer))
(defcfun ("IXMLDOMNode_removeChild_Stub" ixmldom-node-remove-child-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_appendChild_Proxy" ixmldom-node-append-child-proxy :convention :stdcall) hresult  (|This| :pointer) (|newChild| :pointer) (|outNewChild| :pointer))
(defcfun ("IXMLDOMNode_appendChild_Stub" ixmldom-node-append-child-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_hasChildNodes_Proxy" ixmldom-node-has-child-nodes-proxy :convention :stdcall) hresult  (|This| :pointer) (|hasChild| :pointer))
(defcfun ("IXMLDOMNode_hasChildNodes_Stub" ixmldom-node-has-child-nodes-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_ownerDocument_Proxy" ixmldom-node-get-owner-document-proxy :convention :stdcall) hresult  (|This| :pointer) (|DOMDocument| :pointer))
(defcfun ("IXMLDOMNode_get_ownerDocument_Stub" ixmldom-node-get-owner-document-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_cloneNode_Proxy" ixmldom-node-clone-node-proxy :convention :stdcall) hresult  (|This| :pointer) (|deep| variant_bool) (|cloneRoot| :pointer))
(defcfun ("IXMLDOMNode_cloneNode_Stub" ixmldom-node-clone-node-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_nodeTypeString_Proxy" ixmldom-node-get-node-type-string-proxy :convention :stdcall) hresult  (|This| :pointer) (|nodeType| :pointer))
(defcfun ("IXMLDOMNode_get_nodeTypeString_Stub" ixmldom-node-get-node-type-string-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_text_Proxy" ixmldom-node-get-text-proxy :convention :stdcall) hresult  (|This| :pointer) (|text| :pointer))
(defcfun ("IXMLDOMNode_get_text_Stub" ixmldom-node-get-text-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_put_text_Proxy" ixmldom-node-put-text-proxy :convention :stdcall) hresult  (|This| :pointer) (|text| bstr))
(defcfun ("IXMLDOMNode_put_text_Stub" ixmldom-node-put-text-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_specified_Proxy" ixmldom-node-get-specified-proxy :convention :stdcall) hresult  (|This| :pointer) (|isSpecified| :pointer))
(defcfun ("IXMLDOMNode_get_specified_Stub" ixmldom-node-get-specified-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_definition_Proxy" ixmldom-node-get-definition-proxy :convention :stdcall) hresult  (|This| :pointer) (|definitionNode| :pointer))
(defcfun ("IXMLDOMNode_get_definition_Stub" ixmldom-node-get-definition-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_nodeTypedValue_Proxy" ixmldom-node-get-node-typed-value-proxy :convention :stdcall) hresult  (|This| :pointer) (|typedValue| :pointer))
(defcfun ("IXMLDOMNode_get_nodeTypedValue_Stub" ixmldom-node-get-node-typed-value-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_put_nodeTypedValue_Proxy" ixmldom-node-put-node-typed-value-proxy :convention :stdcall) hresult  (|This| :pointer) (|typedValue| variant))
(defcfun ("IXMLDOMNode_put_nodeTypedValue_Stub" ixmldom-node-put-node-typed-value-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_dataType_Proxy" ixmldom-node-get-data-type-proxy :convention :stdcall) hresult  (|This| :pointer) (|dataTypeName| :pointer))
(defcfun ("IXMLDOMNode_get_dataType_Stub" ixmldom-node-get-data-type-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_put_dataType_Proxy" ixmldom-node-put-data-type-proxy :convention :stdcall) hresult  (|This| :pointer) (|dataTypeName| bstr))
(defcfun ("IXMLDOMNode_put_dataType_Stub" ixmldom-node-put-data-type-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_xml_Proxy" ixmldom-node-get-xml-proxy :convention :stdcall) hresult  (|This| :pointer) (|xmlString| :pointer))
(defcfun ("IXMLDOMNode_get_xml_Stub" ixmldom-node-get-xml-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_transformNode_Proxy" ixmldom-node-transform-node-proxy :convention :stdcall) hresult  (|This| :pointer) (|stylesheet| :pointer) (|xmlString| :pointer))
(defcfun ("IXMLDOMNode_transformNode_Stub" ixmldom-node-transform-node-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_selectNodes_Proxy" ixmldom-node-select-nodes-proxy :convention :stdcall) hresult  (|This| :pointer) (|queryString| bstr) (|resultList| :pointer))
(defcfun ("IXMLDOMNode_selectNodes_Stub" ixmldom-node-select-nodes-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_selectSingleNode_Proxy" ixmldom-node-select-single-node-proxy :convention :stdcall) hresult  (|This| :pointer) (|queryString| bstr) (|resultNode| :pointer))
(defcfun ("IXMLDOMNode_selectSingleNode_Stub" ixmldom-node-select-single-node-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_parsed_Proxy" ixmldom-node-get-parsed-proxy :convention :stdcall) hresult  (|This| :pointer) (|isParsed| :pointer))
(defcfun ("IXMLDOMNode_get_parsed_Stub" ixmldom-node-get-parsed-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_namespaceURI_Proxy" ixmldom-node-get-namespace-uri-proxy :convention :stdcall) hresult  (|This| :pointer) (|namespaceURI| :pointer))
(defcfun ("IXMLDOMNode_get_namespaceURI_Stub" ixmldom-node-get-namespace-uri-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_prefix_Proxy" ixmldom-node-get-prefix-proxy :convention :stdcall) hresult  (|This| :pointer) (|prefixString| :pointer))
(defcfun ("IXMLDOMNode_get_prefix_Stub" ixmldom-node-get-prefix-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_get_baseName_Proxy" ixmldom-node-get-base-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|nameString| :pointer))
(defcfun ("IXMLDOMNode_get_baseName_Stub" ixmldom-node-get-base-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNode_transformNodeToObject_Proxy" ixmldom-node-transform-node-to-object-proxy :convention :stdcall) hresult  (|This| :pointer) (|stylesheet| :pointer) (|outputObject| variant))
(defcfun ("IXMLDOMNode_transformNodeToObject_Stub" ixmldom-node-transform-node-to-object-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_get_doctype_Proxy" ixmldom-document-get-doctype-proxy :convention :stdcall) hresult  (|This| :pointer) (|documentType| :pointer))
(defcfun ("IXMLDOMDocument_get_doctype_Stub" ixmldom-document-get-doctype-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_get_implementation_Proxy" ixmldom-document-get-implementation-proxy :convention :stdcall) hresult  (|This| :pointer) (|impl| :pointer))
(defcfun ("IXMLDOMDocument_get_implementation_Stub" ixmldom-document-get-implementation-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_get_documentElement_Proxy" ixmldom-document-get-document-element-proxy :convention :stdcall) hresult  (|This| :pointer) (|DOMElement| :pointer))
(defcfun ("IXMLDOMDocument_get_documentElement_Stub" ixmldom-document-get-document-element-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_putref_documentElement_Proxy" ixmldom-document-putref-document-element-proxy :convention :stdcall) hresult  (|This| :pointer) (|DOMElement| :pointer))
(defcfun ("IXMLDOMDocument_putref_documentElement_Stub" ixmldom-document-putref-document-element-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_createElement_Proxy" ixmldom-document-create-element-proxy :convention :stdcall) hresult  (|This| :pointer) (|tagName| bstr) (|element| :pointer))
(defcfun ("IXMLDOMDocument_createElement_Stub" ixmldom-document-create-element-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_createDocumentFragment_Proxy" ixmldom-document-create-document-fragment-proxy :convention :stdcall) hresult  (|This| :pointer) (|docFrag| :pointer))
(defcfun ("IXMLDOMDocument_createDocumentFragment_Stub" ixmldom-document-create-document-fragment-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_createTextNode_Proxy" ixmldom-document-create-text-node-proxy :convention :stdcall) hresult  (|This| :pointer) (|data| bstr) (|text| :pointer))
(defcfun ("IXMLDOMDocument_createTextNode_Stub" ixmldom-document-create-text-node-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_createComment_Proxy" ixmldom-document-create-comment-proxy :convention :stdcall) hresult  (|This| :pointer) (|data| bstr) (|comment| :pointer))
(defcfun ("IXMLDOMDocument_createComment_Stub" ixmldom-document-create-comment-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_createCDATASection_Proxy" ixmldom-document-create-cdata-section-proxy :convention :stdcall) hresult  (|This| :pointer) (|data| bstr) (|cdata| :pointer))
(defcfun ("IXMLDOMDocument_createCDATASection_Stub" ixmldom-document-create-cdata-section-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_createProcessingInstruction_Proxy" ixmldom-document-create-processing-instruction-proxy :convention :stdcall) hresult  (|This| :pointer) (|target| bstr) (|data| bstr) (|pi| :pointer))
(defcfun ("IXMLDOMDocument_createProcessingInstruction_Stub" ixmldom-document-create-processing-instruction-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_createAttribute_Proxy" ixmldom-document-create-attribute-proxy :convention :stdcall) hresult  (|This| :pointer) (|name| bstr) (|attribute| :pointer))
(defcfun ("IXMLDOMDocument_createAttribute_Stub" ixmldom-document-create-attribute-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_createEntityReference_Proxy" ixmldom-document-create-entity-reference-proxy :convention :stdcall) hresult  (|This| :pointer) (|name| bstr) (|entityRef| :pointer))
(defcfun ("IXMLDOMDocument_createEntityReference_Stub" ixmldom-document-create-entity-reference-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_getElementsByTagName_Proxy" ixmldom-document-get-elements-by-tag-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|tagName| bstr) (|resultList| :pointer))
(defcfun ("IXMLDOMDocument_getElementsByTagName_Stub" ixmldom-document-get-elements-by-tag-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_createNode_Proxy" ixmldom-document-create-node-proxy :convention :stdcall) hresult  (|This| :pointer) (|Type| variant) (|name| bstr) (|namespaceURI| bstr) (|node| :pointer))
(defcfun ("IXMLDOMDocument_createNode_Stub" ixmldom-document-create-node-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_nodeFromID_Proxy" ixmldom-document-node-from-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|idString| bstr) (|node| :pointer))
(defcfun ("IXMLDOMDocument_nodeFromID_Stub" ixmldom-document-node-from-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_load_Proxy" ixmldom-document-load-proxy :convention :stdcall) hresult  (|This| :pointer) (|xmlSource| variant) (|isSuccessful| :pointer))
(defcfun ("IXMLDOMDocument_load_Stub" ixmldom-document-load-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_get_readyState_Proxy" ixmldom-document-get-ready-state-proxy :convention :stdcall) hresult  (|This| :pointer) (|value| :pointer))
(defcfun ("IXMLDOMDocument_get_readyState_Stub" ixmldom-document-get-ready-state-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_get_parseError_Proxy" ixmldom-document-get-parse-error-proxy :convention :stdcall) hresult  (|This| :pointer) (|errorObj| :pointer))
(defcfun ("IXMLDOMDocument_get_parseError_Stub" ixmldom-document-get-parse-error-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_get_url_Proxy" ixmldom-document-get-url-proxy :convention :stdcall) hresult  (|This| :pointer) (|urlString| :pointer))
(defcfun ("IXMLDOMDocument_get_url_Stub" ixmldom-document-get-url-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_get_async_Proxy" ixmldom-document-get-async-proxy :convention :stdcall) hresult  (|This| :pointer) (|isAsync| :pointer))
(defcfun ("IXMLDOMDocument_get_async_Stub" ixmldom-document-get-async-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_put_async_Proxy" ixmldom-document-put-async-proxy :convention :stdcall) hresult  (|This| :pointer) (|isAsync| variant_bool))
(defcfun ("IXMLDOMDocument_put_async_Stub" ixmldom-document-put-async-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_abort_Proxy" ixmldom-document-abort-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IXMLDOMDocument_abort_Stub" ixmldom-document-abort-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_loadXML_Proxy" ixmldom-document-load-xml-proxy :convention :stdcall) hresult  (|This| :pointer) (|bstrXML| bstr) (|isSuccessful| :pointer))
(defcfun ("IXMLDOMDocument_loadXML_Stub" ixmldom-document-load-xml-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_save_Proxy" ixmldom-document-save-proxy :convention :stdcall) hresult  (|This| :pointer) (|destination| variant))
(defcfun ("IXMLDOMDocument_save_Stub" ixmldom-document-save-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_get_validateOnParse_Proxy" ixmldom-document-get-validate-on-parse-proxy :convention :stdcall) hresult  (|This| :pointer) (|isValidating| :pointer))
(defcfun ("IXMLDOMDocument_get_validateOnParse_Stub" ixmldom-document-get-validate-on-parse-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_put_validateOnParse_Proxy" ixmldom-document-put-validate-on-parse-proxy :convention :stdcall) hresult  (|This| :pointer) (|isValidating| variant_bool))
(defcfun ("IXMLDOMDocument_put_validateOnParse_Stub" ixmldom-document-put-validate-on-parse-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_get_resolveExternals_Proxy" ixmldom-document-get-resolve-externals-proxy :convention :stdcall) hresult  (|This| :pointer) (|isResolving| :pointer))
(defcfun ("IXMLDOMDocument_get_resolveExternals_Stub" ixmldom-document-get-resolve-externals-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_put_resolveExternals_Proxy" ixmldom-document-put-resolve-externals-proxy :convention :stdcall) hresult  (|This| :pointer) (|isResolving| variant_bool))
(defcfun ("IXMLDOMDocument_put_resolveExternals_Stub" ixmldom-document-put-resolve-externals-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_get_preserveWhiteSpace_Proxy" ixmldom-document-get-preserve-white-space-proxy :convention :stdcall) hresult  (|This| :pointer) (|isPreserving| :pointer))
(defcfun ("IXMLDOMDocument_get_preserveWhiteSpace_Stub" ixmldom-document-get-preserve-white-space-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_put_preserveWhiteSpace_Proxy" ixmldom-document-put-preserve-white-space-proxy :convention :stdcall) hresult  (|This| :pointer) (|isPreserving| variant_bool))
(defcfun ("IXMLDOMDocument_put_preserveWhiteSpace_Stub" ixmldom-document-put-preserve-white-space-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_put_onreadystatechange_Proxy" ixmldom-document-put-onreadystatechange-proxy :convention :stdcall) hresult  (|This| :pointer) (|readystatechangeSink| variant))
(defcfun ("IXMLDOMDocument_put_onreadystatechange_Stub" ixmldom-document-put-onreadystatechange-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_put_ondataavailable_Proxy" ixmldom-document-put-ondataavailable-proxy :convention :stdcall) hresult  (|This| :pointer) (|ondataavailableSink| variant))
(defcfun ("IXMLDOMDocument_put_ondataavailable_Stub" ixmldom-document-put-ondataavailable-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocument_put_ontransformnode_Proxy" ixmldom-document-put-ontransformnode-proxy :convention :stdcall) hresult  (|This| :pointer) (|ontransformnodeSink| variant))
(defcfun ("IXMLDOMDocument_put_ontransformnode_Stub" ixmldom-document-put-ontransformnode-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNodeList_get_item_Proxy" ixmldom-node-list-get-item-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| :long) (|listItem| :pointer))
(defcfun ("IXMLDOMNodeList_get_item_Stub" ixmldom-node-list-get-item-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNodeList_get_length_Proxy" ixmldom-node-list-get-length-proxy :convention :stdcall) hresult  (|This| :pointer) (|listLength| :pointer))
(defcfun ("IXMLDOMNodeList_get_length_Stub" ixmldom-node-list-get-length-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNodeList_nextNode_Proxy" ixmldom-node-list-next-node-proxy :convention :stdcall) hresult  (|This| :pointer) (|nextItem| :pointer))
(defcfun ("IXMLDOMNodeList_nextNode_Stub" ixmldom-node-list-next-node-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNodeList_reset_Proxy" ixmldom-node-list-reset-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IXMLDOMNodeList_reset_Stub" ixmldom-node-list-reset-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNodeList_get__newEnum_Proxy" ixmldom-node-list-get-new-enum-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppUnk| :pointer))
(defcfun ("IXMLDOMNodeList_get__newEnum_Stub" ixmldom-node-list-get-new-enum-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_getNamedItem_Proxy" ixmldom-named-node-map-get-named-item-proxy :convention :stdcall) hresult  (|This| :pointer) (|name| bstr) (|namedItem| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_getNamedItem_Stub" ixmldom-named-node-map-get-named-item-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_setNamedItem_Proxy" ixmldom-named-node-map-set-named-item-proxy :convention :stdcall) hresult  (|This| :pointer) (|newItem| :pointer) (|nameItem| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_setNamedItem_Stub" ixmldom-named-node-map-set-named-item-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_removeNamedItem_Proxy" ixmldom-named-node-map-remove-named-item-proxy :convention :stdcall) hresult  (|This| :pointer) (|name| bstr) (|namedItem| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_removeNamedItem_Stub" ixmldom-named-node-map-remove-named-item-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_get_item_Proxy" ixmldom-named-node-map-get-item-proxy :convention :stdcall) hresult  (|This| :pointer) (|index| :long) (|listItem| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_get_item_Stub" ixmldom-named-node-map-get-item-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_get_length_Proxy" ixmldom-named-node-map-get-length-proxy :convention :stdcall) hresult  (|This| :pointer) (|listLength| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_get_length_Stub" ixmldom-named-node-map-get-length-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_getQualifiedItem_Proxy" ixmldom-named-node-map-get-qualified-item-proxy :convention :stdcall) hresult  (|This| :pointer) (|baseName| bstr) (|namespaceURI| bstr) (|qualifiedItem| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_getQualifiedItem_Stub" ixmldom-named-node-map-get-qualified-item-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_removeQualifiedItem_Proxy" ixmldom-named-node-map-remove-qualified-item-proxy :convention :stdcall) hresult  (|This| :pointer) (|baseName| bstr) (|namespaceURI| bstr) (|qualifiedItem| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_removeQualifiedItem_Stub" ixmldom-named-node-map-remove-qualified-item-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_nextNode_Proxy" ixmldom-named-node-map-next-node-proxy :convention :stdcall) hresult  (|This| :pointer) (|nextItem| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_nextNode_Stub" ixmldom-named-node-map-next-node-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_reset_Proxy" ixmldom-named-node-map-reset-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_reset_Stub" ixmldom-named-node-map-reset-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_get__newEnum_Proxy" ixmldom-named-node-map-get-new-enum-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppUnk| :pointer))
(defcfun ("IXMLDOMNamedNodeMap_get__newEnum_Stub" ixmldom-named-node-map-get-new-enum-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMCharacterData_get_data_Proxy" ixmldom-character-data-get-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|data| :pointer))
(defcfun ("IXMLDOMCharacterData_get_data_Stub" ixmldom-character-data-get-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMCharacterData_put_data_Proxy" ixmldom-character-data-put-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|data| bstr))
(defcfun ("IXMLDOMCharacterData_put_data_Stub" ixmldom-character-data-put-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMCharacterData_get_length_Proxy" ixmldom-character-data-get-length-proxy :convention :stdcall) hresult  (|This| :pointer) (|dataLength| :pointer))
(defcfun ("IXMLDOMCharacterData_get_length_Stub" ixmldom-character-data-get-length-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMCharacterData_substringData_Proxy" ixmldom-character-data-substring-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|offset| :long) (|count| :long) (|data| :pointer))
(defcfun ("IXMLDOMCharacterData_substringData_Stub" ixmldom-character-data-substring-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMCharacterData_appendData_Proxy" ixmldom-character-data-append-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|data| bstr))
(defcfun ("IXMLDOMCharacterData_appendData_Stub" ixmldom-character-data-append-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMCharacterData_insertData_Proxy" ixmldom-character-data-insert-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|offset| :long) (|data| bstr))
(defcfun ("IXMLDOMCharacterData_insertData_Stub" ixmldom-character-data-insert-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMCharacterData_deleteData_Proxy" ixmldom-character-data-delete-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|offset| :long) (|count| :long))
(defcfun ("IXMLDOMCharacterData_deleteData_Stub" ixmldom-character-data-delete-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMCharacterData_replaceData_Proxy" ixmldom-character-data-replace-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|offset| :long) (|count| :long) (|data| bstr))
(defcfun ("IXMLDOMCharacterData_replaceData_Stub" ixmldom-character-data-replace-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMAttribute_get_name_Proxy" ixmldom-attribute-get-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|attributeName| :pointer))
(defcfun ("IXMLDOMAttribute_get_name_Stub" ixmldom-attribute-get-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMAttribute_get_value_Proxy" ixmldom-attribute-get-value-proxy :convention :stdcall) hresult  (|This| :pointer) (|attributeValue| :pointer))
(defcfun ("IXMLDOMAttribute_get_value_Stub" ixmldom-attribute-get-value-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMAttribute_put_value_Proxy" ixmldom-attribute-put-value-proxy :convention :stdcall) hresult  (|This| :pointer) (|attributeValue| variant))
(defcfun ("IXMLDOMAttribute_put_value_Stub" ixmldom-attribute-put-value-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMElement_get_tagName_Proxy" ixmldom-element-get-tag-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|tagName| :pointer))
(defcfun ("IXMLDOMElement_get_tagName_Stub" ixmldom-element-get-tag-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMElement_getAttribute_Proxy" ixmldom-element-get-attribute-proxy :convention :stdcall) hresult  (|This| :pointer) (|name| bstr) (|value| :pointer))
(defcfun ("IXMLDOMElement_getAttribute_Stub" ixmldom-element-get-attribute-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMElement_setAttribute_Proxy" ixmldom-element-set-attribute-proxy :convention :stdcall) hresult  (|This| :pointer) (|name| bstr) (|value| variant))
(defcfun ("IXMLDOMElement_setAttribute_Stub" ixmldom-element-set-attribute-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMElement_removeAttribute_Proxy" ixmldom-element-remove-attribute-proxy :convention :stdcall) hresult  (|This| :pointer) (|name| bstr))
(defcfun ("IXMLDOMElement_removeAttribute_Stub" ixmldom-element-remove-attribute-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMElement_getAttributeNode_Proxy" ixmldom-element-get-attribute-node-proxy :convention :stdcall) hresult  (|This| :pointer) (|name| bstr) (|attributeNode| :pointer))
(defcfun ("IXMLDOMElement_getAttributeNode_Stub" ixmldom-element-get-attribute-node-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMElement_setAttributeNode_Proxy" ixmldom-element-set-attribute-node-proxy :convention :stdcall) hresult  (|This| :pointer) (|DOMAttribute| :pointer) (|attributeNode| :pointer))
(defcfun ("IXMLDOMElement_setAttributeNode_Stub" ixmldom-element-set-attribute-node-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMElement_removeAttributeNode_Proxy" ixmldom-element-remove-attribute-node-proxy :convention :stdcall) hresult  (|This| :pointer) (|DOMAttribute| :pointer) (|attributeNode| :pointer))
(defcfun ("IXMLDOMElement_removeAttributeNode_Stub" ixmldom-element-remove-attribute-node-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMElement_getElementsByTagName_Proxy" ixmldom-element-get-elements-by-tag-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|tagName| bstr) (|resultList| :pointer))
(defcfun ("IXMLDOMElement_getElementsByTagName_Stub" ixmldom-element-get-elements-by-tag-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMElement_normalize_Proxy" ixmldom-element-normalize-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IXMLDOMElement_normalize_Stub" ixmldom-element-normalize-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMText_splitText_Proxy" ixmldom-text-split-text-proxy :convention :stdcall) hresult  (|This| :pointer) (|offset| :long) (|rightHandTextNode| :pointer))
(defcfun ("IXMLDOMText_splitText_Stub" ixmldom-text-split-text-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMProcessingInstruction_get_target_Proxy" ixmldom-processing-instruction-get-target-proxy :convention :stdcall) hresult  (|This| :pointer) (|name| :pointer))
(defcfun ("IXMLDOMProcessingInstruction_get_target_Stub" ixmldom-processing-instruction-get-target-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMProcessingInstruction_get_data_Proxy" ixmldom-processing-instruction-get-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|value| :pointer))
(defcfun ("IXMLDOMProcessingInstruction_get_data_Stub" ixmldom-processing-instruction-get-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMProcessingInstruction_put_data_Proxy" ixmldom-processing-instruction-put-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|value| bstr))
(defcfun ("IXMLDOMProcessingInstruction_put_data_Stub" ixmldom-processing-instruction-put-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocumentType_get_name_Proxy" ixmldom-document-type-get-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|rootName| :pointer))
(defcfun ("IXMLDOMDocumentType_get_name_Stub" ixmldom-document-type-get-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocumentType_get_entities_Proxy" ixmldom-document-type-get-entities-proxy :convention :stdcall) hresult  (|This| :pointer) (|entityMap| :pointer))
(defcfun ("IXMLDOMDocumentType_get_entities_Stub" ixmldom-document-type-get-entities-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMDocumentType_get_notations_Proxy" ixmldom-document-type-get-notations-proxy :convention :stdcall) hresult  (|This| :pointer) (|notationMap| :pointer))
(defcfun ("IXMLDOMDocumentType_get_notations_Stub" ixmldom-document-type-get-notations-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNotation_get_publicId_Proxy" ixmldom-notation-get-public-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|publicID| :pointer))
(defcfun ("IXMLDOMNotation_get_publicId_Stub" ixmldom-notation-get-public-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMNotation_get_systemId_Proxy" ixmldom-notation-get-system-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|systemID| :pointer))
(defcfun ("IXMLDOMNotation_get_systemId_Stub" ixmldom-notation-get-system-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMEntity_get_publicId_Proxy" ixmldom-entity-get-public-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|publicID| :pointer))
(defcfun ("IXMLDOMEntity_get_publicId_Stub" ixmldom-entity-get-public-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMEntity_get_systemId_Proxy" ixmldom-entity-get-system-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|systemID| :pointer))
(defcfun ("IXMLDOMEntity_get_systemId_Stub" ixmldom-entity-get-system-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMEntity_get_notationName_Proxy" ixmldom-entity-get-notation-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|name| :pointer))
(defcfun ("IXMLDOMEntity_get_notationName_Stub" ixmldom-entity-get-notation-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMParseError_get_errorCode_Proxy" ixmldom-parse-error-get-error-code-proxy :convention :stdcall) hresult  (|This| :pointer) (|errorCode| :pointer))
(defcfun ("IXMLDOMParseError_get_errorCode_Stub" ixmldom-parse-error-get-error-code-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMParseError_get_url_Proxy" ixmldom-parse-error-get-url-proxy :convention :stdcall) hresult  (|This| :pointer) (|urlString| :pointer))
(defcfun ("IXMLDOMParseError_get_url_Stub" ixmldom-parse-error-get-url-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMParseError_get_reason_Proxy" ixmldom-parse-error-get-reason-proxy :convention :stdcall) hresult  (|This| :pointer) (|reasonString| :pointer))
(defcfun ("IXMLDOMParseError_get_reason_Stub" ixmldom-parse-error-get-reason-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMParseError_get_srcText_Proxy" ixmldom-parse-error-get-src-text-proxy :convention :stdcall) hresult  (|This| :pointer) (|sourceString| :pointer))
(defcfun ("IXMLDOMParseError_get_srcText_Stub" ixmldom-parse-error-get-src-text-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMParseError_get_line_Proxy" ixmldom-parse-error-get-line-proxy :convention :stdcall) hresult  (|This| :pointer) (|lineNumber| :pointer))
(defcfun ("IXMLDOMParseError_get_line_Stub" ixmldom-parse-error-get-line-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMParseError_get_linepos_Proxy" ixmldom-parse-error-get-linepos-proxy :convention :stdcall) hresult  (|This| :pointer) (|linePosition| :pointer))
(defcfun ("IXMLDOMParseError_get_linepos_Stub" ixmldom-parse-error-get-linepos-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDOMParseError_get_filepos_Proxy" ixmldom-parse-error-get-filepos-proxy :convention :stdcall) hresult  (|This| :pointer) (|filePosition| :pointer))
(defcfun ("IXMLDOMParseError_get_filepos_Stub" ixmldom-parse-error-get-filepos-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXTLRuntime_uniqueID_Proxy" ixtl-runtime-unique-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|pNode| :pointer) (|pID| :pointer))
(defcfun ("IXTLRuntime_uniqueID_Stub" ixtl-runtime-unique-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXTLRuntime_depth_Proxy" ixtl-runtime-depth-proxy :convention :stdcall) hresult  (|This| :pointer) (|pNode| :pointer) (|pDepth| :pointer))
(defcfun ("IXTLRuntime_depth_Stub" ixtl-runtime-depth-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXTLRuntime_childNumber_Proxy" ixtl-runtime-child-number-proxy :convention :stdcall) hresult  (|This| :pointer) (|pNode| :pointer) (|pNumber| :pointer))
(defcfun ("IXTLRuntime_childNumber_Stub" ixtl-runtime-child-number-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXTLRuntime_ancestorChildNumber_Proxy" ixtl-runtime-ancestor-child-number-proxy :convention :stdcall) hresult  (|This| :pointer) (|bstrNodeName| bstr) (|pNode| :pointer) (|pNumber| :pointer))
(defcfun ("IXTLRuntime_ancestorChildNumber_Stub" ixtl-runtime-ancestor-child-number-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXTLRuntime_absoluteChildNumber_Proxy" ixtl-runtime-absolute-child-number-proxy :convention :stdcall) hresult  (|This| :pointer) (|pNode| :pointer) (|pNumber| :pointer))
(defcfun ("IXTLRuntime_absoluteChildNumber_Stub" ixtl-runtime-absolute-child-number-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXTLRuntime_formatIndex_Proxy" ixtl-runtime-format-index-proxy :convention :stdcall) hresult  (|This| :pointer) (|lIndex| :long) (|bstrFormat| bstr) (|pbstrFormattedString| :pointer))
(defcfun ("IXTLRuntime_formatIndex_Stub" ixtl-runtime-format-index-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXTLRuntime_formatNumber_Proxy" ixtl-runtime-format-number-proxy :convention :stdcall) hresult  (|This| :pointer) (|dblNumber| :double) (|bstrFormat| bstr) (|pbstrFormattedString| :pointer))
(defcfun ("IXTLRuntime_formatNumber_Stub" ixtl-runtime-format-number-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXTLRuntime_formatDate_Proxy" ixtl-runtime-format-date-proxy :convention :stdcall) hresult  (|This| :pointer) (|varDate| variant) (|bstrFormat| bstr) (|varDestLocale| variant) (|pbstrFormattedString| :pointer))
(defcfun ("IXTLRuntime_formatDate_Stub" ixtl-runtime-format-date-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXTLRuntime_formatTime_Proxy" ixtl-runtime-format-time-proxy :convention :stdcall) hresult  (|This| :pointer) (|varTime| variant) (|bstrFormat| bstr) (|varDestLocale| variant) (|pbstrFormattedString| :pointer))
(defcfun ("IXTLRuntime_formatTime_Stub" ixtl-runtime-format-time-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLHttpRequest_open_Proxy" ixml-http-request-open-proxy :convention :stdcall) hresult  (|This| :pointer) (|bstrMethod| bstr) (|bstrUrl| bstr) (|varAsync| variant) (|bstrUser| variant) (|bstrPassword| variant))
(defcfun ("IXMLHttpRequest_open_Stub" ixml-http-request-open-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLHttpRequest_setRequestHeader_Proxy" ixml-http-request-set-request-header-proxy :convention :stdcall) hresult  (|This| :pointer) (|bstrHeader| bstr) (|bstrValue| bstr))
(defcfun ("IXMLHttpRequest_setRequestHeader_Stub" ixml-http-request-set-request-header-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLHttpRequest_getResponseHeader_Proxy" ixml-http-request-get-response-header-proxy :convention :stdcall) hresult  (|This| :pointer) (|bstrHeader| bstr) (|pbstrValue| :pointer))
(defcfun ("IXMLHttpRequest_getResponseHeader_Stub" ixml-http-request-get-response-header-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLHttpRequest_getAllResponseHeaders_Proxy" ixml-http-request-get-all-response-headers-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbstrHeaders| :pointer))
(defcfun ("IXMLHttpRequest_getAllResponseHeaders_Stub" ixml-http-request-get-all-response-headers-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLHttpRequest_send_Proxy" ixml-http-request-send-proxy :convention :stdcall) hresult  (|This| :pointer) (|varBody| variant))
(defcfun ("IXMLHttpRequest_send_Stub" ixml-http-request-send-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLHttpRequest_abort_Proxy" ixml-http-request-abort-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IXMLHttpRequest_abort_Stub" ixml-http-request-abort-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLHttpRequest_get_status_Proxy" ixml-http-request-get-status-proxy :convention :stdcall) hresult  (|This| :pointer) (|plStatus| :pointer))
(defcfun ("IXMLHttpRequest_get_status_Stub" ixml-http-request-get-status-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLHttpRequest_get_statusText_Proxy" ixml-http-request-get-status-text-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbstrStatus| :pointer))
(defcfun ("IXMLHttpRequest_get_statusText_Stub" ixml-http-request-get-status-text-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLHttpRequest_get_responseXML_Proxy" ixml-http-request-get-response-xml-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppBody| :pointer))
(defcfun ("IXMLHttpRequest_get_responseXML_Stub" ixml-http-request-get-response-xml-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLHttpRequest_get_responseText_Proxy" ixml-http-request-get-response-text-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbstrBody| :pointer))
(defcfun ("IXMLHttpRequest_get_responseText_Stub" ixml-http-request-get-response-text-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLHttpRequest_get_responseBody_Proxy" ixml-http-request-get-response-body-proxy :convention :stdcall) hresult  (|This| :pointer) (|pvarBody| :pointer))
(defcfun ("IXMLHttpRequest_get_responseBody_Stub" ixml-http-request-get-response-body-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLHttpRequest_get_responseStream_Proxy" ixml-http-request-get-response-stream-proxy :convention :stdcall) hresult  (|This| :pointer) (|pvarBody| :pointer))
(defcfun ("IXMLHttpRequest_get_responseStream_Stub" ixml-http-request-get-response-stream-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLHttpRequest_get_readyState_Proxy" ixml-http-request-get-ready-state-proxy :convention :stdcall) hresult  (|This| :pointer) (|plState| :pointer))
(defcfun ("IXMLHttpRequest_get_readyState_Stub" ixml-http-request-get-ready-state-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLHttpRequest_put_onreadystatechange_Proxy" ixml-http-request-put-onreadystatechange-proxy :convention :stdcall) hresult  (|This| :pointer) (|pReadyStateSink| :pointer))
(defcfun ("IXMLHttpRequest_put_onreadystatechange_Stub" ixml-http-request-put-onreadystatechange-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDSOControl_get_XMLDocument_Proxy" ixmldso-control-get-xml-document-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppDoc| :pointer))
(defcfun ("IXMLDSOControl_get_XMLDocument_Stub" ixmldso-control-get-xml-document-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDSOControl_put_XMLDocument_Proxy" ixmldso-control-put-xml-document-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppDoc| :pointer))
(defcfun ("IXMLDSOControl_put_XMLDocument_Stub" ixmldso-control-put-xml-document-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDSOControl_get_JavaDSOCompatible_Proxy" ixmldso-control-get-java-dso-compatible-proxy :convention :stdcall) hresult  (|This| :pointer) (|fJavaDSOCompatible| :pointer))
(defcfun ("IXMLDSOControl_get_JavaDSOCompatible_Stub" ixmldso-control-get-java-dso-compatible-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDSOControl_put_JavaDSOCompatible_Proxy" ixmldso-control-put-java-dso-compatible-proxy :convention :stdcall) hresult  (|This| :pointer) (|fJavaDSOCompatible| winbool))
(defcfun ("IXMLDSOControl_put_JavaDSOCompatible_Stub" ixmldso-control-put-java-dso-compatible-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDSOControl_get_readyState_Proxy" ixmldso-control-get-ready-state-proxy :convention :stdcall) hresult  (|This| :pointer) (|state| :pointer))
(defcfun ("IXMLDSOControl_get_readyState_Stub" ixmldso-control-get-ready-state-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElementCollection_put_length_Proxy" ixml-element-collection-put-length-proxy :convention :stdcall) hresult  (|This| :pointer) (|v| :long))
(defcfun ("IXMLElementCollection_put_length_Stub" ixml-element-collection-put-length-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElementCollection_get_length_Proxy" ixml-element-collection-get-length-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLElementCollection_get_length_Stub" ixml-element-collection-get-length-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElementCollection_get__newEnum_Proxy" ixml-element-collection-get-new-enum-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppUnk| :pointer))
(defcfun ("IXMLElementCollection_get__newEnum_Stub" ixml-element-collection-get-new-enum-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElementCollection_item_Proxy" ixml-element-collection-item-proxy :convention :stdcall) hresult  (|This| :pointer) (|var1| variant) (|var2| variant) (|ppDisp| :pointer))
(defcfun ("IXMLElementCollection_item_Stub" ixml-element-collection-item-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument_get_root_Proxy" ixml-document-get-root-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument_get_root_Stub" ixml-document-get-root-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument_get_fileSize_Proxy" ixml-document-get-file-size-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument_get_fileSize_Stub" ixml-document-get-file-size-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument_get_fileModifiedDate_Proxy" ixml-document-get-file-modified-date-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument_get_fileModifiedDate_Stub" ixml-document-get-file-modified-date-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument_get_fileUpdatedDate_Proxy" ixml-document-get-file-updated-date-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument_get_fileUpdatedDate_Stub" ixml-document-get-file-updated-date-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument_get_URL_Proxy" ixml-document-get-url-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument_get_URL_Stub" ixml-document-get-url-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument_put_URL_Proxy" ixml-document-put-url-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| bstr))
(defcfun ("IXMLDocument_put_URL_Stub" ixml-document-put-url-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument_get_mimeType_Proxy" ixml-document-get-mime-type-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument_get_mimeType_Stub" ixml-document-get-mime-type-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument_get_readyState_Proxy" ixml-document-get-ready-state-proxy :convention :stdcall) hresult  (|This| :pointer) (|pl| :pointer))
(defcfun ("IXMLDocument_get_readyState_Stub" ixml-document-get-ready-state-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument_get_charset_Proxy" ixml-document-get-charset-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument_get_charset_Stub" ixml-document-get-charset-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument_put_charset_Proxy" ixml-document-put-charset-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| bstr))
(defcfun ("IXMLDocument_put_charset_Stub" ixml-document-put-charset-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument_get_version_Proxy" ixml-document-get-version-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument_get_version_Stub" ixml-document-get-version-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument_get_doctype_Proxy" ixml-document-get-doctype-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument_get_doctype_Stub" ixml-document-get-doctype-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument_get_dtdURL_Proxy" ixml-document-get-dtd-url-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument_get_dtdURL_Stub" ixml-document-get-dtd-url-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument_createElement_Proxy" ixml-document-create-element-proxy :convention :stdcall) hresult  (|This| :pointer) (|vType| variant) (|var1| variant) (|ppElem| :pointer))
(defcfun ("IXMLDocument_createElement_Stub" ixml-document-create-element-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument2_get_root_Proxy" ixml-document-2-get-root-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument2_get_root_Stub" ixml-document-2-get-root-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument2_get_fileSize_Proxy" ixml-document-2-get-file-size-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument2_get_fileSize_Stub" ixml-document-2-get-file-size-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument2_get_fileModifiedDate_Proxy" ixml-document-2-get-file-modified-date-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument2_get_fileModifiedDate_Stub" ixml-document-2-get-file-modified-date-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument2_get_fileUpdatedDate_Proxy" ixml-document-2-get-file-updated-date-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument2_get_fileUpdatedDate_Stub" ixml-document-2-get-file-updated-date-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument2_get_URL_Proxy" ixml-document-2-get-url-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument2_get_URL_Stub" ixml-document-2-get-url-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument2_put_URL_Proxy" ixml-document-2-put-url-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| bstr))
(defcfun ("IXMLDocument2_put_URL_Stub" ixml-document-2-put-url-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument2_get_mimeType_Proxy" ixml-document-2-get-mime-type-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument2_get_mimeType_Stub" ixml-document-2-get-mime-type-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument2_get_readyState_Proxy" ixml-document-2-get-ready-state-proxy :convention :stdcall) hresult  (|This| :pointer) (|pl| :pointer))
(defcfun ("IXMLDocument2_get_readyState_Stub" ixml-document-2-get-ready-state-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument2_get_charset_Proxy" ixml-document-2-get-charset-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument2_get_charset_Stub" ixml-document-2-get-charset-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument2_put_charset_Proxy" ixml-document-2-put-charset-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| bstr))
(defcfun ("IXMLDocument2_put_charset_Stub" ixml-document-2-put-charset-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument2_get_version_Proxy" ixml-document-2-get-version-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument2_get_version_Stub" ixml-document-2-get-version-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument2_get_doctype_Proxy" ixml-document-2-get-doctype-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument2_get_doctype_Stub" ixml-document-2-get-doctype-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument2_get_dtdURL_Proxy" ixml-document-2-get-dtd-url-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLDocument2_get_dtdURL_Stub" ixml-document-2-get-dtd-url-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument2_createElement_Proxy" ixml-document-2-create-element-proxy :convention :stdcall) hresult  (|This| :pointer) (|vType| variant) (|var1| variant) (|ppElem| :pointer))
(defcfun ("IXMLDocument2_createElement_Stub" ixml-document-2-create-element-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument2_get_async_Proxy" ixml-document-2-get-async-proxy :convention :stdcall) hresult  (|This| :pointer) (|pf| :pointer))
(defcfun ("IXMLDocument2_get_async_Stub" ixml-document-2-get-async-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLDocument2_put_async_Proxy" ixml-document-2-put-async-proxy :convention :stdcall) hresult  (|This| :pointer) (|f| variant_bool))
(defcfun ("IXMLDocument2_put_async_Stub" ixml-document-2-put-async-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement_get_tagName_Proxy" ixml-element-get-tag-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLElement_get_tagName_Stub" ixml-element-get-tag-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement_put_tagName_Proxy" ixml-element-put-tag-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| bstr))
(defcfun ("IXMLElement_put_tagName_Stub" ixml-element-put-tag-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement_get_parent_Proxy" ixml-element-get-parent-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppParent| :pointer))
(defcfun ("IXMLElement_get_parent_Stub" ixml-element-get-parent-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement_setAttribute_Proxy" ixml-element-set-attribute-proxy :convention :stdcall) hresult  (|This| :pointer) (|strPropertyName| bstr) (|PropertyValue| variant))
(defcfun ("IXMLElement_setAttribute_Stub" ixml-element-set-attribute-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement_getAttribute_Proxy" ixml-element-get-attribute-proxy :convention :stdcall) hresult  (|This| :pointer) (|strPropertyName| bstr) (|PropertyValue| :pointer))
(defcfun ("IXMLElement_getAttribute_Stub" ixml-element-get-attribute-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement_removeAttribute_Proxy" ixml-element-remove-attribute-proxy :convention :stdcall) hresult  (|This| :pointer) (|strPropertyName| bstr))
(defcfun ("IXMLElement_removeAttribute_Stub" ixml-element-remove-attribute-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement_get_children_Proxy" ixml-element-get-children-proxy :convention :stdcall) hresult  (|This| :pointer) (|pp| :pointer))
(defcfun ("IXMLElement_get_children_Stub" ixml-element-get-children-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement_get_type_Proxy" ixml-element-get-type-proxy :convention :stdcall) hresult  (|This| :pointer) (|plType| :pointer))
(defcfun ("IXMLElement_get_type_Stub" ixml-element-get-type-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement_get_text_Proxy" ixml-element-get-text-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLElement_get_text_Stub" ixml-element-get-text-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement_put_text_Proxy" ixml-element-put-text-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| bstr))
(defcfun ("IXMLElement_put_text_Stub" ixml-element-put-text-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement_addChild_Proxy" ixml-element-add-child-proxy :convention :stdcall) hresult  (|This| :pointer) (|pChildElem| :pointer) (|lIndex| :long) (|lReserved| :long))
(defcfun ("IXMLElement_addChild_Stub" ixml-element-add-child-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement_removeChild_Proxy" ixml-element-remove-child-proxy :convention :stdcall) hresult  (|This| :pointer) (|pChildElem| :pointer))
(defcfun ("IXMLElement_removeChild_Stub" ixml-element-remove-child-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement2_get_tagName_Proxy" ixml-element-2-get-tag-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLElement2_get_tagName_Stub" ixml-element-2-get-tag-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement2_put_tagName_Proxy" ixml-element-2-put-tag-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| bstr))
(defcfun ("IXMLElement2_put_tagName_Stub" ixml-element-2-put-tag-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement2_get_parent_Proxy" ixml-element-2-get-parent-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppParent| :pointer))
(defcfun ("IXMLElement2_get_parent_Stub" ixml-element-2-get-parent-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement2_setAttribute_Proxy" ixml-element-2-set-attribute-proxy :convention :stdcall) hresult  (|This| :pointer) (|strPropertyName| bstr) (|PropertyValue| variant))
(defcfun ("IXMLElement2_setAttribute_Stub" ixml-element-2-set-attribute-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement2_getAttribute_Proxy" ixml-element-2-get-attribute-proxy :convention :stdcall) hresult  (|This| :pointer) (|strPropertyName| bstr) (|PropertyValue| :pointer))
(defcfun ("IXMLElement2_getAttribute_Stub" ixml-element-2-get-attribute-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement2_removeAttribute_Proxy" ixml-element-2-remove-attribute-proxy :convention :stdcall) hresult  (|This| :pointer) (|strPropertyName| bstr))
(defcfun ("IXMLElement2_removeAttribute_Stub" ixml-element-2-remove-attribute-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement2_get_children_Proxy" ixml-element-2-get-children-proxy :convention :stdcall) hresult  (|This| :pointer) (|pp| :pointer))
(defcfun ("IXMLElement2_get_children_Stub" ixml-element-2-get-children-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement2_get_type_Proxy" ixml-element-2-get-type-proxy :convention :stdcall) hresult  (|This| :pointer) (|plType| :pointer))
(defcfun ("IXMLElement2_get_type_Stub" ixml-element-2-get-type-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement2_get_text_Proxy" ixml-element-2-get-text-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| :pointer))
(defcfun ("IXMLElement2_get_text_Stub" ixml-element-2-get-text-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement2_put_text_Proxy" ixml-element-2-put-text-proxy :convention :stdcall) hresult  (|This| :pointer) (|p| bstr))
(defcfun ("IXMLElement2_put_text_Stub" ixml-element-2-put-text-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement2_addChild_Proxy" ixml-element-2-add-child-proxy :convention :stdcall) hresult  (|This| :pointer) (|pChildElem| :pointer) (|lIndex| :long) (|lReserved| :long))
(defcfun ("IXMLElement2_addChild_Stub" ixml-element-2-add-child-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement2_removeChild_Proxy" ixml-element-2-remove-child-proxy :convention :stdcall) hresult  (|This| :pointer) (|pChildElem| :pointer))
(defcfun ("IXMLElement2_removeChild_Stub" ixml-element-2-remove-child-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLElement2_get_attributes_Proxy" ixml-element-2-get-attributes-proxy :convention :stdcall) hresult  (|This| :pointer) (|pp| :pointer))
(defcfun ("IXMLElement2_get_attributes_Stub" ixml-element-2-get-attributes-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLAttribute_get_name_Proxy" ixml-attribute-get-name-proxy :convention :stdcall) hresult  (|This| :pointer) (|n| :pointer))
(defcfun ("IXMLAttribute_get_name_Stub" ixml-attribute-get-name-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLAttribute_get_value_Proxy" ixml-attribute-get-value-proxy :convention :stdcall) hresult  (|This| :pointer) (|v| :pointer))
(defcfun ("IXMLAttribute_get_value_Stub" ixml-attribute-get-value-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IXMLError_GetErrorInfo_Proxy" ixml-error-get-error-info-proxy :convention :stdcall) hresult  (|This| :pointer) (|pErrorReturn| :pointer))
(defcfun ("IXMLError_GetErrorInfo_Stub" ixml-error-get-error-info-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("CreateURLMoniker" create-url-moniker :convention :stdcall) hresult  (|pMkCtx| lpmoniker) (|szURL| lpcwstr) (|ppmk| :pointer))
(defcfun ("CreateURLMonikerEx" create-url-moniker-ex :convention :stdcall) hresult  (|pMkCtx| lpmoniker) (|szURL| lpcwstr) (|ppmk| :pointer) (|dwFlags| dword))
(defcfun ("GetClassURL" get-class-url :convention :stdcall) hresult  (|szURL| lpcwstr) (|pClsID| :pointer))
(defcfun ("CreateAsyncBindCtx" create-async-bind-ctx :convention :stdcall) hresult  (|reserved| dword) (|pBSCb| :pointer) (|pEFetc| :pointer) (|ppBC| :pointer))
(defcfun ("CreateAsyncBindCtxEx" create-async-bind-ctx-ex :convention :stdcall) hresult  (|pbc| :pointer) (|dwOptions| dword) (|pBSCb| :pointer) (|pEnum| :pointer) (|ppBC| :pointer) (|reserved| dword))
(defcfun ("MkParseDisplayNameEx" mk-parse-display-name-ex :convention :stdcall) hresult  (|pbc| :pointer) (|szDisplayName| lpcwstr) (|pchEaten| :pointer) (|ppmk| :pointer))
(defcfun ("RegisterBindStatusCallback" register-bind-status-callback :convention :stdcall) hresult  (|pBC| lpbc) (|pBSCb| :pointer) (|ppBSCBPrev| :pointer) (|dwReserved| dword))
(defcfun ("RevokeBindStatusCallback" revoke-bind-status-callback :convention :stdcall) hresult  (|pBC| lpbc) (|pBSCb| :pointer))
(defcfun ("GetClassFileOrMime" get-class-file-or-mime :convention :stdcall) hresult  (|pBC| lpbc) (|szFilename| lpcwstr) (|pBuffer| lpvoid) (|cbSize| dword) (|szMime| lpcwstr) (|dwReserved| dword) (|pclsid| :pointer))
(defcfun ("IsValidURL" is-valid-url :convention :stdcall) hresult  (|pBC| lpbc) (|szURL| lpcwstr) (|dwReserved| dword))
(defcfun ("CoGetClassObjectFromURL" co-get-class-object-from-url :convention :stdcall) hresult  (|rCLASSID| :pointer) (|szCODE| lpcwstr) (|dwFileVersionMS| dword) (|dwFileVersionLS| dword) (|szTYPE| lpcwstr) (|pBindCtx| lpbindctx) (|dwClsContext| dword) (|pvReserved| lpvoid) (|riid| :pointer) (|ppv| :pointer))
(defcfun ("FaultInIEFeature" fault-in-ie-feature :convention :stdcall) hresult  (|hWnd| hwnd) (|pClassSpec| :pointer) (|pQuery| :pointer) (|dwFlags| dword))
(defcfun ("GetComponentIDFromCLSSPEC" get-component-id-from-clsspec :convention :stdcall) hresult  (|pClassspec| :pointer) (|ppszComponentID| :pointer))
(defcfun ("IsAsyncMoniker" is-async-moniker :convention :stdcall) hresult  (|pmk| :pointer))
(defcfun ("CreateURLBinding" create-url-binding :convention :stdcall) hresult  (|lpszUrl| lpcwstr) (|pbc| :pointer) (|ppBdg| :pointer))
(defcfun ("RegisterMediaTypes" register-media-types :convention :stdcall) hresult  (|ctypes| uint) (|rgszTypes| :pointer) (|rgcfTypes| :pointer))
(defcfun ("FindMediaType" find-media-type :convention :stdcall) hresult  (|rgszTypes| lpcstr) (|rgcfTypes| :pointer))
(defcfun ("CreateFormatEnumerator" create-format-enumerator :convention :stdcall) hresult  (|cfmtetc| uint) (|rgfmtetc| :pointer) (|ppenumfmtetc| :pointer))
(defcfun ("RegisterFormatEnumerator" register-format-enumerator :convention :stdcall) hresult  (|pBC| lpbc) (|pEFetc| :pointer) (|reserved| dword))
(defcfun ("RevokeFormatEnumerator" revoke-format-enumerator :convention :stdcall) hresult  (|pBC| lpbc) (|pEFetc| :pointer))
(defcfun ("RegisterMediaTypeClass" register-media-type-class :convention :stdcall) hresult  (|pBC| lpbc) (|ctypes| uint) (|rgszTypes| :pointer) (|rgclsID| :pointer) (|reserved| dword))
(defcfun ("FindMediaTypeClass" find-media-type-class :convention :stdcall) hresult  (|pBC| lpbc) (|szType| lpcstr) (|pclsID| :pointer) (|reserved| dword))
(defcfun ("UrlMkSetSessionOption" url-mk-set-session-option :convention :stdcall) hresult  (|dwOption| dword) (|pBuffer| lpvoid) (|dwBufferLength| dword) (|dwReserved| dword))
(defcfun ("UrlMkGetSessionOption" url-mk-get-session-option :convention :stdcall) hresult  (|dwOption| dword) (|pBuffer| lpvoid) (|dwBufferLength| dword) (|pdwBufferLength| :pointer) (|dwReserved| dword))
(defcfun ("FindMimeFromData" find-mime-from-data :convention :stdcall) hresult  (|pBC| lpbc) (|pwzUrl| lpcwstr) (|pBuffer| lpvoid) (|cbSize| dword) (|pwzMimeProposed| lpcwstr) (|dwMimeFlags| dword) (|ppwzMimeOut| :pointer) (|dwReserved| dword))
(defcfun ("ObtainUserAgentString" obtain-user-agent-string :convention :stdcall) hresult  (|dwOption| dword) (|pszUAOut| lpstr) (|cbSize| :pointer))
(defcfun ("CompareSecurityIds" compare-security-ids :convention :stdcall) hresult  (|pbSecurityId1| :pointer) (|dwLen1| dword) (|pbSecurityId2| :pointer) (|dwLen2| dword) (|dwReserved| dword))
(defcfun ("CompatFlagsFromClsid" compat-flags-from-clsid :convention :stdcall) hresult  (|pclsid| :pointer) (|pdwCompatFlags| lpdword) (|pdwMiscStatusFlags| lpdword))
(defcfun ("IPersistMoniker_GetClassID_Proxy" ipersist-moniker-get-class-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|pClassID| :pointer))
(defcfun ("IPersistMoniker_GetClassID_Stub" ipersist-moniker-get-class-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistMoniker_IsDirty_Proxy" ipersist-moniker-is-dirty-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IPersistMoniker_IsDirty_Stub" ipersist-moniker-is-dirty-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistMoniker_Load_Proxy" ipersist-moniker-load-proxy :convention :stdcall) hresult  (|This| :pointer) (|fFullyAvailable| winbool) (|pimkName| :pointer) (|pibc| lpbc) (|grfMode| dword))
(defcfun ("IPersistMoniker_Load_Stub" ipersist-moniker-load-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistMoniker_Save_Proxy" ipersist-moniker-save-proxy :convention :stdcall) hresult  (|This| :pointer) (|pimkName| :pointer) (|pbc| lpbc) (|fRemember| winbool))
(defcfun ("IPersistMoniker_Save_Stub" ipersist-moniker-save-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistMoniker_SaveCompleted_Proxy" ipersist-moniker-save-completed-proxy :convention :stdcall) hresult  (|This| :pointer) (|pimkName| :pointer) (|pibc| lpbc))
(defcfun ("IPersistMoniker_SaveCompleted_Stub" ipersist-moniker-save-completed-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPersistMoniker_GetCurMoniker_Proxy" ipersist-moniker-get-cur-moniker-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppimkName| :pointer))
(defcfun ("IPersistMoniker_GetCurMoniker_Stub" ipersist-moniker-get-cur-moniker-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IMonikerProp_PutProperty_Proxy" imoniker-prop-put-property-proxy :convention :stdcall) hresult  (|This| :pointer) (|mkp| monikerproperty) (|val| lpcwstr))
(defcfun ("IMonikerProp_PutProperty_Stub" imoniker-prop-put-property-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindProtocol_CreateBinding_Proxy" ibind-protocol-create-binding-proxy :convention :stdcall) hresult  (|This| :pointer) (|szUrl| lpcwstr) (|pbc| :pointer) (|ppb| :pointer))
(defcfun ("IBindProtocol_CreateBinding_Stub" ibind-protocol-create-binding-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBinding_Abort_Proxy" ibinding-abort-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IBinding_Abort_Stub" ibinding-abort-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBinding_Suspend_Proxy" ibinding-suspend-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IBinding_Suspend_Stub" ibinding-suspend-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBinding_Resume_Proxy" ibinding-resume-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IBinding_Resume_Stub" ibinding-resume-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBinding_SetPriority_Proxy" ibinding-set-priority-proxy :convention :stdcall) hresult  (|This| :pointer) (|nPriority| long))
(defcfun ("IBinding_SetPriority_Stub" ibinding-set-priority-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBinding_GetPriority_Proxy" ibinding-get-priority-proxy :convention :stdcall) hresult  (|This| :pointer) (|pnPriority| :pointer))
(defcfun ("IBinding_GetPriority_Stub" ibinding-get-priority-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBinding_RemoteGetBindResult_Proxy" ibinding-remote-get-bind-result-proxy :convention :stdcall) hresult  (|This| :pointer) (|pclsidProtocol| :pointer) (|pdwResult| :pointer) (|pszResult| :pointer) (|dwReserved| dword))
(defcfun ("IBinding_RemoteGetBindResult_Stub" ibinding-remote-get-bind-result-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindStatusCallback_OnStartBinding_Proxy" ibind-status-callback-on-start-binding-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwReserved| dword) (|pib| :pointer))
(defcfun ("IBindStatusCallback_OnStartBinding_Stub" ibind-status-callback-on-start-binding-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindStatusCallback_GetPriority_Proxy" ibind-status-callback-get-priority-proxy :convention :stdcall) hresult  (|This| :pointer) (|pnPriority| :pointer))
(defcfun ("IBindStatusCallback_GetPriority_Stub" ibind-status-callback-get-priority-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindStatusCallback_OnLowResource_Proxy" ibind-status-callback-on-low-resource-proxy :convention :stdcall) hresult  (|This| :pointer) (|reserved| dword))
(defcfun ("IBindStatusCallback_OnLowResource_Stub" ibind-status-callback-on-low-resource-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindStatusCallback_OnProgress_Proxy" ibind-status-callback-on-progress-proxy :convention :stdcall) hresult  (|This| :pointer) (|ulProgress| ulong) (|ulProgressMax| ulong) (|ulStatusCode| ulong) (|szStatusText| lpcwstr))
(defcfun ("IBindStatusCallback_OnProgress_Stub" ibind-status-callback-on-progress-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindStatusCallback_OnStopBinding_Proxy" ibind-status-callback-on-stop-binding-proxy :convention :stdcall) hresult  (|This| :pointer) (|hresult| hresult) (|szError| lpcwstr))
(defcfun ("IBindStatusCallback_OnStopBinding_Stub" ibind-status-callback-on-stop-binding-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindStatusCallback_RemoteGetBindInfo_Proxy" ibind-status-callback-remote-get-bind-info-proxy :convention :stdcall) hresult  (|This| :pointer) (|grfBINDF| :pointer) (|pbindinfo| :pointer) (|pstgmed| :pointer))
(defcfun ("IBindStatusCallback_RemoteGetBindInfo_Stub" ibind-status-callback-remote-get-bind-info-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindStatusCallback_RemoteOnDataAvailable_Proxy" ibind-status-callback-remote-on-data-available-proxy :convention :stdcall) hresult  (|This| :pointer) (|grfBSCF| dword) (|dwSize| dword) (|pformatetc| :pointer) (|pstgmed| :pointer))
(defcfun ("IBindStatusCallback_RemoteOnDataAvailable_Stub" ibind-status-callback-remote-on-data-available-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindStatusCallback_OnObjectAvailable_Proxy" ibind-status-callback-on-object-available-proxy :convention :stdcall) hresult  (|This| :pointer) (|riid| :pointer) (|punk| :pointer))
(defcfun ("IBindStatusCallback_OnObjectAvailable_Stub" ibind-status-callback-on-object-available-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IAuthenticate_Authenticate_Proxy" iauthenticate-authenticate-proxy :convention :stdcall) hresult  (|This| :pointer) (|phwnd| :pointer) (|pszUsername| :pointer) (|pszPassword| :pointer))
(defcfun ("IAuthenticate_Authenticate_Stub" iauthenticate-authenticate-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IHttpNegotiate_BeginningTransaction_Proxy" ihttp-negotiate-beginning-transaction-proxy :convention :stdcall) hresult  (|This| :pointer) (|szURL| lpcwstr) (|szHeaders| lpcwstr) (|dwReserved| dword) (|pszAdditionalHeaders| :pointer))
(defcfun ("IHttpNegotiate_BeginningTransaction_Stub" ihttp-negotiate-beginning-transaction-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IHttpNegotiate_OnResponse_Proxy" ihttp-negotiate-on-response-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwResponseCode| dword) (|szResponseHeaders| lpcwstr) (|szRequestHeaders| lpcwstr) (|pszAdditionalRequestHeaders| :pointer))
(defcfun ("IHttpNegotiate_OnResponse_Stub" ihttp-negotiate-on-response-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IHttpNegotiate2_GetRootSecurityId_Proxy" ihttp-negotiate-2-get-root-security-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbSecurityId| :pointer) (|pcbSecurityId| :pointer) (|dwReserved| dword_ptr))
(defcfun ("IHttpNegotiate2_GetRootSecurityId_Stub" ihttp-negotiate-2-get-root-security-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IWinInetFileStream_SetHandleForUnlock_Proxy" iwin-inet-file-stream-set-handle-for-unlock-proxy :convention :stdcall) hresult  (|This| :pointer) (|hWinInetLockHandle| dword_ptr) (|dwReserved| dword_ptr))
(defcfun ("IWinInetFileStream_SetHandleForUnlock_Stub" iwin-inet-file-stream-set-handle-for-unlock-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IWinInetFileStream_SetDeleteFile_Proxy" iwin-inet-file-stream-set-delete-file-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwReserved| dword_ptr))
(defcfun ("IWinInetFileStream_SetDeleteFile_Stub" iwin-inet-file-stream-set-delete-file-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IWindowForBindingUI_GetWindow_Proxy" iwindow-for-binding-ui-get-window-proxy :convention :stdcall) hresult  (|This| :pointer) (|rguidReason| :pointer) (|phwnd| :pointer))
(defcfun ("IWindowForBindingUI_GetWindow_Stub" iwindow-for-binding-ui-get-window-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICodeInstall_OnCodeInstallProblem_Proxy" icode-install-on-code-install-problem-proxy :convention :stdcall) hresult  (|This| :pointer) (|ulStatusCode| ulong) (|szDestination| lpcwstr) (|szSource| lpcwstr) (|dwReserved| dword))
(defcfun ("ICodeInstall_OnCodeInstallProblem_Stub" icode-install-on-code-install-problem-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IWinInetInfo_RemoteQueryOption_Proxy" iwin-inet-info-remote-query-option-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwOption| dword) (|pBuffer| :pointer) (|pcbBuf| :pointer))
(defcfun ("IWinInetInfo_RemoteQueryOption_Stub" iwin-inet-info-remote-query-option-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IHttpSecurity_OnSecurityProblem_Proxy" ihttp-security-on-security-problem-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwProblem| dword))
(defcfun ("IHttpSecurity_OnSecurityProblem_Stub" ihttp-security-on-security-problem-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IWinInetHttpInfo_RemoteQueryInfo_Proxy" iwin-inet-http-info-remote-query-info-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwOption| dword) (|pBuffer| :pointer) (|pcbBuf| :pointer) (|pdwFlags| :pointer) (|pdwReserved| :pointer))
(defcfun ("IWinInetHttpInfo_RemoteQueryInfo_Stub" iwin-inet-http-info-remote-query-info-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IWinInetCacheHints_SetCacheExtension_Proxy" iwin-inet-cache-hints-set-cache-extension-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwzExt| lpcwstr) (|pszCacheFile| lpvoid) (|pcbCacheFile| :pointer) (|pdwWinInetError| :pointer) (|pdwReserved| :pointer))
(defcfun ("IWinInetCacheHints_SetCacheExtension_Stub" iwin-inet-cache-hints-set-cache-extension-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindHost_CreateMoniker_Proxy" ibind-host-create-moniker-proxy :convention :stdcall) hresult  (|This| :pointer) (|szName| lpolestr) (|pBC| :pointer) (|ppmk| :pointer) (|dwReserved| dword))
(defcfun ("IBindHost_CreateMoniker_Stub" ibind-host-create-moniker-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindHost_RemoteMonikerBindToStorage_Proxy" ibind-host-remote-moniker-bind-to-storage-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMk| :pointer) (|pBC| :pointer) (|pBSC| :pointer) (|riid| :pointer) (|ppvObj| :pointer))
(defcfun ("IBindHost_RemoteMonikerBindToStorage_Stub" ibind-host-remote-moniker-bind-to-storage-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IBindHost_RemoteMonikerBindToObject_Proxy" ibind-host-remote-moniker-bind-to-object-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMk| :pointer) (|pBC| :pointer) (|pBSC| :pointer) (|riid| :pointer) (|ppvObj| :pointer))
(defcfun ("IBindHost_RemoteMonikerBindToObject_Stub" ibind-host-remote-moniker-bind-to-object-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("HlinkSimpleNavigateToString" hlink-simple-navigate-to-string :convention :stdcall) hresult  (|szTarget| lpcwstr) (|szLocation| lpcwstr) (|szTargetFrameName| lpcwstr) (|pUnk| :pointer) (|pbc| :pointer) (arg5 :pointer) (|grfHLNF| dword) (|dwReserved| dword))
(defcfun ("HlinkSimpleNavigateToMoniker" hlink-simple-navigate-to-moniker :convention :stdcall) hresult  (|pmkTarget| :pointer) (|szLocation| lpcwstr) (|szTargetFrameName| lpcwstr) (|pUnk| :pointer) (|pbc| :pointer) (arg5 :pointer) (|grfHLNF| dword) (|dwReserved| dword))
(defcfun ("URLOpenStreamA" url-open-stream-a :convention :stdcall) hresult  (arg0 lpunknown) (arg1 lpcstr) (arg2 dword) (arg3 lpbindstatuscallback))
(defcfun ("URLOpenStreamW" url-open-stream-w :convention :stdcall) hresult  (arg0 lpunknown) (arg1 lpcwstr) (arg2 dword) (arg3 lpbindstatuscallback))
(defcfun ("URLOpenPullStreamA" url-open-pull-stream-a :convention :stdcall) hresult  (arg0 lpunknown) (arg1 lpcstr) (arg2 dword) (arg3 lpbindstatuscallback))
(defcfun ("URLOpenPullStreamW" url-open-pull-stream-w :convention :stdcall) hresult  (arg0 lpunknown) (arg1 lpcwstr) (arg2 dword) (arg3 lpbindstatuscallback))
(defcfun ("URLDownloadToFileA" url-download-to-file-a :convention :stdcall) hresult  (arg0 lpunknown) (arg1 lpcstr) (arg2 lpcstr) (arg3 dword) (arg4 lpbindstatuscallback))
(defcfun ("URLDownloadToFileW" url-download-to-file-w :convention :stdcall) hresult  (arg0 lpunknown) (arg1 lpcwstr) (arg2 lpcwstr) (arg3 dword) (arg4 lpbindstatuscallback))
(defcfun ("URLDownloadToCacheFileA" url-download-to-cache-file-a :convention :stdcall) hresult  (arg0 lpunknown) (arg1 lpcstr) (arg2 lptstr) (arg3 dword) (arg4 dword) (arg5 lpbindstatuscallback))
(defcfun ("URLDownloadToCacheFileW" url-download-to-cache-file-w :convention :stdcall) hresult  (arg0 lpunknown) (arg1 lpcwstr) (arg2 lpwstr) (arg3 dword) (arg4 dword) (arg5 lpbindstatuscallback))
(defcfun ("URLOpenBlockingStreamA" url-open-blocking-stream-a :convention :stdcall) hresult  (arg0 lpunknown) (arg1 lpcstr) (arg2 :pointer) (arg3 dword) (arg4 lpbindstatuscallback))
(defcfun ("URLOpenBlockingStreamW" url-open-blocking-stream-w :convention :stdcall) hresult  (arg0 lpunknown) (arg1 lpcwstr) (arg2 :pointer) (arg3 dword) (arg4 lpbindstatuscallback))
(defcfun ("HlinkGoBack" hlink-go-back :convention :stdcall) hresult  (|pUnk| :pointer))
(defcfun ("HlinkGoForward" hlink-go-forward :convention :stdcall) hresult  (|pUnk| :pointer))
(defcfun ("HlinkNavigateString" hlink-navigate-string :convention :stdcall) hresult  (|pUnk| :pointer) (|szTarget| lpcwstr))
(defcfun ("HlinkNavigateMoniker" hlink-navigate-moniker :convention :stdcall) hresult  (|pUnk| :pointer) (|pmkTarget| :pointer))
(defcfun ("IInternetBindInfo_GetBindInfo_Proxy" iinternet-bind-info-get-bind-info-proxy :convention :stdcall) hresult  (|This| :pointer) (|grfBINDF| :pointer) (|pbindinfo| :pointer))
(defcfun ("IInternetBindInfo_GetBindInfo_Stub" iinternet-bind-info-get-bind-info-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetBindInfo_GetBindString_Proxy" iinternet-bind-info-get-bind-string-proxy :convention :stdcall) hresult  (|This| :pointer) (|ulStringType| ulong) (|ppwzStr| :pointer) (|cEl| ulong) (|pcElFetched| :pointer))
(defcfun ("IInternetBindInfo_GetBindString_Stub" iinternet-bind-info-get-bind-string-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocolRoot_Start_Proxy" iinternet-protocol-root-start-proxy :convention :stdcall) hresult  (|This| :pointer) (|szUrl| lpcwstr) (|pOIProtSink| :pointer) (|pOIBindInfo| :pointer) (|grfPI| dword) (|dwReserved| handle_ptr))
(defcfun ("IInternetProtocolRoot_Start_Stub" iinternet-protocol-root-start-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocolRoot_Continue_Proxy" iinternet-protocol-root-continue-proxy :convention :stdcall) hresult  (|This| :pointer) (|pProtocolData| :pointer))
(defcfun ("IInternetProtocolRoot_Continue_Stub" iinternet-protocol-root-continue-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocolRoot_Abort_Proxy" iinternet-protocol-root-abort-proxy :convention :stdcall) hresult  (|This| :pointer) (|hrReason| hresult) (|dwOptions| dword))
(defcfun ("IInternetProtocolRoot_Abort_Stub" iinternet-protocol-root-abort-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocolRoot_Terminate_Proxy" iinternet-protocol-root-terminate-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwOptions| dword))
(defcfun ("IInternetProtocolRoot_Terminate_Stub" iinternet-protocol-root-terminate-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocolRoot_Suspend_Proxy" iinternet-protocol-root-suspend-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IInternetProtocolRoot_Suspend_Stub" iinternet-protocol-root-suspend-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocolRoot_Resume_Proxy" iinternet-protocol-root-resume-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IInternetProtocolRoot_Resume_Stub" iinternet-protocol-root-resume-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocol_Read_Proxy" iinternet-protocol-read-proxy :convention :stdcall) hresult  (|This| :pointer) (|pv| :pointer) (|cb| ulong) (|pcbRead| :pointer))
(defcfun ("IInternetProtocol_Read_Stub" iinternet-protocol-read-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocol_Seek_Proxy" iinternet-protocol-seek-proxy :convention :stdcall) hresult  (|This| :pointer) (|dlibMove| large_integer) (|dwOrigin| dword) (|plibNewPosition| :pointer))
(defcfun ("IInternetProtocol_Seek_Stub" iinternet-protocol-seek-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocol_LockRequest_Proxy" iinternet-protocol-lock-request-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwOptions| dword))
(defcfun ("IInternetProtocol_LockRequest_Stub" iinternet-protocol-lock-request-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocol_UnlockRequest_Proxy" iinternet-protocol-unlock-request-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IInternetProtocol_UnlockRequest_Stub" iinternet-protocol-unlock-request-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocolSink_Switch_Proxy" iinternet-protocol-sink-switch-proxy :convention :stdcall) hresult  (|This| :pointer) (|pProtocolData| :pointer))
(defcfun ("IInternetProtocolSink_Switch_Stub" iinternet-protocol-sink-switch-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocolSink_ReportProgress_Proxy" iinternet-protocol-sink-report-progress-proxy :convention :stdcall) hresult  (|This| :pointer) (|ulStatusCode| ulong) (|szStatusText| lpcwstr))
(defcfun ("IInternetProtocolSink_ReportProgress_Stub" iinternet-protocol-sink-report-progress-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocolSink_ReportData_Proxy" iinternet-protocol-sink-report-data-proxy :convention :stdcall) hresult  (|This| :pointer) (|grfBSCF| dword) (|ulProgress| ulong) (|ulProgressMax| ulong))
(defcfun ("IInternetProtocolSink_ReportData_Stub" iinternet-protocol-sink-report-data-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocolSink_ReportResult_Proxy" iinternet-protocol-sink-report-result-proxy :convention :stdcall) hresult  (|This| :pointer) (|hrResult| hresult) (|dwError| dword) (|szResult| lpcwstr))
(defcfun ("IInternetProtocolSink_ReportResult_Stub" iinternet-protocol-sink-report-result-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocolSinkStackable_SwitchSink_Proxy" iinternet-protocol-sink-stackable-switch-sink-proxy :convention :stdcall) hresult  (|This| :pointer) (|pOIProtSink| :pointer))
(defcfun ("IInternetProtocolSinkStackable_SwitchSink_Stub" iinternet-protocol-sink-stackable-switch-sink-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocolSinkStackable_CommitSwitch_Proxy" iinternet-protocol-sink-stackable-commit-switch-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IInternetProtocolSinkStackable_CommitSwitch_Stub" iinternet-protocol-sink-stackable-commit-switch-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocolSinkStackable_RollbackSwitch_Proxy" iinternet-protocol-sink-stackable-rollback-switch-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IInternetProtocolSinkStackable_RollbackSwitch_Stub" iinternet-protocol-sink-stackable-rollback-switch-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetSession_RegisterNameSpace_Proxy" iinternet-session-register-name-space-proxy :convention :stdcall) hresult  (|This| :pointer) (|pCF| :pointer) (|rclsid| :pointer) (|pwzProtocol| lpcwstr) (|cPatterns| ulong) (|ppwzPatterns| :pointer) (|dwReserved| dword))
(defcfun ("IInternetSession_RegisterNameSpace_Stub" iinternet-session-register-name-space-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetSession_UnregisterNameSpace_Proxy" iinternet-session-unregister-name-space-proxy :convention :stdcall) hresult  (|This| :pointer) (|pCF| :pointer) (|pszProtocol| lpcwstr))
(defcfun ("IInternetSession_UnregisterNameSpace_Stub" iinternet-session-unregister-name-space-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetSession_RegisterMimeFilter_Proxy" iinternet-session-register-mime-filter-proxy :convention :stdcall) hresult  (|This| :pointer) (|pCF| :pointer) (|rclsid| :pointer) (|pwzType| lpcwstr))
(defcfun ("IInternetSession_RegisterMimeFilter_Stub" iinternet-session-register-mime-filter-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetSession_UnregisterMimeFilter_Proxy" iinternet-session-unregister-mime-filter-proxy :convention :stdcall) hresult  (|This| :pointer) (|pCF| :pointer) (|pwzType| lpcwstr))
(defcfun ("IInternetSession_UnregisterMimeFilter_Stub" iinternet-session-unregister-mime-filter-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetSession_CreateBinding_Proxy" iinternet-session-create-binding-proxy :convention :stdcall) hresult  (|This| :pointer) (|pBC| lpbc) (|szUrl| lpcwstr) (|pUnkOuter| :pointer) (|ppUnk| :pointer) (|ppOInetProt| :pointer) (|dwOption| dword))
(defcfun ("IInternetSession_CreateBinding_Stub" iinternet-session-create-binding-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetSession_SetSessionOption_Proxy" iinternet-session-set-session-option-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwOption| dword) (|pBuffer| lpvoid) (|dwBufferLength| dword) (|dwReserved| dword))
(defcfun ("IInternetSession_SetSessionOption_Stub" iinternet-session-set-session-option-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetSession_GetSessionOption_Proxy" iinternet-session-get-session-option-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwOption| dword) (|pBuffer| lpvoid) (|pdwBufferLength| :pointer) (|dwReserved| dword))
(defcfun ("IInternetSession_GetSessionOption_Stub" iinternet-session-get-session-option-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetThreadSwitch_Prepare_Proxy" iinternet-thread-switch-prepare-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IInternetThreadSwitch_Prepare_Stub" iinternet-thread-switch-prepare-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetThreadSwitch_Continue_Proxy" iinternet-thread-switch-continue-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IInternetThreadSwitch_Continue_Stub" iinternet-thread-switch-continue-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetPriority_SetPriority_Proxy" iinternet-priority-set-priority-proxy :convention :stdcall) hresult  (|This| :pointer) (|nPriority| long))
(defcfun ("IInternetPriority_SetPriority_Stub" iinternet-priority-set-priority-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetPriority_GetPriority_Proxy" iinternet-priority-get-priority-proxy :convention :stdcall) hresult  (|This| :pointer) (|pnPriority| :pointer))
(defcfun ("IInternetPriority_GetPriority_Stub" iinternet-priority-get-priority-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocolInfo_ParseUrl_Proxy" iinternet-protocol-info-parse-url-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwzUrl| lpcwstr) (|ParseAction| parseaction) (|dwParseFlags| dword) (|pwzResult| lpwstr) (|cchResult| dword) (|pcchResult| :pointer) (|dwReserved| dword))
(defcfun ("IInternetProtocolInfo_ParseUrl_Stub" iinternet-protocol-info-parse-url-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocolInfo_CombineUrl_Proxy" iinternet-protocol-info-combine-url-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwzBaseUrl| lpcwstr) (|pwzRelativeUrl| lpcwstr) (|dwCombineFlags| dword) (|pwzResult| lpwstr) (|cchResult| dword) (|pcchResult| :pointer) (|dwReserved| dword))
(defcfun ("IInternetProtocolInfo_CombineUrl_Stub" iinternet-protocol-info-combine-url-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocolInfo_CompareUrl_Proxy" iinternet-protocol-info-compare-url-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwzUrl1| lpcwstr) (|pwzUrl2| lpcwstr) (|dwCompareFlags| dword))
(defcfun ("IInternetProtocolInfo_CompareUrl_Stub" iinternet-protocol-info-compare-url-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetProtocolInfo_QueryInfo_Proxy" iinternet-protocol-info-query-info-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwzUrl| lpcwstr) (|OueryOption| queryoption) (|dwQueryFlags| dword) (|pBuffer| lpvoid) (|cbBuffer| dword) (|pcbBuf| :pointer) (|dwReserved| dword))
(defcfun ("IInternetProtocolInfo_QueryInfo_Stub" iinternet-protocol-info-query-info-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("CoInternetParseUrl" co-internet-parse-url :convention :stdcall) hresult  (|pwzUrl| lpcwstr) (|ParseAction| parseaction) (|dwFlags| dword) (|pszResult| lpwstr) (|cchResult| dword) (|pcchResult| :pointer) (|dwReserved| dword))
(defcfun ("CoInternetCombineUrl" co-internet-combine-url :convention :stdcall) hresult  (|pwzBaseUrl| lpcwstr) (|pwzRelativeUrl| lpcwstr) (|dwCombineFlags| dword) (|pszResult| lpwstr) (|cchResult| dword) (|pcchResult| :pointer) (|dwReserved| dword))
(defcfun ("CoInternetCompareUrl" co-internet-compare-url :convention :stdcall) hresult  (|pwzUrl1| lpcwstr) (|pwzUrl2| lpcwstr) (|dwFlags| dword))
(defcfun ("CoInternetGetProtocolFlags" co-internet-get-protocol-flags :convention :stdcall) hresult  (|pwzUrl| lpcwstr) (|pdwFlags| :pointer) (|dwReserved| dword))
(defcfun ("CoInternetQueryInfo" co-internet-query-info :convention :stdcall) hresult  (|pwzUrl| lpcwstr) (|QueryOptions| queryoption) (|dwQueryFlags| dword) (|pvBuffer| lpvoid) (|cbBuffer| dword) (|pcbBuffer| :pointer) (|dwReserved| dword))
(defcfun ("CoInternetGetSession" co-internet-get-session :convention :stdcall) hresult  (|dwSessionMode| dword) (|ppIInternetSession| :pointer) (|dwReserved| dword))
(defcfun ("CoInternetGetSecurityUrl" co-internet-get-security-url :convention :stdcall) hresult  (|pwzUrl| lpcwstr) (|ppwzSecUrl| :pointer) (|psuAction| psuaction) (|dwReserved| dword))
(defcfun ("AsyncInstallDistributionUnit" async-install-distribution-unit :convention :stdcall) hresult  (|szDistUnit| lpcwstr) (|szTYPE| lpcwstr) (|szExt| lpcwstr) (|dwFileVersionMS| dword) (|dwFileVersionLS| dword) (|szURL| lpcwstr) (|pbc| :pointer) (|pvReserved| lpvoid) (|flags| dword))
(defcfun ("CoInternetSetFeatureEnabled" co-internet-set-feature-enabled :convention :stdcall) hresult  (|FeatureEntry| internetfeaturelist) (|dwFlags| dword) (|fEnable| winbool))
(defcfun ("CoInternetIsFeatureEnabled" co-internet-is-feature-enabled :convention :stdcall) hresult  (|FeatureEntry| internetfeaturelist) (|dwFlags| dword))
(defcfun ("CoInternetIsFeatureEnabledForUrl" co-internet-is-feature-enabled-for-url :convention :stdcall) hresult  (|FeatureEntry| internetfeaturelist) (|dwFlags| dword) (|szURL| lpcwstr) (|pSecMgr| :pointer))
(defcfun ("CoInternetIsFeatureZoneElevationEnabled" co-internet-is-feature-zone-elevation-enabled :convention :stdcall) hresult  (|szFromURL| lpcwstr) (|szToURL| lpcwstr) (|pSecMgr| :pointer) (|dwFlags| dword))
(defcfun ("CopyStgMedium" copy-stg-medium :convention :stdcall) hresult  (|pcstgmedSrc| :pointer) (|pstgmedDest| :pointer))
(defcfun ("CopyBindInfo" copy-bind-info :convention :stdcall) hresult  (|pcbiSrc| :pointer) (|pbiDest| :pointer))
(defcfun ("ReleaseBindInfo" release-bind-info :convention :stdcall) :void  (|pbindinfo| :pointer))
(defcfun ("CoInternetCreateSecurityManager" co-internet-create-security-manager :convention :stdcall) hresult  (|pSP| :pointer) (|ppSM| :pointer) (|dwReserved| dword))
(defcfun ("CoInternetCreateZoneManager" co-internet-create-zone-manager :convention :stdcall) hresult  (|pSP| :pointer) (|ppZM| :pointer) (|dwReserved| dword))
(defcfun ("IInternetSecurityMgrSite_GetWindow_Proxy" iinternet-security-mgr-site-get-window-proxy :convention :stdcall) hresult  (|This| :pointer) (|phwnd| :pointer))
(defcfun ("IInternetSecurityMgrSite_GetWindow_Stub" iinternet-security-mgr-site-get-window-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetSecurityMgrSite_EnableModeless_Proxy" iinternet-security-mgr-site-enable-modeless-proxy :convention :stdcall) hresult  (|This| :pointer) (|fEnable| winbool))
(defcfun ("IInternetSecurityMgrSite_EnableModeless_Stub" iinternet-security-mgr-site-enable-modeless-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetSecurityManager_SetSecuritySite_Proxy" iinternet-security-manager-set-security-site-proxy :convention :stdcall) hresult  (|This| :pointer) (|pSite| :pointer))
(defcfun ("IInternetSecurityManager_SetSecuritySite_Stub" iinternet-security-manager-set-security-site-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetSecurityManager_GetSecuritySite_Proxy" iinternet-security-manager-get-security-site-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppSite| :pointer))
(defcfun ("IInternetSecurityManager_GetSecuritySite_Stub" iinternet-security-manager-get-security-site-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetSecurityManager_MapUrlToZone_Proxy" iinternet-security-manager-map-url-to-zone-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwszUrl| lpcwstr) (|pdwZone| :pointer) (|dwFlags| dword))
(defcfun ("IInternetSecurityManager_MapUrlToZone_Stub" iinternet-security-manager-map-url-to-zone-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetSecurityManager_GetSecurityId_Proxy" iinternet-security-manager-get-security-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwszUrl| lpcwstr) (|pbSecurityId| :pointer) (|pcbSecurityId| :pointer) (|dwReserved| dword_ptr))
(defcfun ("IInternetSecurityManager_GetSecurityId_Stub" iinternet-security-manager-get-security-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetSecurityManager_ProcessUrlAction_Proxy" iinternet-security-manager-process-url-action-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwszUrl| lpcwstr) (|dwAction| dword) (|pPolicy| :pointer) (|cbPolicy| dword) (|pContext| :pointer) (|cbContext| dword) (|dwFlags| dword) (|dwReserved| dword))
(defcfun ("IInternetSecurityManager_ProcessUrlAction_Stub" iinternet-security-manager-process-url-action-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetSecurityManager_QueryCustomPolicy_Proxy" iinternet-security-manager-query-custom-policy-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwszUrl| lpcwstr) (|guidKey| :pointer) (|ppPolicy| :pointer) (|pcbPolicy| :pointer) (|pContext| :pointer) (|cbContext| dword) (|dwReserved| dword))
(defcfun ("IInternetSecurityManager_QueryCustomPolicy_Stub" iinternet-security-manager-query-custom-policy-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetSecurityManager_SetZoneMapping_Proxy" iinternet-security-manager-set-zone-mapping-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwZone| dword) (|lpszPattern| lpcwstr) (|dwFlags| dword))
(defcfun ("IInternetSecurityManager_SetZoneMapping_Stub" iinternet-security-manager-set-zone-mapping-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetSecurityManager_GetZoneMappings_Proxy" iinternet-security-manager-get-zone-mappings-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwZone| dword) (|ppenumString| :pointer) (|dwFlags| dword))
(defcfun ("IInternetSecurityManager_GetZoneMappings_Stub" iinternet-security-manager-get-zone-mappings-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetSecurityManagerEx_ProcessUrlActionEx_Proxy" iinternet-security-manager-ex-process-url-action-ex-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwszUrl| lpcwstr) (|dwAction| dword) (|pPolicy| :pointer) (|cbPolicy| dword) (|pContext| :pointer) (|cbContext| dword) (|dwFlags| dword) (|dwReserved| dword) (|pdwOutFlags| :pointer))
(defcfun ("IInternetSecurityManagerEx_ProcessUrlActionEx_Stub" iinternet-security-manager-ex-process-url-action-ex-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IZoneIdentifier_GetId_Proxy" izone-identifier-get-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|pdwZone| :pointer))
(defcfun ("IZoneIdentifier_GetId_Stub" izone-identifier-get-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IZoneIdentifier_SetId_Proxy" izone-identifier-set-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwZone| dword))
(defcfun ("IZoneIdentifier_SetId_Stub" izone-identifier-set-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IZoneIdentifier_Remove_Proxy" izone-identifier-remove-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IZoneIdentifier_Remove_Stub" izone-identifier-remove-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetHostSecurityManager_GetSecurityId_Proxy" iinternet-host-security-manager-get-security-id-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbSecurityId| :pointer) (|pcbSecurityId| :pointer) (|dwReserved| dword_ptr))
(defcfun ("IInternetHostSecurityManager_GetSecurityId_Stub" iinternet-host-security-manager-get-security-id-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetHostSecurityManager_ProcessUrlAction_Proxy" iinternet-host-security-manager-process-url-action-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwAction| dword) (|pPolicy| :pointer) (|cbPolicy| dword) (|pContext| :pointer) (|cbContext| dword) (|dwFlags| dword) (|dwReserved| dword))
(defcfun ("IInternetHostSecurityManager_ProcessUrlAction_Stub" iinternet-host-security-manager-process-url-action-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetHostSecurityManager_QueryCustomPolicy_Proxy" iinternet-host-security-manager-query-custom-policy-proxy :convention :stdcall) hresult  (|This| :pointer) (|guidKey| :pointer) (|ppPolicy| :pointer) (|pcbPolicy| :pointer) (|pContext| :pointer) (|cbContext| dword) (|dwReserved| dword))
(defcfun ("IInternetHostSecurityManager_QueryCustomPolicy_Stub" iinternet-host-security-manager-query-custom-policy-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetZoneManager_GetZoneAttributes_Proxy" iinternet-zone-manager-get-zone-attributes-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwZone| dword) (|pZoneAttributes| :pointer))
(defcfun ("IInternetZoneManager_GetZoneAttributes_Stub" iinternet-zone-manager-get-zone-attributes-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetZoneManager_SetZoneAttributes_Proxy" iinternet-zone-manager-set-zone-attributes-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwZone| dword) (|pZoneAttributes| :pointer))
(defcfun ("IInternetZoneManager_SetZoneAttributes_Stub" iinternet-zone-manager-set-zone-attributes-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetZoneManager_GetZoneCustomPolicy_Proxy" iinternet-zone-manager-get-zone-custom-policy-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwZone| dword) (|guidKey| :pointer) (|ppPolicy| :pointer) (|pcbPolicy| :pointer) (|urlZoneReg| urlzonereg))
(defcfun ("IInternetZoneManager_GetZoneCustomPolicy_Stub" iinternet-zone-manager-get-zone-custom-policy-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetZoneManager_SetZoneCustomPolicy_Proxy" iinternet-zone-manager-set-zone-custom-policy-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwZone| dword) (|guidKey| :pointer) (|pPolicy| :pointer) (|cbPolicy| dword) (|urlZoneReg| urlzonereg))
(defcfun ("IInternetZoneManager_SetZoneCustomPolicy_Stub" iinternet-zone-manager-set-zone-custom-policy-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetZoneManager_GetZoneActionPolicy_Proxy" iinternet-zone-manager-get-zone-action-policy-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwZone| dword) (|dwAction| dword) (|pPolicy| :pointer) (|cbPolicy| dword) (|urlZoneReg| urlzonereg))
(defcfun ("IInternetZoneManager_GetZoneActionPolicy_Stub" iinternet-zone-manager-get-zone-action-policy-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetZoneManager_SetZoneActionPolicy_Proxy" iinternet-zone-manager-set-zone-action-policy-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwZone| dword) (|dwAction| dword) (|pPolicy| :pointer) (|cbPolicy| dword) (|urlZoneReg| urlzonereg))
(defcfun ("IInternetZoneManager_SetZoneActionPolicy_Stub" iinternet-zone-manager-set-zone-action-policy-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetZoneManager_PromptAction_Proxy" iinternet-zone-manager-prompt-action-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwAction| dword) (|hwndParent| hwnd) (|pwszUrl| lpcwstr) (|pwszText| lpcwstr) (|dwPromptFlags| dword))
(defcfun ("IInternetZoneManager_PromptAction_Stub" iinternet-zone-manager-prompt-action-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetZoneManager_LogAction_Proxy" iinternet-zone-manager-log-action-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwAction| dword) (|pwszUrl| lpcwstr) (|pwszText| lpcwstr) (|dwLogFlags| dword))
(defcfun ("IInternetZoneManager_LogAction_Stub" iinternet-zone-manager-log-action-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetZoneManager_CreateZoneEnumerator_Proxy" iinternet-zone-manager-create-zone-enumerator-proxy :convention :stdcall) hresult  (|This| :pointer) (|pdwEnum| :pointer) (|pdwCount| :pointer) (|dwFlags| dword))
(defcfun ("IInternetZoneManager_CreateZoneEnumerator_Stub" iinternet-zone-manager-create-zone-enumerator-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetZoneManager_GetZoneAt_Proxy" iinternet-zone-manager-get-zone-at-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwEnum| dword) (|dwIndex| dword) (|pdwZone| :pointer))
(defcfun ("IInternetZoneManager_GetZoneAt_Stub" iinternet-zone-manager-get-zone-at-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetZoneManager_DestroyZoneEnumerator_Proxy" iinternet-zone-manager-destroy-zone-enumerator-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwEnum| dword))
(defcfun ("IInternetZoneManager_DestroyZoneEnumerator_Stub" iinternet-zone-manager-destroy-zone-enumerator-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetZoneManager_CopyTemplatePoliciesToZone_Proxy" iinternet-zone-manager-copy-template-policies-to-zone-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwTemplate| dword) (|dwZone| dword) (|dwReserved| dword))
(defcfun ("IInternetZoneManager_CopyTemplatePoliciesToZone_Stub" iinternet-zone-manager-copy-template-policies-to-zone-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetZoneManagerEx_GetZoneActionPolicyEx_Proxy" iinternet-zone-manager-ex-get-zone-action-policy-ex-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwZone| dword) (|dwAction| dword) (|pPolicy| :pointer) (|cbPolicy| dword) (|urlZoneReg| urlzonereg) (|dwFlags| dword))
(defcfun ("IInternetZoneManagerEx_GetZoneActionPolicyEx_Stub" iinternet-zone-manager-ex-get-zone-action-policy-ex-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IInternetZoneManagerEx_SetZoneActionPolicyEx_Proxy" iinternet-zone-manager-ex-set-zone-action-policy-ex-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwZone| dword) (|dwAction| dword) (|pPolicy| :pointer) (|cbPolicy| dword) (|urlZoneReg| urlzonereg) (|dwFlags| dword))
(defcfun ("IInternetZoneManagerEx_SetZoneActionPolicyEx_Stub" iinternet-zone-manager-ex-set-zone-action-policy-ex-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISoftDistExt_ProcessSoftDist_Proxy" isoft-dist-ext-process-soft-dist-proxy :convention :stdcall) hresult  (|This| :pointer) (|szCDFURL| lpcwstr) (|pSoftDistElement| :pointer) (|lpsdi| lpsoftdistinfo))
(defcfun ("ISoftDistExt_ProcessSoftDist_Stub" isoft-dist-ext-process-soft-dist-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISoftDistExt_GetFirstCodeBase_Proxy" isoft-dist-ext-get-first-code-base-proxy :convention :stdcall) hresult  (|This| :pointer) (|szCodeBase| :pointer) (|dwMaxSize| lpdword))
(defcfun ("ISoftDistExt_GetFirstCodeBase_Stub" isoft-dist-ext-get-first-code-base-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISoftDistExt_GetNextCodeBase_Proxy" isoft-dist-ext-get-next-code-base-proxy :convention :stdcall) hresult  (|This| :pointer) (|szCodeBase| :pointer) (|dwMaxSize| lpdword))
(defcfun ("ISoftDistExt_GetNextCodeBase_Stub" isoft-dist-ext-get-next-code-base-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ISoftDistExt_AsyncInstallDistributionUnit_Proxy" isoft-dist-ext-async-install-distribution-unit-proxy :convention :stdcall) hresult  (|This| :pointer) (|pbc| :pointer) (|pvReserved| lpvoid) (|flags| dword) (|lpcbh| lpcodebasehold))
(defcfun ("ISoftDistExt_AsyncInstallDistributionUnit_Stub" isoft-dist-ext-async-install-distribution-unit-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("GetSoftwareUpdateInfo" get-software-update-info :convention :stdcall) hresult  (|szDistUnit| lpcwstr) (|psdi| lpsoftdistinfo))
(defcfun ("SetSoftwareUpdateAdvertisementState" set-software-update-advertisement-state :convention :stdcall) hresult  (|szDistUnit| lpcwstr) (|dwAdState| dword) (|dwAdvertisedVersionMS| dword) (|dwAdvertisedVersionLS| dword))
(defcfun ("ICatalogFileInfo_GetCatalogFile_Proxy" icatalog-file-info-get-catalog-file-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppszCatalogFile| :pointer))
(defcfun ("ICatalogFileInfo_GetCatalogFile_Stub" icatalog-file-info-get-catalog-file-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("ICatalogFileInfo_GetJavaTrust_Proxy" icatalog-file-info-get-java-trust-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppJavaTrust| :pointer))
(defcfun ("ICatalogFileInfo_GetJavaTrust_Stub" icatalog-file-info-get-java-trust-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDataFilter_DoEncode_Proxy" idata-filter-do-encode-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwFlags| dword) (|lInBufferSize| long) (|pbInBuffer| :pointer) (|lOutBufferSize| long) (|pbOutBuffer| :pointer) (|lInBytesAvailable| long) (|plInBytesRead| :pointer) (|plOutBytesWritten| :pointer) (|dwReserved| dword))
(defcfun ("IDataFilter_DoEncode_Stub" idata-filter-do-encode-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDataFilter_DoDecode_Proxy" idata-filter-do-decode-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwFlags| dword) (|lInBufferSize| long) (|pbInBuffer| :pointer) (|lOutBufferSize| long) (|pbOutBuffer| :pointer) (|lInBytesAvailable| long) (|plInBytesRead| :pointer) (|plOutBytesWritten| :pointer) (|dwReserved| dword))
(defcfun ("IDataFilter_DoDecode_Stub" idata-filter-do-decode-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IDataFilter_SetEncodingLevel_Proxy" idata-filter-set-encoding-level-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwEncLevel| dword))
(defcfun ("IDataFilter_SetEncodingLevel_Stub" idata-filter-set-encoding-level-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEncodingFilterFactory_FindBestFilter_Proxy" iencoding-filter-factory-find-best-filter-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwzCodeIn| lpcwstr) (|pwzCodeOut| lpcwstr) (|info| datainfo) (|ppDF| :pointer))
(defcfun ("IEncodingFilterFactory_FindBestFilter_Stub" iencoding-filter-factory-find-best-filter-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEncodingFilterFactory_GetDefaultFilter_Proxy" iencoding-filter-factory-get-default-filter-proxy :convention :stdcall) hresult  (|This| :pointer) (|pwzCodeIn| lpcwstr) (|pwzCodeOut| lpcwstr) (|ppDF| :pointer))
(defcfun ("IEncodingFilterFactory_GetDefaultFilter_Stub" iencoding-filter-factory-get-default-filter-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IsLoggingEnabledA" is-logging-enabled-a :convention :stdcall) winbool  (|pszUrl| lpcstr))
(defcfun ("IsLoggingEnabledW" is-logging-enabled-w :convention :stdcall) winbool  (|pwszUrl| lpcwstr))
(defcfun ("WriteHitLogging" write-hit-logging :convention :stdcall) winbool  (|lpLogginginfo| lphit_logging_info))
(defcfun ("IWrappedProtocol_GetWrapperCode_Proxy" iwrapped-protocol-get-wrapper-code-proxy :convention :stdcall) hresult  (|This| :pointer) (|pnCode| :pointer) (|dwReserved| dword_ptr))
(defcfun ("IWrappedProtocol_GetWrapperCode_Stub" iwrapped-protocol-get-wrapper-code-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("HWND_UserSize" hwnd-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("HWND_UserMarshal" hwnd-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("HWND_UserUnmarshal" hwnd-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("HWND_UserFree" hwnd-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("IBinding_GetBindResult_Proxy" ibinding-get-bind-result-proxy :convention :stdcall) hresult  (|This| :pointer) (|pclsidProtocol| :pointer) (|pdwResult| :pointer) (|pszResult| :pointer) (|pdwReserved| :pointer))
(defcfun ("IBinding_GetBindResult_Stub" ibinding-get-bind-result-stub :convention :stdcall) hresult  (|This| :pointer) (|pclsidProtocol| :pointer) (|pdwResult| :pointer) (|pszResult| :pointer) (|dwReserved| dword))
(defcfun ("IBindStatusCallback_GetBindInfo_Proxy" ibind-status-callback-get-bind-info-proxy :convention :stdcall) hresult  (|This| :pointer) (|grfBINDF| :pointer) (|pbindinfo| :pointer))
(defcfun ("IBindStatusCallback_GetBindInfo_Stub" ibind-status-callback-get-bind-info-stub :convention :stdcall) hresult  (|This| :pointer) (|grfBINDF| :pointer) (|pbindinfo| :pointer) (|pstgmed| :pointer))
(defcfun ("IBindStatusCallback_OnDataAvailable_Proxy" ibind-status-callback-on-data-available-proxy :convention :stdcall) hresult  (|This| :pointer) (|grfBSCF| dword) (|dwSize| dword) (|pformatetc| :pointer) (|pstgmed| :pointer))
(defcfun ("IBindStatusCallback_OnDataAvailable_Stub" ibind-status-callback-on-data-available-stub :convention :stdcall) hresult  (|This| :pointer) (|grfBSCF| dword) (|dwSize| dword) (|pformatetc| :pointer) (|pstgmed| :pointer))
(defcfun ("IWinInetInfo_QueryOption_Proxy" iwin-inet-info-query-option-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwOption| dword) (|pBuffer| lpvoid) (|pcbBuf| :pointer))
(defcfun ("IWinInetInfo_QueryOption_Stub" iwin-inet-info-query-option-stub :convention :stdcall) hresult  (|This| :pointer) (|dwOption| dword) (|pBuffer| :pointer) (|pcbBuf| :pointer))
(defcfun ("IWinInetHttpInfo_QueryInfo_Proxy" iwin-inet-http-info-query-info-proxy :convention :stdcall) hresult  (|This| :pointer) (|dwOption| dword) (|pBuffer| lpvoid) (|pcbBuf| :pointer) (|pdwFlags| :pointer) (|pdwReserved| :pointer))
(defcfun ("IWinInetHttpInfo_QueryInfo_Stub" iwin-inet-http-info-query-info-stub :convention :stdcall) hresult  (|This| :pointer) (|dwOption| dword) (|pBuffer| :pointer) (|pcbBuf| :pointer) (|pdwFlags| :pointer) (|pdwReserved| :pointer))
(defcfun ("IBindHost_MonikerBindToStorage_Proxy" ibind-host-moniker-bind-to-storage-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMk| :pointer) (|pBC| :pointer) (|pBSC| :pointer) (|riid| :pointer) (|ppvObj| :pointer))
(defcfun ("IBindHost_MonikerBindToStorage_Stub" ibind-host-moniker-bind-to-storage-stub :convention :stdcall) hresult  (|This| :pointer) (|pMk| :pointer) (|pBC| :pointer) (|pBSC| :pointer) (|riid| :pointer) (|ppvObj| :pointer))
(defcfun ("IBindHost_MonikerBindToObject_Proxy" ibind-host-moniker-bind-to-object-proxy :convention :stdcall) hresult  (|This| :pointer) (|pMk| :pointer) (|pBC| :pointer) (|pBSC| :pointer) (|riid| :pointer) (|ppvObj| :pointer))
(defcfun ("IBindHost_MonikerBindToObject_Stub" ibind-host-moniker-bind-to-object-stub :convention :stdcall) hresult  (|This| :pointer) (|pMk| :pointer) (|pBC| :pointer) (|pBSC| :pointer) (|riid| :pointer) (|ppvObj| :pointer))
(defcfun ("IPropertyStorage_ReadMultiple_Proxy" iproperty-storage-read-multiple-proxy :convention :stdcall) hresult  (|This| :pointer) (|cpspec| ulong) (|rgpspec| :pointer) (|rgpropvar| :pointer))
(defcfun ("IPropertyStorage_ReadMultiple_Stub" iproperty-storage-read-multiple-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPropertyStorage_WriteMultiple_Proxy" iproperty-storage-write-multiple-proxy :convention :stdcall) hresult  (|This| :pointer) (|cpspec| ulong) (|rgpspec| :pointer) (|rgpropvar| :pointer) (|propidNameFirst| propid))
(defcfun ("IPropertyStorage_WriteMultiple_Stub" iproperty-storage-write-multiple-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPropertyStorage_DeleteMultiple_Proxy" iproperty-storage-delete-multiple-proxy :convention :stdcall) hresult  (|This| :pointer) (|cpspec| ulong) (|rgpspec| :pointer))
(defcfun ("IPropertyStorage_DeleteMultiple_Stub" iproperty-storage-delete-multiple-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPropertyStorage_ReadPropertyNames_Proxy" iproperty-storage-read-property-names-proxy :convention :stdcall) hresult  (|This| :pointer) (|cpropid| ulong) (|rgpropid| :pointer) (|rglpwstrName| :pointer))
(defcfun ("IPropertyStorage_ReadPropertyNames_Stub" iproperty-storage-read-property-names-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPropertyStorage_WritePropertyNames_Proxy" iproperty-storage-write-property-names-proxy :convention :stdcall) hresult  (|This| :pointer) (|cpropid| ulong) (|rgpropid| :pointer) (|rglpwstrName| :pointer))
(defcfun ("IPropertyStorage_WritePropertyNames_Stub" iproperty-storage-write-property-names-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPropertyStorage_DeletePropertyNames_Proxy" iproperty-storage-delete-property-names-proxy :convention :stdcall) hresult  (|This| :pointer) (|cpropid| ulong) (|rgpropid| :pointer))
(defcfun ("IPropertyStorage_DeletePropertyNames_Stub" iproperty-storage-delete-property-names-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPropertyStorage_Commit_Proxy" iproperty-storage-commit-proxy :convention :stdcall) hresult  (|This| :pointer) (|grfCommitFlags| dword))
(defcfun ("IPropertyStorage_Commit_Stub" iproperty-storage-commit-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPropertyStorage_Revert_Proxy" iproperty-storage-revert-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IPropertyStorage_Revert_Stub" iproperty-storage-revert-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPropertyStorage_Enum_Proxy" iproperty-storage-enum-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppenum| :pointer))
(defcfun ("IPropertyStorage_Enum_Stub" iproperty-storage-enum-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPropertyStorage_SetTimes_Proxy" iproperty-storage-set-times-proxy :convention :stdcall) hresult  (|This| :pointer) (|pctime| :pointer) (|patime| :pointer) (|pmtime| :pointer))
(defcfun ("IPropertyStorage_SetTimes_Stub" iproperty-storage-set-times-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPropertyStorage_SetClass_Proxy" iproperty-storage-set-class-proxy :convention :stdcall) hresult  (|This| :pointer) (|clsid| :pointer))
(defcfun ("IPropertyStorage_SetClass_Stub" iproperty-storage-set-class-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPropertyStorage_Stat_Proxy" iproperty-storage-stat-proxy :convention :stdcall) hresult  (|This| :pointer) (|pstatpsstg| :pointer))
(defcfun ("IPropertyStorage_Stat_Stub" iproperty-storage-stat-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPropertySetStorage_Create_Proxy" iproperty-set-storage-create-proxy :convention :stdcall) hresult  (|This| :pointer) (|rfmtid| :pointer) (|pclsid| :pointer) (|grfFlags| dword) (|grfMode| dword) (|ppprstg| :pointer))
(defcfun ("IPropertySetStorage_Create_Stub" iproperty-set-storage-create-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPropertySetStorage_Open_Proxy" iproperty-set-storage-open-proxy :convention :stdcall) hresult  (|This| :pointer) (|rfmtid| :pointer) (|grfMode| dword) (|ppprstg| :pointer))
(defcfun ("IPropertySetStorage_Open_Stub" iproperty-set-storage-open-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPropertySetStorage_Delete_Proxy" iproperty-set-storage-delete-proxy :convention :stdcall) hresult  (|This| :pointer) (|rfmtid| :pointer))
(defcfun ("IPropertySetStorage_Delete_Stub" iproperty-set-storage-delete-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IPropertySetStorage_Enum_Proxy" iproperty-set-storage-enum-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppenum| :pointer))
(defcfun ("IPropertySetStorage_Enum_Stub" iproperty-set-storage-enum-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumSTATPROPSTG_RemoteNext_Proxy" ienum-statpropstg-remote-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IEnumSTATPROPSTG_RemoteNext_Stub" ienum-statpropstg-remote-next-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumSTATPROPSTG_Skip_Proxy" ienum-statpropstg-skip-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong))
(defcfun ("IEnumSTATPROPSTG_Skip_Stub" ienum-statpropstg-skip-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumSTATPROPSTG_Reset_Proxy" ienum-statpropstg-reset-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IEnumSTATPROPSTG_Reset_Stub" ienum-statpropstg-reset-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumSTATPROPSTG_Clone_Proxy" ienum-statpropstg-clone-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppenum| :pointer))
(defcfun ("IEnumSTATPROPSTG_Clone_Stub" ienum-statpropstg-clone-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumSTATPROPSETSTG_RemoteNext_Proxy" ienum-statpropsetstg-remote-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IEnumSTATPROPSETSTG_RemoteNext_Stub" ienum-statpropsetstg-remote-next-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumSTATPROPSETSTG_Skip_Proxy" ienum-statpropsetstg-skip-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong))
(defcfun ("IEnumSTATPROPSETSTG_Skip_Stub" ienum-statpropsetstg-skip-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumSTATPROPSETSTG_Reset_Proxy" ienum-statpropsetstg-reset-proxy :convention :stdcall) hresult  (|This| :pointer))
(defcfun ("IEnumSTATPROPSETSTG_Reset_Stub" ienum-statpropsetstg-reset-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("IEnumSTATPROPSETSTG_Clone_Proxy" ienum-statpropsetstg-clone-proxy :convention :stdcall) hresult  (|This| :pointer) (|ppenum| :pointer))
(defcfun ("IEnumSTATPROPSETSTG_Clone_Stub" ienum-statpropsetstg-clone-stub :convention :stdcall) :void  (|This| :pointer) (|_pRpcChannelBuffer| :pointer) (|_pRpcMessage| prpc_message) (|_pdwStubPhase| :pointer))
(defcfun ("PropVariantCopy" prop-variant-copy :convention :stdcall) hresult  (|pvarDest| :pointer) (|pvarSrc| :pointer))
(defcfun ("PropVariantClear" prop-variant-clear :convention :stdcall) hresult  (|pvar| :pointer))
(defcfun ("FreePropVariantArray" free-prop-variant-array :convention :stdcall) hresult  (|cVariants| ulong) (|rgvars| :pointer))
(defcfun ("StgCreatePropStg" stg-create-prop-stg :convention :stdcall) hresult  (|pUnk| :pointer) (|fmtid| :pointer) (|pclsid| :pointer) (|grfFlags| dword) (|dwReserved| dword) (|ppPropStg| :pointer))
(defcfun ("StgOpenPropStg" stg-open-prop-stg :convention :stdcall) hresult  (|pUnk| :pointer) (|fmtid| :pointer) (|grfFlags| dword) (|dwReserved| dword) (|ppPropStg| :pointer))
(defcfun ("StgCreatePropSetStg" stg-create-prop-set-stg :convention :stdcall) hresult  (|pStorage| :pointer) (|dwReserved| dword) (|ppPropSetStg| :pointer))
(defcfun ("FmtIdToPropStgName" fmt-id-to-prop-stg-name :convention :stdcall) hresult  (|pfmtid| :pointer) (|oszName| lpolestr))
(defcfun ("PropStgNameToFmtId" prop-stg-name-to-fmt-id :convention :stdcall) hresult  (|oszName| lpolestr) (|pfmtid| :pointer))
(defcfun ("BSTR_UserSize" bstr-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("BSTR_UserMarshal" bstr-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("BSTR_UserUnmarshal" bstr-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("BSTR_UserFree" bstr-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("LPSAFEARRAY_UserSize" lpsafearray-user-size :convention :stdcall) :unsigned-long  (arg0 :pointer) (arg1 :unsigned-long) (arg2 :pointer))
(defcfun ("LPSAFEARRAY_UserMarshal" lpsafearray-user-marshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("LPSAFEARRAY_UserUnmarshal" lpsafearray-user-unmarshal :convention :stdcall) :pointer  (arg0 :pointer) (arg1 :pointer) (arg2 :pointer))
(defcfun ("LPSAFEARRAY_UserFree" lpsafearray-user-free :convention :stdcall) :void  (arg0 :pointer) (arg1 :pointer))
(defcfun ("IEnumSTATPROPSTG_Next_Proxy" ienum-statpropstg-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IEnumSTATPROPSTG_Next_Stub" ienum-statpropstg-next-stub :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IEnumSTATPROPSETSTG_Next_Proxy" ienum-statpropsetstg-next-proxy :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("IEnumSTATPROPSETSTG_Next_Stub" ienum-statpropsetstg-next-stub :convention :stdcall) hresult  (|This| :pointer) (|celt| ulong) (|rgelt| :pointer) (|pceltFetched| :pointer))
(defcfun ("CreateStdProgressIndicator" create-std-progress-indicator :convention :stdcall) hresult  (|hwndParent| hwnd) (|pszTitle| lpcolestr) (|pIbscCaller| :pointer) (|ppIbsc| :pointer))
(defcfun ("SysAllocString" sys-alloc-string :convention :stdcall) bstr  (arg0 :pointer))
(defcfun ("SysReAllocString" sys-re-alloc-string :convention :stdcall) int  (arg0 :pointer) (arg1 :pointer))
(defcfun ("SysAllocStringLen" sys-alloc-string-len :convention :stdcall) bstr  (arg0 :pointer) (arg1 uint))
(defcfun ("SysReAllocStringLen" sys-re-alloc-string-len :convention :stdcall) int  (arg0 :pointer) (arg1 :pointer) (arg2 uint))
(defcfun ("SysFreeString" sys-free-string :convention :stdcall) :void  (arg0 bstr))
(defcfun ("SysStringLen" sys-string-len :convention :stdcall) uint  (arg0 bstr))
(defcfun ("SysStringByteLen" sys-string-byte-len :convention :stdcall) uint  (|bstr| bstr))
(defcfun ("SysAllocStringByteLen" sys-alloc-string-byte-len :convention :stdcall) bstr  (|psz| lpcstr) (|len| uint))
(defcfun ("DosDateTimeToVariantTime" dos-date-time-to-variant-time :convention :stdcall) int  (|wDosDate| ushort) (|wDosTime| ushort) (|pvtime| :pointer))
(defcfun ("VariantTimeToDosDateTime" variant-time-to-dos-date-time :convention :stdcall) int  (|vtime| double) (|pwDosDate| :pointer) (|pwDosTime| :pointer))
(defcfun ("SystemTimeToVariantTime" system-time-to-variant-time :convention :stdcall) int  (|lpSystemTime| lpsystemtime) (|pvtime| :pointer))
(defcfun ("VariantTimeToSystemTime" variant-time-to-system-time :convention :stdcall) int  (|vtime| double) (|lpSystemTime| lpsystemtime))
(defcfun ("SafeArrayAllocDescriptor" safe-array-alloc-descriptor :convention :stdcall) hresult  (|cDims| uint) (|ppsaOut| :pointer))
(defcfun ("SafeArrayAllocDescriptorEx" safe-array-alloc-descriptor-ex :convention :stdcall) hresult  (|vt| vartype) (|cDims| uint) (|ppsaOut| :pointer))
(defcfun ("SafeArrayAllocData" safe-array-alloc-data :convention :stdcall) hresult  (|psa| :pointer))
(defcfun ("SafeArrayCreate" safe-array-create :convention :stdcall) :pointer  (|vt| vartype) (|cDims| uint) (|rgsabound| :pointer))
(defcfun ("SafeArrayCreateEx" safe-array-create-ex :convention :stdcall) :pointer  (|vt| vartype) (|cDims| uint) (|rgsabound| :pointer) (|pvExtra| pvoid))
(defcfun ("SafeArrayCopyData" safe-array-copy-data :convention :stdcall) hresult  (|psaSource| :pointer) (|psaTarget| :pointer))
(defcfun ("SafeArrayDestroyDescriptor" safe-array-destroy-descriptor :convention :stdcall) hresult  (|psa| :pointer))
(defcfun ("SafeArrayDestroyData" safe-array-destroy-data :convention :stdcall) hresult  (|psa| :pointer))
(defcfun ("SafeArrayDestroy" safe-array-destroy :convention :stdcall) hresult  (|psa| :pointer))
(defcfun ("SafeArrayRedim" safe-array-redim :convention :stdcall) hresult  (|psa| :pointer) (|psaboundNew| :pointer))
(defcfun ("SafeArrayGetDim" safe-array-get-dim :convention :stdcall) uint  (|psa| :pointer))
(defcfun ("SafeArrayGetElemsize" safe-array-get-elemsize :convention :stdcall) uint  (|psa| :pointer))
(defcfun ("SafeArrayGetUBound" safe-array-get-ubound :convention :stdcall) hresult  (|psa| :pointer) (|nDim| uint) (|plUbound| :pointer))
(defcfun ("SafeArrayGetLBound" safe-array-get-lbound :convention :stdcall) hresult  (|psa| :pointer) (|nDim| uint) (|plLbound| :pointer))
(defcfun ("SafeArrayLock" safe-array-lock :convention :stdcall) hresult  (|psa| :pointer))
(defcfun ("SafeArrayUnlock" safe-array-unlock :convention :stdcall) hresult  (|psa| :pointer))
(defcfun ("SafeArrayAccessData" safe-array-access-data :convention :stdcall) hresult  (|psa| :pointer) (|ppvData| :pointer))
(defcfun ("SafeArrayUnaccessData" safe-array-unaccess-data :convention :stdcall) hresult  (|psa| :pointer))
(defcfun ("SafeArrayGetElement" safe-array-get-element :convention :stdcall) hresult  (|psa| :pointer) (|rgIndices| :pointer) (|pv| :pointer))
(defcfun ("SafeArrayPutElement" safe-array-put-element :convention :stdcall) hresult  (|psa| :pointer) (|rgIndices| :pointer) (|pv| :pointer))
(defcfun ("SafeArrayCopy" safe-array-copy :convention :stdcall) hresult  (|psa| :pointer) (|ppsaOut| :pointer))
(defcfun ("SafeArrayPtrOfIndex" safe-array-ptr-of-index :convention :stdcall) hresult  (|psa| :pointer) (|rgIndices| :pointer) (|ppvData| :pointer))
(defcfun ("SafeArraySetRecordInfo" safe-array-set-record-info :convention :stdcall) hresult  (|psa| :pointer) (|prinfo| :pointer))
(defcfun ("SafeArrayGetRecordInfo" safe-array-get-record-info :convention :stdcall) hresult  (|psa| :pointer) (|prinfo| :pointer))
(defcfun ("SafeArraySetIID" safe-array-set-iid :convention :stdcall) hresult  (|psa| :pointer) (|guid| :pointer))
(defcfun ("SafeArrayGetIID" safe-array-get-iid :convention :stdcall) hresult  (|psa| :pointer) (|pguid| :pointer))
(defcfun ("SafeArrayGetVartype" safe-array-get-vartype :convention :stdcall) hresult  (|psa| :pointer) (|pvt| :pointer))
(defcfun ("SafeArrayCreateVector" safe-array-create-vector :convention :stdcall) :pointer  (|vt| vartype) (|lLbound| long) (|cElements| ulong))
(defcfun ("SafeArrayCreateVectorEx" safe-array-create-vector-ex :convention :stdcall) :pointer  (|vt| vartype) (|lLbound| long) (|cElements| ulong) (|pvExtra| pvoid))
(defcfun ("VariantInit" variant-init :convention :stdcall) :void  (|pvarg| :pointer))
(defcfun ("VariantClear" variant-clear :convention :stdcall) hresult  (|pvarg| :pointer))
(defcfun ("VariantCopy" variant-copy :convention :stdcall) hresult  (|pvargDest| :pointer) (|pvargSrc| :pointer))
(defcfun ("VariantCopyInd" variant-copy-ind :convention :stdcall) hresult  (|pvarDest| :pointer) (|pvargSrc| :pointer))
(defcfun ("VariantChangeType" variant-change-type :convention :stdcall) hresult  (|pvargDest| :pointer) (|pvarSrc| :pointer) (|wFlags| ushort) (|vt| vartype))
(defcfun ("VariantChangeTypeEx" variant-change-type-ex :convention :stdcall) hresult  (|pvargDest| :pointer) (|pvarSrc| :pointer) (|lcid| lcid) (|wFlags| ushort) (|vt| vartype))
(defcfun ("VectorFromBstr" vector-from-bstr :convention :stdcall) hresult  (|bstr| bstr) (|ppsa| :pointer))
(defcfun ("BstrFromVector" bstr-from-vector :convention :stdcall) hresult  (|psa| :pointer) (|pbstr| :pointer))
(defcfun ("VarUI1FromI2" var-ui-1-from-i-2 :convention :stdcall) hresult  (|sIn| short) (|pbOut| :pointer))
(defcfun ("VarUI1FromI4" var-ui-1-from-i-4 :convention :stdcall) hresult  (|lIn| long) (|pbOut| :pointer))
(defcfun ("VarUI1FromI8" var-ui-1-from-i-8 :convention :stdcall) hresult  (|i64In| long64) (|pbOut| :pointer))
(defcfun ("VarUI1FromR4" var-ui-1-from-r-4 :convention :stdcall) hresult  (|fltIn| float) (|pbOut| :pointer))
(defcfun ("VarUI1FromR8" var-ui-1-from-r-8 :convention :stdcall) hresult  (|dblIn| double) (|pbOut| :pointer))
(defcfun ("VarUI1FromCy" var-ui-1-from-cy :convention :stdcall) hresult  (|cyIn| cy) (|pbOut| :pointer))
(defcfun ("VarUI1FromDate" var-ui-1-from-date :convention :stdcall) hresult  (|dateIn| date) (|pbOut| :pointer))
(defcfun ("VarUI1FromStr" var-ui-1-from-str :convention :stdcall) hresult  (|strIn| :pointer) (|lcid| lcid) (|dwFlags| ulong) (|pbOut| :pointer))
(defcfun ("VarUI1FromDisp" var-ui-1-from-disp :convention :stdcall) hresult  (|pdispIn| :pointer) (|lcid| lcid) (|pbOut| :pointer))
(defcfun ("VarUI1FromBool" var-ui-1-from-bool :convention :stdcall) hresult  (|boolIn| variant_bool) (|pbOut| :pointer))
(defcfun ("VarUI1FromI1" var-ui-1-from-i-1 :convention :stdcall) hresult  (|cIn| char) (|pbOut| :pointer))
(defcfun ("VarUI1FromUI2" var-ui-1-from-ui-2 :convention :stdcall) hresult  (|uiIn| ushort) (|pbOut| :pointer))
(defcfun ("VarUI1FromUI4" var-ui-1-from-ui-4 :convention :stdcall) hresult  (|ulIn| ulong) (|pbOut| :pointer))
(defcfun ("VarUI1FromUI8" var-ui-1-from-ui-8 :convention :stdcall) hresult  (|ui64In| ulong64) (|pbOut| :pointer))
(defcfun ("VarUI1FromDec" var-ui-1-from-dec :convention :stdcall) hresult  (|pdecIn| :pointer) (|pbOut| :pointer))
(defcfun ("VarI2FromUI1" var-i-2-from-ui-1 :convention :stdcall) hresult  (|bIn| byte) (|psOut| :pointer))
(defcfun ("VarI2FromI4" var-i-2-from-i-4 :convention :stdcall) hresult  (|lIn| long) (|psOut| :pointer))
(defcfun ("VarI2FromI8" var-i-2-from-i-8 :convention :stdcall) hresult  (|i64In| long64) (|psOut| :pointer))
(defcfun ("VarI2FromR4" var-i-2-from-r-4 :convention :stdcall) hresult  (|fltIn| float) (|psOut| :pointer))
(defcfun ("VarI2FromR8" var-i-2-from-r-8 :convention :stdcall) hresult  (|dblIn| double) (|psOut| :pointer))
(defcfun ("VarI2FromCy" var-i-2-from-cy :convention :stdcall) hresult  (|cyIn| cy) (|psOut| :pointer))
(defcfun ("VarI2FromDate" var-i-2-from-date :convention :stdcall) hresult  (|dateIn| date) (|psOut| :pointer))
(defcfun ("VarI2FromStr" var-i-2-from-str :convention :stdcall) hresult  (|strIn| :pointer) (|lcid| lcid) (|dwFlags| ulong) (|psOut| :pointer))
(defcfun ("VarI2FromDisp" var-i-2-from-disp :convention :stdcall) hresult  (|pdispIn| :pointer) (|lcid| lcid) (|psOut| :pointer))
(defcfun ("VarI2FromBool" var-i-2-from-bool :convention :stdcall) hresult  (|boolIn| variant_bool) (|psOut| :pointer))
(defcfun ("VarI2FromI1" var-i-2-from-i-1 :convention :stdcall) hresult  (|cIn| char) (|psOut| :pointer))
(defcfun ("VarI2FromUI2" var-i-2-from-ui-2 :convention :stdcall) hresult  (|uiIn| ushort) (|psOut| :pointer))
(defcfun ("VarI2FromUI4" var-i-2-from-ui-4 :convention :stdcall) hresult  (|ulIn| ulong) (|psOut| :pointer))
(defcfun ("VarI2FromUI8" var-i-2-from-ui-8 :convention :stdcall) hresult  (|ui64In| ulong64) (|psOut| :pointer))
(defcfun ("VarI2FromDec" var-i-2-from-dec :convention :stdcall) hresult  (|pdecIn| :pointer) (|psOut| :pointer))
(defcfun ("VarI4FromUI1" var-i-4-from-ui-1 :convention :stdcall) hresult  (|bIn| byte) (|plOut| :pointer))
(defcfun ("VarI4FromI2" var-i-4-from-i-2 :convention :stdcall) hresult  (|sIn| short) (|plOut| :pointer))
(defcfun ("VarI4FromI8" var-i-4-from-i-8 :convention :stdcall) hresult  (|i64In| long64) (|plOut| :pointer))
(defcfun ("VarI4FromR4" var-i-4-from-r-4 :convention :stdcall) hresult  (|fltIn| float) (|plOut| :pointer))
(defcfun ("VarI4FromR8" var-i-4-from-r-8 :convention :stdcall) hresult  (|dblIn| double) (|plOut| :pointer))
(defcfun ("VarI4FromCy" var-i-4-from-cy :convention :stdcall) hresult  (|cyIn| cy) (|plOut| :pointer))
(defcfun ("VarI4FromDate" var-i-4-from-date :convention :stdcall) hresult  (|dateIn| date) (|plOut| :pointer))
(defcfun ("VarI4FromStr" var-i-4-from-str :convention :stdcall) hresult  (|strIn| :pointer) (|lcid| lcid) (|dwFlags| ulong) (|plOut| :pointer))
(defcfun ("VarI4FromDisp" var-i-4-from-disp :convention :stdcall) hresult  (|pdispIn| :pointer) (|lcid| lcid) (|plOut| :pointer))
(defcfun ("VarI4FromBool" var-i-4-from-bool :convention :stdcall) hresult  (|boolIn| variant_bool) (|plOut| :pointer))
(defcfun ("VarI4FromI1" var-i-4-from-i-1 :convention :stdcall) hresult  (|cIn| char) (|plOut| :pointer))
(defcfun ("VarI4FromUI2" var-i-4-from-ui-2 :convention :stdcall) hresult  (|uiIn| ushort) (|plOut| :pointer))
(defcfun ("VarI4FromUI4" var-i-4-from-ui-4 :convention :stdcall) hresult  (|ulIn| ulong) (|plOut| :pointer))
(defcfun ("VarI4FromUI8" var-i-4-from-ui-8 :convention :stdcall) hresult  (|ui64In| ulong64) (|plOut| :pointer))
(defcfun ("VarI4FromDec" var-i-4-from-dec :convention :stdcall) hresult  (|pdecIn| :pointer) (|plOut| :pointer))
(defcfun ("VarI4FromInt" var-i-4-from-int :convention :stdcall) hresult  (|intIn| int) (|plOut| :pointer))
(defcfun ("VarI8FromUI1" var-i-8-from-ui-1 :convention :stdcall) hresult  (|bIn| byte) (|pi64Out| :pointer))
(defcfun ("VarI8FromI2" var-i-8-from-i-2 :convention :stdcall) hresult  (|sIn| short) (|pi64Out| :pointer))
(defcfun ("VarI8FromI4" var-i-8-from-i-4 :convention :stdcall) hresult  (|lIn| long) (|pi64Out| :pointer))
(defcfun ("VarI8FromR4" var-i-8-from-r-4 :convention :stdcall) hresult  (|fltIn| float) (|pi64Out| :pointer))
(defcfun ("VarI8FromR8" var-i-8-from-r-8 :convention :stdcall) hresult  (|dblIn| double) (|pi64Out| :pointer))
(defcfun ("VarI8FromCy" var-i-8-from-cy :convention :stdcall) hresult  (|cyIn| cy) (|pi64Out| :pointer))
(defcfun ("VarI8FromDate" var-i-8-from-date :convention :stdcall) hresult  (|dateIn| date) (|pi64Out| :pointer))
(defcfun ("VarI8FromStr" var-i-8-from-str :convention :stdcall) hresult  (|strIn| :pointer) (|lcid| lcid) (|dwFlags| :unsigned-long) (|pi64Out| :pointer))
(defcfun ("VarI8FromDisp" var-i-8-from-disp :convention :stdcall) hresult  (|pdispIn| :pointer) (|lcid| lcid) (|pi64Out| :pointer))
(defcfun ("VarI8FromBool" var-i-8-from-bool :convention :stdcall) hresult  (|boolIn| variant_bool) (|pi64Out| :pointer))
(defcfun ("VarI8FromI1" var-i-8-from-i-1 :convention :stdcall) hresult  (|cIn| char) (|pi64Out| :pointer))
(defcfun ("VarI8FromUI2" var-i-8-from-ui-2 :convention :stdcall) hresult  (|uiIn| ushort) (|pi64Out| :pointer))
(defcfun ("VarI8FromUI4" var-i-8-from-ui-4 :convention :stdcall) hresult  (|ulIn| ulong) (|pi64Out| :pointer))
(defcfun ("VarI8FromUI8" var-i-8-from-ui-8 :convention :stdcall) hresult  (|ui64In| ulong64) (|pi64Out| :pointer))
(defcfun ("VarI8FromDec" var-i-8-from-dec :convention :stdcall) hresult  (|pdecIn| :pointer) (|pi64Out| :pointer))
(defcfun ("VarI8FromInt" var-i-8-from-int :convention :stdcall) hresult  (|intIn| int) (|pi64Out| :pointer))
(defcfun ("VarR4FromUI1" var-r-4-from-ui-1 :convention :stdcall) hresult  (|bIn| byte) (|pfltOut| :pointer))
(defcfun ("VarR4FromI2" var-r-4-from-i-2 :convention :stdcall) hresult  (|sIn| short) (|pfltOut| :pointer))
(defcfun ("VarR4FromI4" var-r-4-from-i-4 :convention :stdcall) hresult  (|lIn| long) (|pfltOut| :pointer))
(defcfun ("VarR4FromI8" var-r-4-from-i-8 :convention :stdcall) hresult  (|i64In| long64) (|pfltOut| :pointer))
(defcfun ("VarR4FromR8" var-r-4-from-r-8 :convention :stdcall) hresult  (|dblIn| double) (|pfltOut| :pointer))
(defcfun ("VarR4FromCy" var-r-4-from-cy :convention :stdcall) hresult  (|cyIn| cy) (|pfltOut| :pointer))
(defcfun ("VarR4FromDate" var-r-4-from-date :convention :stdcall) hresult  (|dateIn| date) (|pfltOut| :pointer))
(defcfun ("VarR4FromStr" var-r-4-from-str :convention :stdcall) hresult  (|strIn| :pointer) (|lcid| lcid) (|dwFlags| ulong) (|pfltOut| :pointer))
(defcfun ("VarR4FromDisp" var-r-4-from-disp :convention :stdcall) hresult  (|pdispIn| :pointer) (|lcid| lcid) (|pfltOut| :pointer))
(defcfun ("VarR4FromBool" var-r-4-from-bool :convention :stdcall) hresult  (|boolIn| variant_bool) (|pfltOut| :pointer))
(defcfun ("VarR4FromI1" var-r-4-from-i-1 :convention :stdcall) hresult  (|cIn| char) (|pfltOut| :pointer))
(defcfun ("VarR4FromUI2" var-r-4-from-ui-2 :convention :stdcall) hresult  (|uiIn| ushort) (|pfltOut| :pointer))
(defcfun ("VarR4FromUI4" var-r-4-from-ui-4 :convention :stdcall) hresult  (|ulIn| ulong) (|pfltOut| :pointer))
(defcfun ("VarR4FromUI8" var-r-4-from-ui-8 :convention :stdcall) hresult  (|ui64In| ulong64) (|pfltOut| :pointer))
(defcfun ("VarR4FromDec" var-r-4-from-dec :convention :stdcall) hresult  (|pdecIn| :pointer) (|pfltOut| :pointer))
(defcfun ("VarR8FromUI1" var-r-8-from-ui-1 :convention :stdcall) hresult  (|bIn| byte) (|pdblOut| :pointer))
(defcfun ("VarR8FromI2" var-r-8-from-i-2 :convention :stdcall) hresult  (|sIn| short) (|pdblOut| :pointer))
(defcfun ("VarR8FromI4" var-r-8-from-i-4 :convention :stdcall) hresult  (|lIn| long) (|pdblOut| :pointer))
(defcfun ("VarR8FromI8" var-r-8-from-i-8 :convention :stdcall) hresult  (|i64In| long64) (|pdblOut| :pointer))
(defcfun ("VarR8FromR4" var-r-8-from-r-4 :convention :stdcall) hresult  (|fltIn| float) (|pdblOut| :pointer))
(defcfun ("VarR8FromCy" var-r-8-from-cy :convention :stdcall) hresult  (|cyIn| cy) (|pdblOut| :pointer))
(defcfun ("VarR8FromDate" var-r-8-from-date :convention :stdcall) hresult  (|dateIn| date) (|pdblOut| :pointer))
(defcfun ("VarR8FromStr" var-r-8-from-str :convention :stdcall) hresult  (|strIn| :pointer) (|lcid| lcid) (|dwFlags| ulong) (|pdblOut| :pointer))
(defcfun ("VarR8FromDisp" var-r-8-from-disp :convention :stdcall) hresult  (|pdispIn| :pointer) (|lcid| lcid) (|pdblOut| :pointer))
(defcfun ("VarR8FromBool" var-r-8-from-bool :convention :stdcall) hresult  (|boolIn| variant_bool) (|pdblOut| :pointer))
(defcfun ("VarR8FromI1" var-r-8-from-i-1 :convention :stdcall) hresult  (|cIn| char) (|pdblOut| :pointer))
(defcfun ("VarR8FromUI2" var-r-8-from-ui-2 :convention :stdcall) hresult  (|uiIn| ushort) (|pdblOut| :pointer))
(defcfun ("VarR8FromUI4" var-r-8-from-ui-4 :convention :stdcall) hresult  (|ulIn| ulong) (|pdblOut| :pointer))
(defcfun ("VarR8FromUI8" var-r-8-from-ui-8 :convention :stdcall) hresult  (|ui64In| ulong64) (|pdblOut| :pointer))
(defcfun ("VarR8FromDec" var-r-8-from-dec :convention :stdcall) hresult  (|pdecIn| :pointer) (|pdblOut| :pointer))
(defcfun ("VarDateFromUI1" var-date-from-ui-1 :convention :stdcall) hresult  (|bIn| byte) (|pdateOut| :pointer))
(defcfun ("VarDateFromI2" var-date-from-i-2 :convention :stdcall) hresult  (|sIn| short) (|pdateOut| :pointer))
(defcfun ("VarDateFromI4" var-date-from-i-4 :convention :stdcall) hresult  (|lIn| long) (|pdateOut| :pointer))
(defcfun ("VarDateFromI8" var-date-from-i-8 :convention :stdcall) hresult  (|i64In| long64) (|pdateOut| :pointer))
(defcfun ("VarDateFromR4" var-date-from-r-4 :convention :stdcall) hresult  (|fltIn| float) (|pdateOut| :pointer))
(defcfun ("VarDateFromR8" var-date-from-r-8 :convention :stdcall) hresult  (|dblIn| double) (|pdateOut| :pointer))
(defcfun ("VarDateFromCy" var-date-from-cy :convention :stdcall) hresult  (|cyIn| cy) (|pdateOut| :pointer))
(defcfun ("VarDateFromStr" var-date-from-str :convention :stdcall) hresult  (|strIn| :pointer) (|lcid| lcid) (|dwFlags| ulong) (|pdateOut| :pointer))
(defcfun ("VarDateFromDisp" var-date-from-disp :convention :stdcall) hresult  (|pdispIn| :pointer) (|lcid| lcid) (|pdateOut| :pointer))
(defcfun ("VarDateFromBool" var-date-from-bool :convention :stdcall) hresult  (|boolIn| variant_bool) (|pdateOut| :pointer))
(defcfun ("VarDateFromI1" var-date-from-i-1 :convention :stdcall) hresult  (|cIn| char) (|pdateOut| :pointer))
(defcfun ("VarDateFromUI2" var-date-from-ui-2 :convention :stdcall) hresult  (|uiIn| ushort) (|pdateOut| :pointer))
(defcfun ("VarDateFromUI4" var-date-from-ui-4 :convention :stdcall) hresult  (|ulIn| ulong) (|pdateOut| :pointer))
(defcfun ("VarDateFromUI8" var-date-from-ui-8 :convention :stdcall) hresult  (|ui64In| ulong64) (|pdateOut| :pointer))
(defcfun ("VarDateFromDec" var-date-from-dec :convention :stdcall) hresult  (|pdecIn| :pointer) (|pdateOut| :pointer))
(defcfun ("VarCyFromUI1" var-cy-from-ui-1 :convention :stdcall) hresult  (|bIn| byte) (|pcyOut| :pointer))
(defcfun ("VarCyFromI2" var-cy-from-i-2 :convention :stdcall) hresult  (|sIn| short) (|pcyOut| :pointer))
(defcfun ("VarCyFromI4" var-cy-from-i-4 :convention :stdcall) hresult  (|lIn| long) (|pcyOut| :pointer))
(defcfun ("VarCyFromI8" var-cy-from-i-8 :convention :stdcall) hresult  (|i64In| long64) (|pcyOut| :pointer))
(defcfun ("VarCyFromR4" var-cy-from-r-4 :convention :stdcall) hresult  (|fltIn| float) (|pcyOut| :pointer))
(defcfun ("VarCyFromR8" var-cy-from-r-8 :convention :stdcall) hresult  (|dblIn| double) (|pcyOut| :pointer))
(defcfun ("VarCyFromDate" var-cy-from-date :convention :stdcall) hresult  (|dateIn| date) (|pcyOut| :pointer))
(defcfun ("VarCyFromStr" var-cy-from-str :convention :stdcall) hresult  (|strIn| :pointer) (|lcid| lcid) (|dwFlags| ulong) (|pcyOut| :pointer))
(defcfun ("VarCyFromDisp" var-cy-from-disp :convention :stdcall) hresult  (|pdispIn| :pointer) (|lcid| lcid) (|pcyOut| :pointer))
(defcfun ("VarCyFromBool" var-cy-from-bool :convention :stdcall) hresult  (|boolIn| variant_bool) (|pcyOut| :pointer))
(defcfun ("VarCyFromI1" var-cy-from-i-1 :convention :stdcall) hresult  (|cIn| char) (|pcyOut| :pointer))
(defcfun ("VarCyFromUI2" var-cy-from-ui-2 :convention :stdcall) hresult  (|uiIn| ushort) (|pcyOut| :pointer))
(defcfun ("VarCyFromUI4" var-cy-from-ui-4 :convention :stdcall) hresult  (|ulIn| ulong) (|pcyOut| :pointer))
(defcfun ("VarCyFromUI8" var-cy-from-ui-8 :convention :stdcall) hresult  (|ui64In| ulong64) (|pcyOut| :pointer))
(defcfun ("VarCyFromDec" var-cy-from-dec :convention :stdcall) hresult  (|pdecIn| :pointer) (|pcyOut| :pointer))
(defcfun ("VarBstrFromUI1" var-bstr-from-ui-1 :convention :stdcall) hresult  (|bVal| byte) (|lcid| lcid) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarBstrFromI2" var-bstr-from-i-2 :convention :stdcall) hresult  (|iVal| short) (|lcid| lcid) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarBstrFromI4" var-bstr-from-i-4 :convention :stdcall) hresult  (|lIn| long) (|lcid| lcid) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarBstrFromI8" var-bstr-from-i-8 :convention :stdcall) hresult  (|i64In| long64) (|lcid| lcid) (|dwFlags| :unsigned-long) (|pbstrOut| :pointer))
(defcfun ("VarBstrFromR4" var-bstr-from-r-4 :convention :stdcall) hresult  (|fltIn| float) (|lcid| lcid) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarBstrFromR8" var-bstr-from-r-8 :convention :stdcall) hresult  (|dblIn| double) (|lcid| lcid) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarBstrFromCy" var-bstr-from-cy :convention :stdcall) hresult  (|cyIn| cy) (|lcid| lcid) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarBstrFromDate" var-bstr-from-date :convention :stdcall) hresult  (|dateIn| date) (|lcid| lcid) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarBstrFromDisp" var-bstr-from-disp :convention :stdcall) hresult  (|pdispIn| :pointer) (|lcid| lcid) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarBstrFromBool" var-bstr-from-bool :convention :stdcall) hresult  (|boolIn| variant_bool) (|lcid| lcid) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarBstrFromI1" var-bstr-from-i-1 :convention :stdcall) hresult  (|cIn| char) (|lcid| lcid) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarBstrFromUI2" var-bstr-from-ui-2 :convention :stdcall) hresult  (|uiIn| ushort) (|lcid| lcid) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarBstrFromUI4" var-bstr-from-ui-4 :convention :stdcall) hresult  (|ulIn| ulong) (|lcid| lcid) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarBstrFromUI8" var-bstr-from-ui-8 :convention :stdcall) hresult  (|ui64In| ulong64) (|lcid| lcid) (|dwFlags| :unsigned-long) (|pbstrOut| :pointer))
(defcfun ("VarBstrFromDec" var-bstr-from-dec :convention :stdcall) hresult  (|pdecIn| :pointer) (|lcid| lcid) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarBoolFromUI1" var-bool-from-ui-1 :convention :stdcall) hresult  (|bIn| byte) (|pboolOut| :pointer))
(defcfun ("VarBoolFromI2" var-bool-from-i-2 :convention :stdcall) hresult  (|sIn| short) (|pboolOut| :pointer))
(defcfun ("VarBoolFromI4" var-bool-from-i-4 :convention :stdcall) hresult  (|lIn| long) (|pboolOut| :pointer))
(defcfun ("VarBoolFromI8" var-bool-from-i-8 :convention :stdcall) hresult  (|i64In| long64) (|pboolOut| :pointer))
(defcfun ("VarBoolFromR4" var-bool-from-r-4 :convention :stdcall) hresult  (|fltIn| float) (|pboolOut| :pointer))
(defcfun ("VarBoolFromR8" var-bool-from-r-8 :convention :stdcall) hresult  (|dblIn| double) (|pboolOut| :pointer))
(defcfun ("VarBoolFromDate" var-bool-from-date :convention :stdcall) hresult  (|dateIn| date) (|pboolOut| :pointer))
(defcfun ("VarBoolFromCy" var-bool-from-cy :convention :stdcall) hresult  (|cyIn| cy) (|pboolOut| :pointer))
(defcfun ("VarBoolFromStr" var-bool-from-str :convention :stdcall) hresult  (|strIn| :pointer) (|lcid| lcid) (|dwFlags| ulong) (|pboolOut| :pointer))
(defcfun ("VarBoolFromDisp" var-bool-from-disp :convention :stdcall) hresult  (|pdispIn| :pointer) (|lcid| lcid) (|pboolOut| :pointer))
(defcfun ("VarBoolFromI1" var-bool-from-i-1 :convention :stdcall) hresult  (|cIn| char) (|pboolOut| :pointer))
(defcfun ("VarBoolFromUI2" var-bool-from-ui-2 :convention :stdcall) hresult  (|uiIn| ushort) (|pboolOut| :pointer))
(defcfun ("VarBoolFromUI4" var-bool-from-ui-4 :convention :stdcall) hresult  (|ulIn| ulong) (|pboolOut| :pointer))
(defcfun ("VarBoolFromUI8" var-bool-from-ui-8 :convention :stdcall) hresult  (|i64In| ulong64) (|pboolOut| :pointer))
(defcfun ("VarBoolFromDec" var-bool-from-dec :convention :stdcall) hresult  (|pdecIn| :pointer) (|pboolOut| :pointer))
(defcfun ("VarI1FromUI1" var-i-1-from-ui-1 :convention :stdcall) hresult  (|bIn| byte) (|pcOut| :pointer))
(defcfun ("VarI1FromI2" var-i-1-from-i-2 :convention :stdcall) hresult  (|uiIn| short) (|pcOut| :pointer))
(defcfun ("VarI1FromI4" var-i-1-from-i-4 :convention :stdcall) hresult  (|lIn| long) (|pcOut| :pointer))
(defcfun ("VarI1FromI8" var-i-1-from-i-8 :convention :stdcall) hresult  (|i64In| long64) (|pcOut| :pointer))
(defcfun ("VarI1FromR4" var-i-1-from-r-4 :convention :stdcall) hresult  (|fltIn| float) (|pcOut| :pointer))
(defcfun ("VarI1FromR8" var-i-1-from-r-8 :convention :stdcall) hresult  (|dblIn| double) (|pcOut| :pointer))
(defcfun ("VarI1FromDate" var-i-1-from-date :convention :stdcall) hresult  (|dateIn| date) (|pcOut| :pointer))
(defcfun ("VarI1FromCy" var-i-1-from-cy :convention :stdcall) hresult  (|cyIn| cy) (|pcOut| :pointer))
(defcfun ("VarI1FromStr" var-i-1-from-str :convention :stdcall) hresult  (|strIn| :pointer) (|lcid| lcid) (|dwFlags| ulong) (|pcOut| :pointer))
(defcfun ("VarI1FromDisp" var-i-1-from-disp :convention :stdcall) hresult  (|pdispIn| :pointer) (|lcid| lcid) (|pcOut| :pointer))
(defcfun ("VarI1FromBool" var-i-1-from-bool :convention :stdcall) hresult  (|boolIn| variant_bool) (|pcOut| :pointer))
(defcfun ("VarI1FromUI2" var-i-1-from-ui-2 :convention :stdcall) hresult  (|uiIn| ushort) (|pcOut| :pointer))
(defcfun ("VarI1FromUI4" var-i-1-from-ui-4 :convention :stdcall) hresult  (|ulIn| ulong) (|pcOut| :pointer))
(defcfun ("VarI1FromUI8" var-i-1-from-ui-8 :convention :stdcall) hresult  (|i64In| ulong64) (|pcOut| :pointer))
(defcfun ("VarI1FromDec" var-i-1-from-dec :convention :stdcall) hresult  (|pdecIn| :pointer) (|pcOut| :pointer))
(defcfun ("VarUI2FromUI1" var-ui-2-from-ui-1 :convention :stdcall) hresult  (|bIn| byte) (|puiOut| :pointer))
(defcfun ("VarUI2FromI2" var-ui-2-from-i-2 :convention :stdcall) hresult  (|uiIn| short) (|puiOut| :pointer))
(defcfun ("VarUI2FromI4" var-ui-2-from-i-4 :convention :stdcall) hresult  (|lIn| long) (|puiOut| :pointer))
(defcfun ("VarUI2FromI8" var-ui-2-from-i-8 :convention :stdcall) hresult  (|i64In| long64) (|puiOut| :pointer))
(defcfun ("VarUI2FromR4" var-ui-2-from-r-4 :convention :stdcall) hresult  (|fltIn| float) (|puiOut| :pointer))
(defcfun ("VarUI2FromR8" var-ui-2-from-r-8 :convention :stdcall) hresult  (|dblIn| double) (|puiOut| :pointer))
(defcfun ("VarUI2FromDate" var-ui-2-from-date :convention :stdcall) hresult  (|dateIn| date) (|puiOut| :pointer))
(defcfun ("VarUI2FromCy" var-ui-2-from-cy :convention :stdcall) hresult  (|cyIn| cy) (|puiOut| :pointer))
(defcfun ("VarUI2FromStr" var-ui-2-from-str :convention :stdcall) hresult  (|strIn| :pointer) (|lcid| lcid) (|dwFlags| ulong) (|puiOut| :pointer))
(defcfun ("VarUI2FromDisp" var-ui-2-from-disp :convention :stdcall) hresult  (|pdispIn| :pointer) (|lcid| lcid) (|puiOut| :pointer))
(defcfun ("VarUI2FromBool" var-ui-2-from-bool :convention :stdcall) hresult  (|boolIn| variant_bool) (|puiOut| :pointer))
(defcfun ("VarUI2FromI1" var-ui-2-from-i-1 :convention :stdcall) hresult  (|cIn| char) (|puiOut| :pointer))
(defcfun ("VarUI2FromUI4" var-ui-2-from-ui-4 :convention :stdcall) hresult  (|ulIn| ulong) (|puiOut| :pointer))
(defcfun ("VarUI2FromUI8" var-ui-2-from-ui-8 :convention :stdcall) hresult  (|i64In| ulong64) (|puiOut| :pointer))
(defcfun ("VarUI2FromDec" var-ui-2-from-dec :convention :stdcall) hresult  (|pdecIn| :pointer) (|puiOut| :pointer))
(defcfun ("VarUI4FromUI1" var-ui-4-from-ui-1 :convention :stdcall) hresult  (|bIn| byte) (|pulOut| :pointer))
(defcfun ("VarUI4FromI2" var-ui-4-from-i-2 :convention :stdcall) hresult  (|uiIn| short) (|pulOut| :pointer))
(defcfun ("VarUI4FromI4" var-ui-4-from-i-4 :convention :stdcall) hresult  (|lIn| long) (|pulOut| :pointer))
(defcfun ("VarUI4FromI8" var-ui-4-from-i-8 :convention :stdcall) hresult  (|i64In| long64) (|plOut| :pointer))
(defcfun ("VarUI4FromR4" var-ui-4-from-r-4 :convention :stdcall) hresult  (|fltIn| float) (|pulOut| :pointer))
(defcfun ("VarUI4FromR8" var-ui-4-from-r-8 :convention :stdcall) hresult  (|dblIn| double) (|pulOut| :pointer))
(defcfun ("VarUI4FromDate" var-ui-4-from-date :convention :stdcall) hresult  (|dateIn| date) (|pulOut| :pointer))
(defcfun ("VarUI4FromCy" var-ui-4-from-cy :convention :stdcall) hresult  (|cyIn| cy) (|pulOut| :pointer))
(defcfun ("VarUI4FromStr" var-ui-4-from-str :convention :stdcall) hresult  (|strIn| :pointer) (|lcid| lcid) (|dwFlags| ulong) (|pulOut| :pointer))
(defcfun ("VarUI4FromDisp" var-ui-4-from-disp :convention :stdcall) hresult  (|pdispIn| :pointer) (|lcid| lcid) (|pulOut| :pointer))
(defcfun ("VarUI4FromBool" var-ui-4-from-bool :convention :stdcall) hresult  (|boolIn| variant_bool) (|pulOut| :pointer))
(defcfun ("VarUI4FromI1" var-ui-4-from-i-1 :convention :stdcall) hresult  (|cIn| char) (|pulOut| :pointer))
(defcfun ("VarUI4FromUI2" var-ui-4-from-ui-2 :convention :stdcall) hresult  (|uiIn| ushort) (|pulOut| :pointer))
(defcfun ("VarUI4FromUI8" var-ui-4-from-ui-8 :convention :stdcall) hresult  (|ui64In| ulong64) (|plOut| :pointer))
(defcfun ("VarUI4FromDec" var-ui-4-from-dec :convention :stdcall) hresult  (|pdecIn| :pointer) (|pulOut| :pointer))
(defcfun ("VarUI8FromUI1" var-ui-8-from-ui-1 :convention :stdcall) hresult  (|bIn| byte) (|pi64Out| :pointer))
(defcfun ("VarUI8FromI2" var-ui-8-from-i-2 :convention :stdcall) hresult  (|sIn| short) (|pi64Out| :pointer))
(defcfun ("VarUI8FromI4" var-ui-8-from-i-4 :convention :stdcall) hresult  (|lIn| long) (|pi64Out| :pointer))
(defcfun ("VarUI8FromI8" var-ui-8-from-i-8 :convention :stdcall) hresult  (|ui64In| long64) (|pi64Out| :pointer))
(defcfun ("VarUI8FromR4" var-ui-8-from-r-4 :convention :stdcall) hresult  (|fltIn| float) (|pi64Out| :pointer))
(defcfun ("VarUI8FromR8" var-ui-8-from-r-8 :convention :stdcall) hresult  (|dblIn| double) (|pi64Out| :pointer))
(defcfun ("VarUI8FromCy" var-ui-8-from-cy :convention :stdcall) hresult  (|cyIn| cy) (|pi64Out| :pointer))
(defcfun ("VarUI8FromDate" var-ui-8-from-date :convention :stdcall) hresult  (|dateIn| date) (|pi64Out| :pointer))
(defcfun ("VarUI8FromStr" var-ui-8-from-str :convention :stdcall) hresult  (|strIn| :pointer) (|lcid| lcid) (|dwFlags| :unsigned-long) (|pi64Out| :pointer))
(defcfun ("VarUI8FromDisp" var-ui-8-from-disp :convention :stdcall) hresult  (|pdispIn| :pointer) (|lcid| lcid) (|pi64Out| :pointer))
(defcfun ("VarUI8FromBool" var-ui-8-from-bool :convention :stdcall) hresult  (|boolIn| variant_bool) (|pi64Out| :pointer))
(defcfun ("VarUI8FromI1" var-ui-8-from-i-1 :convention :stdcall) hresult  (|cIn| char) (|pi64Out| :pointer))
(defcfun ("VarUI8FromUI2" var-ui-8-from-ui-2 :convention :stdcall) hresult  (|uiIn| ushort) (|pi64Out| :pointer))
(defcfun ("VarUI8FromUI4" var-ui-8-from-ui-4 :convention :stdcall) hresult  (|ulIn| ulong) (|pi64Out| :pointer))
(defcfun ("VarUI8FromDec" var-ui-8-from-dec :convention :stdcall) hresult  (|pdecIn| :pointer) (|pi64Out| :pointer))
(defcfun ("VarUI8FromInt" var-ui-8-from-int :convention :stdcall) hresult  (|intIn| int) (|pi64Out| :pointer))
(defcfun ("VarDecFromUI1" var-dec-from-ui-1 :convention :stdcall) hresult  (|bIn| byte) (|pdecOut| :pointer))
(defcfun ("VarDecFromI2" var-dec-from-i-2 :convention :stdcall) hresult  (|uiIn| short) (|pdecOut| :pointer))
(defcfun ("VarDecFromI4" var-dec-from-i-4 :convention :stdcall) hresult  (|lIn| long) (|pdecOut| :pointer))
(defcfun ("VarDecFromI8" var-dec-from-i-8 :convention :stdcall) hresult  (|i64In| long64) (|pdecOut| :pointer))
(defcfun ("VarDecFromR4" var-dec-from-r-4 :convention :stdcall) hresult  (|fltIn| float) (|pdecOut| :pointer))
(defcfun ("VarDecFromR8" var-dec-from-r-8 :convention :stdcall) hresult  (|dblIn| double) (|pdecOut| :pointer))
(defcfun ("VarDecFromDate" var-dec-from-date :convention :stdcall) hresult  (|dateIn| date) (|pdecOut| :pointer))
(defcfun ("VarDecFromCy" var-dec-from-cy :convention :stdcall) hresult  (|cyIn| cy) (|pdecOut| :pointer))
(defcfun ("VarDecFromStr" var-dec-from-str :convention :stdcall) hresult  (|strIn| :pointer) (|lcid| lcid) (|dwFlags| ulong) (|pdecOut| :pointer))
(defcfun ("VarDecFromDisp" var-dec-from-disp :convention :stdcall) hresult  (|pdispIn| :pointer) (|lcid| lcid) (|pdecOut| :pointer))
(defcfun ("VarDecFromBool" var-dec-from-bool :convention :stdcall) hresult  (|boolIn| variant_bool) (|pdecOut| :pointer))
(defcfun ("VarDecFromI1" var-dec-from-i-1 :convention :stdcall) hresult  (|cIn| char) (|pdecOut| :pointer))
(defcfun ("VarDecFromUI2" var-dec-from-ui-2 :convention :stdcall) hresult  (|uiIn| ushort) (|pdecOut| :pointer))
(defcfun ("VarDecFromUI4" var-dec-from-ui-4 :convention :stdcall) hresult  (|ulIn| ulong) (|pdecOut| :pointer))
(defcfun ("VarDecFromUI8" var-dec-from-ui-8 :convention :stdcall) hresult  (|ui64In| ulong64) (|pdecOut| :pointer))
(defcfun ("VarI4FromI8" var-i-4-from-i-8 :convention :stdcall) hresult  (|i64In| long64) (|plOut| :pointer))
(defcfun ("VarI4FromUI8" var-i-4-from-ui-8 :convention :stdcall) hresult  (|ui64In| ulong64) (|plOut| :pointer))
(defcfun ("VarParseNumFromStr" var-parse-num-from-str :convention :stdcall) hresult  (|strIn| :pointer) (|lcid| lcid) (|dwFlags| ulong) (|pnumprs| :pointer) (|rgbDig| :pointer))
(defcfun ("VarNumFromParseNum" var-num-from-parse-num :convention :stdcall) hresult  (|pnumprs| :pointer) (|rgbDig| :pointer) (|dwVtBits| ulong) (|pvar| :pointer))
(defcfun ("VarAdd" var-add :convention :stdcall) hresult  (|pvarLeft| lpvariant) (|pvarRight| lpvariant) (|pvarResult| lpvariant))
(defcfun ("VarAnd" var-and :convention :stdcall) hresult  (|pvarLeft| lpvariant) (|pvarRight| lpvariant) (|pvarResult| lpvariant))
(defcfun ("VarCat" var-cat :convention :stdcall) hresult  (|pvarLeft| lpvariant) (|pvarRight| lpvariant) (|pvarResult| lpvariant))
(defcfun ("VarDiv" var-div :convention :stdcall) hresult  (|pvarLeft| lpvariant) (|pvarRight| lpvariant) (|pvarResult| lpvariant))
(defcfun ("VarEqv" var-eqv :convention :stdcall) hresult  (|pvarLeft| lpvariant) (|pvarRight| lpvariant) (|pvarResult| lpvariant))
(defcfun ("VarIdiv" var-idiv :convention :stdcall) hresult  (|pvarLeft| lpvariant) (|pvarRight| lpvariant) (|pvarResult| lpvariant))
(defcfun ("VarImp" var-imp :convention :stdcall) hresult  (|pvarLeft| lpvariant) (|pvarRight| lpvariant) (|pvarResult| lpvariant))
(defcfun ("VarMod" var-mod :convention :stdcall) hresult  (|pvarLeft| lpvariant) (|pvarRight| lpvariant) (|pvarResult| lpvariant))
(defcfun ("VarMul" var-mul :convention :stdcall) hresult  (|pvarLeft| lpvariant) (|pvarRight| lpvariant) (|pvarResult| lpvariant))
(defcfun ("VarOr" var-or :convention :stdcall) hresult  (|pvarLeft| lpvariant) (|pvarRight| lpvariant) (|pvarResult| lpvariant))
(defcfun ("VarPow" var-pow :convention :stdcall) hresult  (|pvarLeft| lpvariant) (|pvarRight| lpvariant) (|pvarResult| lpvariant))
(defcfun ("VarSub" var-sub :convention :stdcall) hresult  (|pvarLeft| lpvariant) (|pvarRight| lpvariant) (|pvarResult| lpvariant))
(defcfun ("VarXor" var-xor :convention :stdcall) hresult  (|pvarLeft| lpvariant) (|pvarRight| lpvariant) (|pvarResult| lpvariant))
(defcfun ("VarAbs" var-abs :convention :stdcall) hresult  (|pvarIn| lpvariant) (|pvarResult| lpvariant))
(defcfun ("VarFix" var-fix :convention :stdcall) hresult  (|pvarIn| lpvariant) (|pvarResult| lpvariant))
(defcfun ("VarInt" var-int :convention :stdcall) hresult  (|pvarIn| lpvariant) (|pvarResult| lpvariant))
(defcfun ("VarNeg" var-neg :convention :stdcall) hresult  (|pvarIn| lpvariant) (|pvarResult| lpvariant))
(defcfun ("VarNot" var-not :convention :stdcall) hresult  (|pvarIn| lpvariant) (|pvarResult| lpvariant))
(defcfun ("VarRound" var-round :convention :stdcall) hresult  (|pvarIn| lpvariant) (|cDecimals| :int) (|pvarResult| lpvariant))
(defcfun ("VarCmp" var-cmp :convention :stdcall) hresult  (|pvarLeft| lpvariant) (|pvarRight| lpvariant) (|lcid| lcid) (|dwFlags| ulong))
(defcfun ("VarDecAdd" var-dec-add :convention :stdcall) hresult  (|pdecLeft| lpdecimal) (|pdecRight| lpdecimal) (|pdecResult| lpdecimal))
(defcfun ("VarDecDiv" var-dec-div :convention :stdcall) hresult  (|pdecLeft| lpdecimal) (|pdecRight| lpdecimal) (|pdecResult| lpdecimal))
(defcfun ("VarDecMul" var-dec-mul :convention :stdcall) hresult  (|pdecLeft| lpdecimal) (|pdecRight| lpdecimal) (|pdecResult| lpdecimal))
(defcfun ("VarDecSub" var-dec-sub :convention :stdcall) hresult  (|pdecLeft| lpdecimal) (|pdecRight| lpdecimal) (|pdecResult| lpdecimal))
(defcfun ("VarDecAbs" var-dec-abs :convention :stdcall) hresult  (|pdecIn| lpdecimal) (|pdecResult| lpdecimal))
(defcfun ("VarDecFix" var-dec-fix :convention :stdcall) hresult  (|pdecIn| lpdecimal) (|pdecResult| lpdecimal))
(defcfun ("VarDecInt" var-dec-int :convention :stdcall) hresult  (|pdecIn| lpdecimal) (|pdecResult| lpdecimal))
(defcfun ("VarDecNeg" var-dec-neg :convention :stdcall) hresult  (|pdecIn| lpdecimal) (|pdecResult| lpdecimal))
(defcfun ("VarDecRound" var-dec-round :convention :stdcall) hresult  (|pdecIn| lpdecimal) (|cDecimals| :int) (|pdecResult| lpdecimal))
(defcfun ("VarDecCmp" var-dec-cmp :convention :stdcall) hresult  (|pdecLeft| lpdecimal) (|pdecRight| lpdecimal))
(defcfun ("VarDecCmpR8" var-dec-cmp-r-8 :convention :stdcall) hresult  (|pdecLeft| lpdecimal) (|dblRight| :double))
(defcfun ("VarCyAdd" var-cy-add :convention :stdcall) hresult  (|cyLeft| cy) (|cyRight| cy) (|pcyResult| lpcy))
(defcfun ("VarCyMul" var-cy-mul :convention :stdcall) hresult  (|cyLeft| cy) (|cyRight| cy) (|pcyResult| lpcy))
(defcfun ("VarCyMulI4" var-cy-mul-i-4 :convention :stdcall) hresult  (|cyLeft| cy) (|lRight| :long) (|pcyResult| lpcy))
(defcfun ("VarCyMulI8" var-cy-mul-i-8 :convention :stdcall) hresult  (|cyLeft| cy) (|lRight| long64) (|pcyResult| lpcy))
(defcfun ("VarCySub" var-cy-sub :convention :stdcall) hresult  (|cyLeft| cy) (|cyRight| cy) (|pcyResult| lpcy))
(defcfun ("VarCyAbs" var-cy-abs :convention :stdcall) hresult  (|cyIn| cy) (|pcyResult| lpcy))
(defcfun ("VarCyFix" var-cy-fix :convention :stdcall) hresult  (|cyIn| cy) (|pcyResult| lpcy))
(defcfun ("VarCyInt" var-cy-int :convention :stdcall) hresult  (|cyIn| cy) (|pcyResult| lpcy))
(defcfun ("VarCyNeg" var-cy-neg :convention :stdcall) hresult  (|cyIn| cy) (|pcyResult| lpcy))
(defcfun ("VarCyRound" var-cy-round :convention :stdcall) hresult  (|cyIn| cy) (|cDecimals| :int) (|pcyResult| lpcy))
(defcfun ("VarCyCmp" var-cy-cmp :convention :stdcall) hresult  (|cyLeft| cy) (|cyRight| cy))
(defcfun ("VarCyCmpR8" var-cy-cmp-r-8 :convention :stdcall) hresult  (|cyLeft| cy) (|dblRight| :double))
(defcfun ("VarBstrCat" var-bstr-cat :convention :stdcall) hresult  (|bstrLeft| bstr) (|bstrRight| bstr) (|pbstrResult| lpbstr))
(defcfun ("VarBstrCmp" var-bstr-cmp :convention :stdcall) hresult  (|bstrLeft| bstr) (|bstrRight| bstr) (|lcid| lcid) (|dwFlags| ulong))
(defcfun ("VarR8Pow" var-r-8-pow :convention :stdcall) hresult  (|dblLeft| :double) (|dblRight| :double) (|pdblResult| :pointer))
(defcfun ("VarR4CmpR8" var-r-4-cmp-r-8 :convention :stdcall) hresult  (|fltLeft| :float) (|dblRight| :double))
(defcfun ("VarR8Round" var-r-8-round :convention :stdcall) hresult  (|dblIn| :double) (|cDecimals| :int) (|pdblResult| :pointer))
(defcfun ("VarDateFromUdate" var-date-from-udate :convention :stdcall) hresult  (|pudateIn| :pointer) (|dwFlags| ulong) (|pdateOut| :pointer))
(defcfun ("VarDateFromUdateEx" var-date-from-udate-ex :convention :stdcall) hresult  (|pudateIn| :pointer) (|lcid| lcid) (|dwFlags| ulong) (|pdateOut| :pointer))
(defcfun ("VarUdateFromDate" var-udate-from-date :convention :stdcall) hresult  (|dateIn| date) (|dwFlags| ulong) (|pudateOut| :pointer))
(defcfun ("GetAltMonthNames" get-alt-month-names :convention :stdcall) hresult  (|lcid| lcid) (|prgp| :pointer))
(defcfun ("VarFormat" var-format :convention :stdcall) hresult  (|pvarIn| lpvariant) (|pstrFormat| lpolestr) (|iFirstDay| :int) (|iFirstWeek| :int) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarFormatDateTime" var-format-date-time :convention :stdcall) hresult  (|pvarIn| lpvariant) (|iNamedFormat| :int) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarFormatNumber" var-format-number :convention :stdcall) hresult  (|pvarIn| lpvariant) (|iNumDig| :int) (|iIncLead| :int) (|iUseParens| :int) (|iGroup| :int) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarFormatPercent" var-format-percent :convention :stdcall) hresult  (|pvarIn| lpvariant) (|iNumDig| :int) (|iIncLead| :int) (|iUseParens| :int) (|iGroup| :int) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarFormatCurrency" var-format-currency :convention :stdcall) hresult  (|pvarIn| lpvariant) (|iNumDig| :int) (|iIncLead| :int) (|iUseParens| :int) (|iGroup| :int) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarWeekdayName" var-weekday-name :convention :stdcall) hresult  (|iWeekday| :int) (|fAbbrev| :int) (|iFirstDay| :int) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarMonthName" var-month-name :convention :stdcall) hresult  (|iMonth| :int) (|fAbbrev| :int) (|dwFlags| ulong) (|pbstrOut| :pointer))
(defcfun ("VarFormatFromTokens" var-format-from-tokens :convention :stdcall) hresult  (|pvarIn| lpvariant) (|pstrFormat| lpolestr) (|pbTokCur| lpbyte) (|dwFlags| ulong) (|pbstrOut| :pointer) (|lcid| lcid))
(defcfun ("VarTokenizeFormatString" var-tokenize-format-string :convention :stdcall) hresult  (|pstrFormat| lpolestr) (|rgbTok| lpbyte) (|cbTok| :int) (|iFirstDay| :int) (|iFirstWeek| :int) (|lcid| lcid) (|pcbActual| :pointer))
(defcfun ("LHashValOfNameSysA" lhash-val-of-name-sys-a :convention :stdcall) ulong  (|syskind| syskind) (|lcid| lcid) (|szName| lpcstr))
(defcfun ("LHashValOfNameSys" lhash-val-of-name-sys :convention :stdcall) ulong  (|syskind| syskind) (|lcid| lcid) (|szName| :pointer))
(defcfun ("LoadTypeLib" load-type-lib :convention :stdcall) hresult  (|szFile| :pointer) (|pptlib| :pointer))
(defcfun ("LoadTypeLibEx" load-type-lib-ex :convention :stdcall) hresult  (|szFile| lpcolestr) (|regkind| regkind) (|pptlib| :pointer))
(defcfun ("LoadRegTypeLib" load-reg-type-lib :convention :stdcall) hresult  (|rguid| :pointer) (|wVerMajor| word) (|wVerMinor| word) (|lcid| lcid) (|pptlib| :pointer))
(defcfun ("QueryPathOfRegTypeLib" query-path-of-reg-type-lib :convention :stdcall) hresult  (|guid| :pointer) (|wMaj| ushort) (|wMin| ushort) (|lcid| lcid) (|lpbstrPathName| lpbstr))
(defcfun ("RegisterTypeLib" register-type-lib :convention :stdcall) hresult  (|ptlib| :pointer) (|szFullPath| :pointer) (|szHelpDir| :pointer))
(defcfun ("UnRegisterTypeLib" un-register-type-lib :convention :stdcall) hresult  (|libID| :pointer) (|wVerMajor| word) (|wVerMinor| word) (|lcid| lcid) (|syskind| syskind))
(defcfun ("CreateTypeLib" create-type-lib :convention :stdcall) hresult  (|syskind| syskind) (|szFile| :pointer) (|ppctlib| :pointer))
(defcfun ("CreateTypeLib2" create-type-lib-2 :convention :stdcall) hresult  (|syskind| syskind) (|szFile| lpcolestr) (|ppctlib| :pointer))
(defcfun ("DispGetParam" disp-get-param :convention :stdcall) hresult  (|pdispparams| :pointer) (|position| uint) (|vtTarg| vartype) (|pvarResult| :pointer) (|puArgErr| :pointer))
(defcfun ("DispGetIDsOfNames" disp-get-ids-of-names :convention :stdcall) hresult  (|ptinfo| :pointer) (|rgszNames| :pointer) (|cNames| uint) (|rgdispid| :pointer))
(defcfun ("DispInvoke" disp-invoke :convention :stdcall) hresult  (|_this| :pointer) (|ptinfo| :pointer) (|dispidMember| dispid) (|wFlags| word) (|pparams| :pointer) (|pvarResult| :pointer) (|pexcepinfo| :pointer) (|puArgErr| :pointer))
(defcfun ("CreateDispTypeInfo" create-disp-type-info :convention :stdcall) hresult  (|pidata| :pointer) (|lcid| lcid) (|pptinfo| :pointer))
(defcfun ("CreateStdDispatch" create-std-dispatch :convention :stdcall) hresult  (|punkOuter| :pointer) (|pvThis| :pointer) (|ptinfo| :pointer) (|ppunkStdDisp| :pointer))
(defcfun ("DispCallFunc" disp-call-func :convention :stdcall) hresult  (|pvInstance| :pointer) (|oVft| ulong_ptr) (|cc| callconv) (|vtReturn| vartype) (|cActuals| uint) (|prgvt| :pointer) (|prgpvarg| :pointer) (|pvargResult| :pointer))
(defcfun ("RegisterActiveObject" register-active-object :convention :stdcall) hresult  (|punk| :pointer) (|rclsid| :pointer) (|dwFlags| dword) (|pdwRegister| :pointer))
(defcfun ("RevokeActiveObject" revoke-active-object :convention :stdcall) hresult  (|dwRegister| dword) (|pvReserved| :pointer))
(defcfun ("GetActiveObject" get-active-object :convention :stdcall) hresult  (|rclsid| :pointer) (|pvReserved| :pointer) (|ppunk| :pointer))
(defcfun ("SetErrorInfo" set-error-info :convention :stdcall) hresult  (|dwReserved| ulong) (|perrinfo| :pointer))
(defcfun ("GetErrorInfo" get-error-info :convention :stdcall) hresult  (|dwReserved| ulong) (|pperrinfo| :pointer))
(defcfun ("CreateErrorInfo" create-error-info :convention :stdcall) hresult  (|pperrinfo| :pointer))
(defcfun ("GetRecordInfoFromTypeInfo" get-record-info-from-type-info :convention :stdcall) hresult  (|pTypeInfo| :pointer) (|ppRecInfo| :pointer))
(defcfun ("GetRecordInfoFromGuids" get-record-info-from-guids :convention :stdcall) hresult  (|rGuidTypeLib| :pointer) (|uVerMajor| ulong) (|uVerMinor| ulong) (|lcid| lcid) (|rGuidTypeInfo| :pointer) (|ppRecInfo| :pointer))
(defcfun ("OaBuildVersion" oa-build-version :convention :stdcall) ulong )
(defcfun ("ClearCustData" clear-cust-data :convention :stdcall) :void  (|pCustData| lpcustdata))
(defcfun ("CreateDataAdviseHolder" create-data-advise-holder :convention :stdcall) hresult  (|ppDAHolder| :pointer))
(defcfun ("OleBuildVersion" ole-build-version :convention :stdcall) dword )
(defcfun ("ReadClassStg" read-class-stg :convention :stdcall) hresult  (|pStg| lpstorage) (|pclsid| :pointer))
(defcfun ("WriteClassStg" write-class-stg :convention :stdcall) hresult  (|pStg| lpstorage) (|rclsid| :pointer))
(defcfun ("ReadClassStm" read-class-stm :convention :stdcall) hresult  (|pStm| lpstream) (|pclsid| :pointer))
(defcfun ("WriteClassStm" write-class-stm :convention :stdcall) hresult  (|pStm| lpstream) (|rclsid| :pointer))
(defcfun ("WriteFmtUserTypeStg" write-fmt-user-type-stg :convention :stdcall) hresult  (|pstg| lpstorage) (|cf| clipformat) (|lpszUserType| lpolestr))
(defcfun ("ReadFmtUserTypeStg" read-fmt-user-type-stg :convention :stdcall) hresult  (|pstg| lpstorage) (|pcf| :pointer) (|lplpszUserType| :pointer))
(defcfun ("OleInitialize" ole-initialize :convention :stdcall) hresult  (|pvReserved| lpvoid))
(defcfun ("OleUninitialize" ole-uninitialize :convention :stdcall) :void )
(defcfun ("OleQueryLinkFromData" ole-query-link-from-data :convention :stdcall) hresult  (|pSrcDataObject| lpdataobject))
(defcfun ("OleQueryCreateFromData" ole-query-create-from-data :convention :stdcall) hresult  (|pSrcDataObject| lpdataobject))
(defcfun ("OleCreate" ole-create :convention :stdcall) hresult  (|rclsid| :pointer) (|riid| :pointer) (|renderopt| dword) (|pFormatEtc| lpformatetc) (|pClientSite| lpoleclientsite) (|pStg| lpstorage) (|ppvObj| :pointer))
(defcfun ("OleCreateEx" ole-create-ex :convention :stdcall) hresult  (|rclsid| :pointer) (|riid| :pointer) (|dwFlags| dword) (|renderopt| dword) (|cFormats| ulong) (|rgAdvf| :pointer) (|rgFormatEtc| lpformatetc) (|lpAdviseSink| :pointer) (|rgdwConnection| :pointer) (|pClientSite| lpoleclientsite) (|pStg| lpstorage) (|ppvObj| :pointer))
(defcfun ("OleCreateFromData" ole-create-from-data :convention :stdcall) hresult  (|pSrcDataObj| lpdataobject) (|riid| :pointer) (|renderopt| dword) (|pFormatEtc| lpformatetc) (|pClientSite| lpoleclientsite) (|pStg| lpstorage) (|ppvObj| :pointer))
(defcfun ("OleCreateFromDataEx" ole-create-from-data-ex :convention :stdcall) hresult  (|pSrcDataObj| lpdataobject) (|riid| :pointer) (|dwFlags| dword) (|renderopt| dword) (|cFormats| ulong) (|rgAdvf| :pointer) (|rgFormatEtc| lpformatetc) (|lpAdviseSink| :pointer) (|rgdwConnection| :pointer) (|pClientSite| lpoleclientsite) (|pStg| lpstorage) (|ppvObj| :pointer))
(defcfun ("OleCreateLinkFromData" ole-create-link-from-data :convention :stdcall) hresult  (|pSrcDataObj| lpdataobject) (|riid| :pointer) (|renderopt| dword) (|pFormatEtc| lpformatetc) (|pClientSite| lpoleclientsite) (|pStg| lpstorage) (|ppvObj| :pointer))
(defcfun ("OleCreateLinkFromDataEx" ole-create-link-from-data-ex :convention :stdcall) hresult  (|pSrcDataObj| lpdataobject) (|riid| :pointer) (|dwFlags| dword) (|renderopt| dword) (|cFormats| ulong) (|rgAdvf| :pointer) (|rgFormatEtc| lpformatetc) (|lpAdviseSink| :pointer) (|rgdwConnection| :pointer) (|pClientSite| lpoleclientsite) (|pStg| lpstorage) (|ppvObj| :pointer))
(defcfun ("OleCreateStaticFromData" ole-create-static-from-data :convention :stdcall) hresult  (|pSrcDataObj| lpdataobject) (|iid| :pointer) (|renderopt| dword) (|pFormatEtc| lpformatetc) (|pClientSite| lpoleclientsite) (|pStg| lpstorage) (|ppvObj| :pointer))
(defcfun ("OleCreateLink" ole-create-link :convention :stdcall) hresult  (|pmkLinkSrc| lpmoniker) (|riid| :pointer) (|renderopt| dword) (|lpFormatEtc| lpformatetc) (|pClientSite| lpoleclientsite) (|pStg| lpstorage) (|ppvObj| :pointer))
(defcfun ("OleCreateLinkEx" ole-create-link-ex :convention :stdcall) hresult  (|pmkLinkSrc| lpmoniker) (|riid| :pointer) (|dwFlags| dword) (|renderopt| dword) (|cFormats| ulong) (|rgAdvf| :pointer) (|rgFormatEtc| lpformatetc) (|lpAdviseSink| :pointer) (|rgdwConnection| :pointer) (|pClientSite| lpoleclientsite) (|pStg| lpstorage) (|ppvObj| :pointer))
(defcfun ("OleCreateLinkToFile" ole-create-link-to-file :convention :stdcall) hresult  (|lpszFileName| lpcolestr) (|riid| :pointer) (|renderopt| dword) (|lpFormatEtc| lpformatetc) (|pClientSite| lpoleclientsite) (|pStg| lpstorage) (|ppvObj| :pointer))
(defcfun ("OleCreateLinkToFileEx" ole-create-link-to-file-ex :convention :stdcall) hresult  (|lpszFileName| lpcolestr) (|riid| :pointer) (|dwFlags| dword) (|renderopt| dword) (|cFormats| ulong) (|rgAdvf| :pointer) (|rgFormatEtc| lpformatetc) (|lpAdviseSink| :pointer) (|rgdwConnection| :pointer) (|pClientSite| lpoleclientsite) (|pStg| lpstorage) (|ppvObj| :pointer))
(defcfun ("OleCreateFromFile" ole-create-from-file :convention :stdcall) hresult  (|rclsid| :pointer) (|lpszFileName| lpcolestr) (|riid| :pointer) (|renderopt| dword) (|lpFormatEtc| lpformatetc) (|pClientSite| lpoleclientsite) (|pStg| lpstorage) (|ppvObj| :pointer))
(defcfun ("OleCreateFromFileEx" ole-create-from-file-ex :convention :stdcall) hresult  (|rclsid| :pointer) (|lpszFileName| lpcolestr) (|riid| :pointer) (|dwFlags| dword) (|renderopt| dword) (|cFormats| ulong) (|rgAdvf| :pointer) (|rgFormatEtc| lpformatetc) (|lpAdviseSink| :pointer) (|rgdwConnection| :pointer) (|pClientSite| lpoleclientsite) (|pStg| lpstorage) (|ppvObj| :pointer))
(defcfun ("OleLoad" ole-load :convention :stdcall) hresult  (|pStg| lpstorage) (|riid| :pointer) (|pClientSite| lpoleclientsite) (|ppvObj| :pointer))
(defcfun ("OleSave" ole-save :convention :stdcall) hresult  (|pPS| lppersiststorage) (|pStg| lpstorage) (|fSameAsLoad| winbool))
(defcfun ("OleLoadFromStream" ole-load-from-stream :convention :stdcall) hresult  (|pStm| lpstream) (|iidInterface| :pointer) (|ppvObj| :pointer))
(defcfun ("OleSaveToStream" ole-save-to-stream :convention :stdcall) hresult  (|pPStm| lppersiststream) (|pStm| lpstream))
(defcfun ("OleSetContainedObject" ole-set-contained-object :convention :stdcall) hresult  (|pUnknown| lpunknown) (|fContained| winbool))
(defcfun ("OleNoteObjectVisible" ole-note-object-visible :convention :stdcall) hresult  (|pUnknown| lpunknown) (|fVisible| winbool))
(defcfun ("RegisterDragDrop" register-drag-drop :convention :stdcall) hresult  (|hwnd| hwnd) (|pDropTarget| lpdroptarget))
(defcfun ("RevokeDragDrop" revoke-drag-drop :convention :stdcall) hresult  (|hwnd| hwnd))
(defcfun ("DoDragDrop" do-drag-drop :convention :stdcall) hresult  (|pDataObj| lpdataobject) (|pDropSource| lpdropsource) (|dwOKEffects| dword) (|pdwEffect| lpdword))
(defcfun ("OleSetClipboard" ole-set-clipboard :convention :stdcall) hresult  (|pDataObj| lpdataobject))
(defcfun ("OleGetClipboard" ole-get-clipboard :convention :stdcall) hresult  (|ppDataObj| :pointer))
(defcfun ("OleFlushClipboard" ole-flush-clipboard :convention :stdcall) hresult )
(defcfun ("OleIsCurrentClipboard" ole-is-current-clipboard :convention :stdcall) hresult  (|pDataObj| lpdataobject))
(defcfun ("OleCreateMenuDescriptor" ole-create-menu-descriptor :convention :stdcall) holemenu  (|hmenuCombined| hmenu) (|lpMenuWidths| lpolemenugroupwidths))
(defcfun ("OleSetMenuDescriptor" ole-set-menu-descriptor :convention :stdcall) hresult  (|holemenu| holemenu) (|hwndFrame| hwnd) (|hwndActiveObject| hwnd) (|lpFrame| lpoleinplaceframe) (|lpActiveObj| lpoleinplaceactiveobject))
(defcfun ("OleDestroyMenuDescriptor" ole-destroy-menu-descriptor :convention :stdcall) hresult  (|holemenu| holemenu))
(defcfun ("OleTranslateAccelerator" ole-translate-accelerator :convention :stdcall) hresult  (|lpFrame| lpoleinplaceframe) (|lpFrameInfo| lpoleinplaceframeinfo) (|lpmsg| lpmsg))
(defcfun ("OleDuplicateData" ole-duplicate-data :convention :stdcall) handle  (|hSrc| handle) (|cfFormat| clipformat) (|uiFlags| uint))
(defcfun ("OleDraw" ole-draw :convention :stdcall) hresult  (|pUnknown| lpunknown) (|dwAspect| dword) (|hdcDraw| hdc) (|lprcBounds| lpcrect))
(defcfun ("OleRun" ole-run :convention :stdcall) hresult  (|pUnknown| lpunknown))
(defcfun ("OleIsRunning" ole-is-running :convention :stdcall) winbool  (|pObject| lpoleobject))
(defcfun ("OleLockRunning" ole-lock-running :convention :stdcall) hresult  (|pUnknown| lpunknown) (|fLock| winbool) (|fLastUnlockCloses| winbool))
(defcfun ("ReleaseStgMedium" release-stg-medium :convention :stdcall) :void  (arg0 lpstgmedium))
(defcfun ("CreateOleAdviseHolder" create-ole-advise-holder :convention :stdcall) hresult  (|ppOAHolder| :pointer))
(defcfun ("OleCreateDefaultHandler" ole-create-default-handler :convention :stdcall) hresult  (|clsid| :pointer) (|pUnkOuter| lpunknown) (|riid| :pointer) (|lplpObj| :pointer))
(defcfun ("OleCreateEmbeddingHelper" ole-create-embedding-helper :convention :stdcall) hresult  (|clsid| :pointer) (|pUnkOuter| lpunknown) (|flags| dword) (|pCF| lpclassfactory) (|riid| :pointer) (|lplpObj| :pointer))
(defcfun ("IsAccelerator" is-accelerator :convention :stdcall) winbool  (|hAccel| haccel) (|cAccelEntries| :int) (|lpMsg| lpmsg) (|lpwCmd| :pointer))
(defcfun ("OleGetIconOfFile" ole-get-icon-of-file :convention :stdcall) hglobal  (|lpszPath| lpolestr) (|fUseFileAsLabel| winbool))
(defcfun ("OleGetIconOfClass" ole-get-icon-of-class :convention :stdcall) hglobal  (|rclsid| :pointer) (|lpszLabel| lpolestr) (|fUseTypeAsLabel| winbool))
(defcfun ("OleMetafilePictFromIconAndLabel" ole-metafile-pict-from-icon-and-label :convention :stdcall) hglobal  (|hIcon| hicon) (|lpszLabel| lpolestr) (|lpszSourceFile| lpolestr) (|iIconIndex| uint))
(defcfun ("OleRegGetUserType" ole-reg-get-user-type :convention :stdcall) hresult  (|clsid| :pointer) (|dwFormOfType| dword) (|pszUserType| :pointer))
(defcfun ("OleRegGetMiscStatus" ole-reg-get-misc-status :convention :stdcall) hresult  (|clsid| :pointer) (|dwAspect| dword) (|pdwStatus| :pointer))
(defcfun ("OleRegEnumFormatEtc" ole-reg-enum-format-etc :convention :stdcall) hresult  (|clsid| :pointer) (|dwDirection| dword) (|ppenum| :pointer))
(defcfun ("OleRegEnumVerbs" ole-reg-enum-verbs :convention :stdcall) hresult  (|clsid| :pointer) (|ppenum| :pointer))
(defcfun ("OleConvertOLESTREAMToIStorage" ole-convert-olestream-to-istorage :convention :stdcall) hresult  (|lpolestream| lpolestream) (|pstg| lpstorage) (|ptd| :pointer))
(defcfun ("OleConvertIStorageToOLESTREAM" ole-convert-istorage-to-olestream :convention :stdcall) hresult  (|pstg| lpstorage) (|lpolestream| lpolestream))
(defcfun ("GetHGlobalFromILockBytes" get-hglobal-from-ilock-bytes :convention :stdcall) hresult  (|plkbyt| lplockbytes) (|phglobal| :pointer))
(defcfun ("CreateILockBytesOnHGlobal" create-ilock-bytes-on-hglobal :convention :stdcall) hresult  (|hGlobal| hglobal) (|fDeleteOnRelease| winbool) (|pplkbyt| :pointer))
(defcfun ("GetHGlobalFromStream" get-hglobal-from-stream :convention :stdcall) hresult  (|pstm| lpstream) (|phglobal| :pointer))
(defcfun ("CreateStreamOnHGlobal" create-stream-on-hglobal :convention :stdcall) hresult  (|hGlobal| hglobal) (|fDeleteOnRelease| winbool) (|ppstm| :pointer))
(defcfun ("OleDoAutoConvert" ole-do-auto-convert :convention :stdcall) hresult  (|pStg| lpstorage) (|pClsidNew| lpclsid))
(defcfun ("OleGetAutoConvert" ole-get-auto-convert :convention :stdcall) hresult  (|clsidOld| :pointer) (|pClsidNew| lpclsid))
(defcfun ("OleSetAutoConvert" ole-set-auto-convert :convention :stdcall) hresult  (|clsidOld| :pointer) (|clsidNew| :pointer))
(defcfun ("GetConvertStg" get-convert-stg :convention :stdcall) hresult  (|pStg| lpstorage))
(defcfun ("SetConvertStg" set-convert-stg :convention :stdcall) hresult  (|pStg| lpstorage) (|fConvert| winbool))
(defcfun ("OleConvertIStorageToOLESTREAMEx" ole-convert-istorage-to-olestream-ex :convention :stdcall) hresult  (|pstg| lpstorage) (|cfFormat| clipformat) (|lWidth| long) (|lHeight| long) (|dwSize| dword) (|pmedium| lpstgmedium) (|polestm| lpolestream))
(defcfun ("OleConvertOLESTREAMToIStorageEx" ole-convert-olestream-to-istorage-ex :convention :stdcall) hresult  (|polestm| lpolestream) (|pstg| lpstorage) (|pcfFormat| :pointer) (|plwWidth| :pointer) (|plHeight| :pointer) (|pdwSize| :pointer) (|pmedium| lpstgmedium))
(defcfun ("GetOpenFileNameA" get-open-file-name-a :convention :stdcall) winbool  (arg0 lpopenfilenamea))
(defcfun ("GetOpenFileNameW" get-open-file-name-w :convention :stdcall) winbool  (arg0 lpopenfilenamew))
(defcfun ("GetSaveFileNameA" get-save-file-name-a :convention :stdcall) winbool  (arg0 lpopenfilenamea))
(defcfun ("GetSaveFileNameW" get-save-file-name-w :convention :stdcall) winbool  (arg0 lpopenfilenamew))
(defcfun ("GetFileTitleA" get-file-title-a :convention :stdcall) :short  (arg0 lpcstr) (arg1 lpstr) (arg2 word))
(defcfun ("GetFileTitleW" get-file-title-w :convention :stdcall) :short  (arg0 lpcwstr) (arg1 lpwstr) (arg2 word))
(defcfun ("ChooseColorA" choose-color-a :convention :stdcall) winbool  (arg0 lpchoosecolora))
(defcfun ("ChooseColorW" choose-color-w :convention :stdcall) winbool  (arg0 lpchoosecolorw))
(defcfun ("FindTextA" find-text-a :convention :stdcall) hwnd  (arg0 lpfindreplacea))
(defcfun ("FindTextW" find-text-w :convention :stdcall) hwnd  (arg0 lpfindreplacew))
(defcfun ("ReplaceTextA" replace-text-a :convention :stdcall) hwnd  (arg0 lpfindreplacea))
(defcfun ("ReplaceTextW" replace-text-w :convention :stdcall) hwnd  (arg0 lpfindreplacew))
(defcfun ("ChooseFontA" choose-font-a :convention :stdcall) winbool  (arg0 lpchoosefonta))
(defcfun ("ChooseFontW" choose-font-w :convention :stdcall) winbool  (arg0 lpchoosefontw))
(defcfun ("PrintDlgA" print-dlg-a :convention :stdcall) winbool  (arg0 lpprintdlga))
(defcfun ("PrintDlgW" print-dlg-w :convention :stdcall) winbool  (arg0 lpprintdlgw))
(defcfun ("PrintDlgExA" print-dlg-ex-a :convention :stdcall) hresult  (arg0 lpprintdlgexa))
(defcfun ("PrintDlgExW" print-dlg-ex-w :convention :stdcall) hresult  (arg0 lpprintdlgexw))
(defcfun ("CommDlgExtendedError" comm-dlg-extended-error :convention :stdcall) dword )
(defcfun ("PageSetupDlgA" page-setup-dlg-a :convention :stdcall) winbool  (arg0 lppagesetupdlga))
(defcfun ("PageSetupDlgW" page-setup-dlg-w :convention :stdcall) winbool  (arg0 lppagesetupdlgw))
(defcfun ("ua_wcscpy" ua-wcscpy) puwstr  (|Destination| puwstr) (|Source| pcuwstr))
(defcfun ("ChangeServiceConfigA" change-service-config-a :convention :stdcall) winbool  (|hService| sc_handle) (|dwServiceType| dword) (|dwStartType| dword) (|dwErrorControl| dword) (|lpBinaryPathName| lpcstr) (|lpLoadOrderGroup| lpcstr) (|lpdwTagId| lpdword) (|lpDependencies| lpcstr) (|lpServiceStartName| lpcstr) (|lpPassword| lpcstr) (|lpDisplayName| lpcstr))
(defcfun ("ChangeServiceConfigW" change-service-config-w :convention :stdcall) winbool  (|hService| sc_handle) (|dwServiceType| dword) (|dwStartType| dword) (|dwErrorControl| dword) (|lpBinaryPathName| lpcwstr) (|lpLoadOrderGroup| lpcwstr) (|lpdwTagId| lpdword) (|lpDependencies| lpcwstr) (|lpServiceStartName| lpcwstr) (|lpPassword| lpcwstr) (|lpDisplayName| lpcwstr))
(defcfun ("ChangeServiceConfig2A" change-service-config-2-a :convention :stdcall) winbool  (|hService| sc_handle) (|dwInfoLevel| dword) (|lpInfo| lpvoid))
(defcfun ("ChangeServiceConfig2W" change-service-config-2-w :convention :stdcall) winbool  (|hService| sc_handle) (|dwInfoLevel| dword) (|lpInfo| lpvoid))
(defcfun ("CloseServiceHandle" close-service-handle :convention :stdcall) winbool  (|hSCObject| sc_handle))
(defcfun ("ControlService" control-service :convention :stdcall) winbool  (|hService| sc_handle) (|dwControl| dword) (|lpServiceStatus| lpservice_status))
(defcfun ("CreateServiceA" create-service-a :convention :stdcall) sc_handle  (|hSCManager| sc_handle) (|lpServiceName| lpcstr) (|lpDisplayName| lpcstr) (|dwDesiredAccess| dword) (|dwServiceType| dword) (|dwStartType| dword) (|dwErrorControl| dword) (|lpBinaryPathName| lpcstr) (|lpLoadOrderGroup| lpcstr) (|lpdwTagId| lpdword) (|lpDependencies| lpcstr) (|lpServiceStartName| lpcstr) (|lpPassword| lpcstr))
(defcfun ("CreateServiceW" create-service-w :convention :stdcall) sc_handle  (|hSCManager| sc_handle) (|lpServiceName| lpcwstr) (|lpDisplayName| lpcwstr) (|dwDesiredAccess| dword) (|dwServiceType| dword) (|dwStartType| dword) (|dwErrorControl| dword) (|lpBinaryPathName| lpcwstr) (|lpLoadOrderGroup| lpcwstr) (|lpdwTagId| lpdword) (|lpDependencies| lpcwstr) (|lpServiceStartName| lpcwstr) (|lpPassword| lpcwstr))
(defcfun ("DeleteService" delete-service :convention :stdcall) winbool  (|hService| sc_handle))
(defcfun ("EnumDependentServicesA" enum-dependent-services-a :convention :stdcall) winbool  (|hService| sc_handle) (|dwServiceState| dword) (|lpServices| lpenum_service_statusa) (|cbBufSize| dword) (|pcbBytesNeeded| lpdword) (|lpServicesReturned| lpdword))
(defcfun ("EnumDependentServicesW" enum-dependent-services-w :convention :stdcall) winbool  (|hService| sc_handle) (|dwServiceState| dword) (|lpServices| lpenum_service_statusw) (|cbBufSize| dword) (|pcbBytesNeeded| lpdword) (|lpServicesReturned| lpdword))
(defcfun ("EnumServicesStatusA" enum-services-status-a :convention :stdcall) winbool  (|hSCManager| sc_handle) (|dwServiceType| dword) (|dwServiceState| dword) (|lpServices| lpenum_service_statusa) (|cbBufSize| dword) (|pcbBytesNeeded| lpdword) (|lpServicesReturned| lpdword) (|lpResumeHandle| lpdword))
(defcfun ("EnumServicesStatusW" enum-services-status-w :convention :stdcall) winbool  (|hSCManager| sc_handle) (|dwServiceType| dword) (|dwServiceState| dword) (|lpServices| lpenum_service_statusw) (|cbBufSize| dword) (|pcbBytesNeeded| lpdword) (|lpServicesReturned| lpdword) (|lpResumeHandle| lpdword))
(defcfun ("EnumServicesStatusExA" enum-services-status-ex-a :convention :stdcall) winbool  (|hSCManager| sc_handle) (|InfoLevel| sc_enum_type) (|dwServiceType| dword) (|dwServiceState| dword) (|lpServices| lpbyte) (|cbBufSize| dword) (|pcbBytesNeeded| lpdword) (|lpServicesReturned| lpdword) (|lpResumeHandle| lpdword) (|pszGroupName| lpcstr))
(defcfun ("EnumServicesStatusExW" enum-services-status-ex-w :convention :stdcall) winbool  (|hSCManager| sc_handle) (|InfoLevel| sc_enum_type) (|dwServiceType| dword) (|dwServiceState| dword) (|lpServices| lpbyte) (|cbBufSize| dword) (|pcbBytesNeeded| lpdword) (|lpServicesReturned| lpdword) (|lpResumeHandle| lpdword) (|pszGroupName| lpcwstr))
(defcfun ("GetServiceKeyNameA" get-service-key-name-a :convention :stdcall) winbool  (|hSCManager| sc_handle) (|lpDisplayName| lpcstr) (|lpServiceName| lpstr) (|lpcchBuffer| lpdword))
(defcfun ("GetServiceKeyNameW" get-service-key-name-w :convention :stdcall) winbool  (|hSCManager| sc_handle) (|lpDisplayName| lpcwstr) (|lpServiceName| lpwstr) (|lpcchBuffer| lpdword))
(defcfun ("GetServiceDisplayNameA" get-service-display-name-a :convention :stdcall) winbool  (|hSCManager| sc_handle) (|lpServiceName| lpcstr) (|lpDisplayName| lpstr) (|lpcchBuffer| lpdword))
(defcfun ("GetServiceDisplayNameW" get-service-display-name-w :convention :stdcall) winbool  (|hSCManager| sc_handle) (|lpServiceName| lpcwstr) (|lpDisplayName| lpwstr) (|lpcchBuffer| lpdword))
(defcfun ("LockServiceDatabase" lock-service-database :convention :stdcall) sc_lock  (|hSCManager| sc_handle))
(defcfun ("NotifyBootConfigStatus" notify-boot-config-status :convention :stdcall) winbool  (|BootAcceptable| winbool))
(defcfun ("OpenSCManagerA" open-sc-manager-a :convention :stdcall) sc_handle  (|lpMachineName| lpcstr) (|lpDatabaseName| lpcstr) (|dwDesiredAccess| dword))
(defcfun ("OpenSCManagerW" open-sc-manager-w :convention :stdcall) sc_handle  (|lpMachineName| lpcwstr) (|lpDatabaseName| lpcwstr) (|dwDesiredAccess| dword))
(defcfun ("OpenServiceA" open-service-a :convention :stdcall) sc_handle  (|hSCManager| sc_handle) (|lpServiceName| lpcstr) (|dwDesiredAccess| dword))
(defcfun ("OpenServiceW" open-service-w :convention :stdcall) sc_handle  (|hSCManager| sc_handle) (|lpServiceName| lpcwstr) (|dwDesiredAccess| dword))
(defcfun ("QueryServiceConfigA" query-service-config-a :convention :stdcall) winbool  (|hService| sc_handle) (|lpServiceConfig| lpquery_service_configa) (|cbBufSize| dword) (|pcbBytesNeeded| lpdword))
(defcfun ("QueryServiceConfigW" query-service-config-w :convention :stdcall) winbool  (|hService| sc_handle) (|lpServiceConfig| lpquery_service_configw) (|cbBufSize| dword) (|pcbBytesNeeded| lpdword))
(defcfun ("QueryServiceConfig2A" query-service-config-2-a :convention :stdcall) winbool  (|hService| sc_handle) (|dwInfoLevel| dword) (|lpBuffer| lpbyte) (|cbBufSize| dword) (|pcbBytesNeeded| lpdword))
(defcfun ("QueryServiceConfig2W" query-service-config-2-w :convention :stdcall) winbool  (|hService| sc_handle) (|dwInfoLevel| dword) (|lpBuffer| lpbyte) (|cbBufSize| dword) (|pcbBytesNeeded| lpdword))
(defcfun ("QueryServiceLockStatusA" query-service-lock-status-a :convention :stdcall) winbool  (|hSCManager| sc_handle) (|lpLockStatus| lpquery_service_lock_statusa) (|cbBufSize| dword) (|pcbBytesNeeded| lpdword))
(defcfun ("QueryServiceLockStatusW" query-service-lock-status-w :convention :stdcall) winbool  (|hSCManager| sc_handle) (|lpLockStatus| lpquery_service_lock_statusw) (|cbBufSize| dword) (|pcbBytesNeeded| lpdword))
(defcfun ("QueryServiceObjectSecurity" query-service-object-security :convention :stdcall) winbool  (|hService| sc_handle) (|dwSecurityInformation| security_information) (|lpSecurityDescriptor| psecurity_descriptor) (|cbBufSize| dword) (|pcbBytesNeeded| lpdword))
(defcfun ("QueryServiceStatus" query-service-status :convention :stdcall) winbool  (|hService| sc_handle) (|lpServiceStatus| lpservice_status))
(defcfun ("QueryServiceStatusEx" query-service-status-ex :convention :stdcall) winbool  (|hService| sc_handle) (|InfoLevel| sc_status_type) (|lpBuffer| lpbyte) (|cbBufSize| dword) (|pcbBytesNeeded| lpdword))
(defcfun ("RegisterServiceCtrlHandlerA" register-service-ctrl-handler-a :convention :stdcall) service_status_handle  (|lpServiceName| lpcstr) (|lpHandlerProc| lphandler_function))
(defcfun ("RegisterServiceCtrlHandlerW" register-service-ctrl-handler-w :convention :stdcall) service_status_handle  (|lpServiceName| lpcwstr) (|lpHandlerProc| lphandler_function))
(defcfun ("RegisterServiceCtrlHandlerExA" register-service-ctrl-handler-ex-a :convention :stdcall) service_status_handle  (|lpServiceName| lpcstr) (|lpHandlerProc| lphandler_function_ex) (|lpContext| lpvoid))
(defcfun ("RegisterServiceCtrlHandlerExW" register-service-ctrl-handler-ex-w :convention :stdcall) service_status_handle  (|lpServiceName| lpcwstr) (|lpHandlerProc| lphandler_function_ex) (|lpContext| lpvoid))
(defcfun ("SetServiceObjectSecurity" set-service-object-security :convention :stdcall) winbool  (|hService| sc_handle) (|dwSecurityInformation| security_information) (|lpSecurityDescriptor| psecurity_descriptor))
(defcfun ("SetServiceStatus" set-service-status :convention :stdcall) winbool  (|hServiceStatus| service_status_handle) (|lpServiceStatus| lpservice_status))
(defcfun ("StartServiceCtrlDispatcherA" start-service-ctrl-dispatcher-a :convention :stdcall) winbool  (|lpServiceStartTable| :pointer))
(defcfun ("StartServiceCtrlDispatcherW" start-service-ctrl-dispatcher-w :convention :stdcall) winbool  (|lpServiceStartTable| :pointer))
(defcfun ("StartServiceA" start-service-a :convention :stdcall) winbool  (|hService| sc_handle) (|dwNumServiceArgs| dword) (|lpServiceArgVectors| :pointer))
(defcfun ("StartServiceW" start-service-w :convention :stdcall) winbool  (|hService| sc_handle) (|dwNumServiceArgs| dword) (|lpServiceArgVectors| :pointer))
(defcfun ("UnlockServiceDatabase" unlock-service-database :convention :stdcall) winbool  (|ScLock| sc_lock))
(defcfun ("ImmInstallIMEA" imm-install-imea :convention :stdcall) hkl  (|lpszIMEFileName| lpcstr) (|lpszLayoutText| lpcstr))
(defcfun ("ImmInstallIMEW" imm-install-imew :convention :stdcall) hkl  (|lpszIMEFileName| lpcwstr) (|lpszLayoutText| lpcwstr))
(defcfun ("ImmGetDefaultIMEWnd" imm-get-default-ime-wnd :convention :stdcall) hwnd  (arg0 hwnd))
(defcfun ("ImmGetDescriptionA" imm-get-description-a :convention :stdcall) uint  (arg0 hkl) (arg1 lpstr) (|uBufLen| uint))
(defcfun ("ImmGetDescriptionW" imm-get-description-w :convention :stdcall) uint  (arg0 hkl) (arg1 lpwstr) (|uBufLen| uint))
(defcfun ("ImmGetIMEFileNameA" imm-get-ime-file-name-a :convention :stdcall) uint  (arg0 hkl) (arg1 lpstr) (|uBufLen| uint))
(defcfun ("ImmGetIMEFileNameW" imm-get-ime-file-name-w :convention :stdcall) uint  (arg0 hkl) (arg1 lpwstr) (|uBufLen| uint))
(defcfun ("ImmGetProperty" imm-get-property :convention :stdcall) dword  (arg0 hkl) (arg1 dword))
(defcfun ("ImmIsIME" imm-is-ime :convention :stdcall) winbool  (arg0 hkl))
(defcfun ("ImmSimulateHotKey" imm-simulate-hot-key :convention :stdcall) winbool  (arg0 hwnd) (arg1 dword))
(defcfun ("ImmCreateContext" imm-create-context :convention :stdcall) himc )
(defcfun ("ImmDestroyContext" imm-destroy-context :convention :stdcall) winbool  (arg0 himc))
(defcfun ("ImmGetContext" imm-get-context :convention :stdcall) himc  (arg0 hwnd))
(defcfun ("ImmReleaseContext" imm-release-context :convention :stdcall) winbool  (arg0 hwnd) (arg1 himc))
(defcfun ("ImmAssociateContext" imm-associate-context :convention :stdcall) himc  (arg0 hwnd) (arg1 himc))
(defcfun ("ImmAssociateContextEx" imm-associate-context-ex :convention :stdcall) winbool  (arg0 hwnd) (arg1 himc) (arg2 dword))
(defcfun ("ImmGetCompositionStringA" imm-get-composition-string-a :convention :stdcall) long  (arg0 himc) (arg1 dword) (arg2 lpvoid) (arg3 dword))
(defcfun ("ImmGetCompositionStringW" imm-get-composition-string-w :convention :stdcall) long  (arg0 himc) (arg1 dword) (arg2 lpvoid) (arg3 dword))
(defcfun ("ImmSetCompositionStringA" imm-set-composition-string-a :convention :stdcall) winbool  (arg0 himc) (|dwIndex| dword) (|lpComp| lpvoid) (arg3 dword) (|lpRead| lpvoid) (arg5 dword))
(defcfun ("ImmSetCompositionStringW" imm-set-composition-string-w :convention :stdcall) winbool  (arg0 himc) (|dwIndex| dword) (|lpComp| lpvoid) (arg3 dword) (|lpRead| lpvoid) (arg5 dword))
(defcfun ("ImmGetCandidateListCountA" imm-get-candidate-list-count-a :convention :stdcall) dword  (arg0 himc) (|lpdwListCount| lpdword))
(defcfun ("ImmGetCandidateListCountW" imm-get-candidate-list-count-w :convention :stdcall) dword  (arg0 himc) (|lpdwListCount| lpdword))
(defcfun ("ImmGetCandidateListA" imm-get-candidate-list-a :convention :stdcall) dword  (arg0 himc) (|deIndex| dword) (arg2 lpcandidatelist) (|dwBufLen| dword))
(defcfun ("ImmGetCandidateListW" imm-get-candidate-list-w :convention :stdcall) dword  (arg0 himc) (|deIndex| dword) (arg2 lpcandidatelist) (|dwBufLen| dword))
(defcfun ("ImmGetGuideLineA" imm-get-guide-line-a :convention :stdcall) dword  (arg0 himc) (|dwIndex| dword) (arg2 lpstr) (|dwBufLen| dword))
(defcfun ("ImmGetGuideLineW" imm-get-guide-line-w :convention :stdcall) dword  (arg0 himc) (|dwIndex| dword) (arg2 lpwstr) (|dwBufLen| dword))
(defcfun ("ImmGetConversionStatus" imm-get-conversion-status :convention :stdcall) winbool  (arg0 himc) (arg1 lpdword) (arg2 lpdword))
(defcfun ("ImmSetConversionStatus" imm-set-conversion-status :convention :stdcall) winbool  (arg0 himc) (arg1 dword) (arg2 dword))
(defcfun ("ImmGetOpenStatus" imm-get-open-status :convention :stdcall) winbool  (arg0 himc))
(defcfun ("ImmSetOpenStatus" imm-set-open-status :convention :stdcall) winbool  (arg0 himc) (arg1 winbool))
(defcfun ("ImmGetCompositionFontA" imm-get-composition-font-a :convention :stdcall) winbool  (arg0 himc) (arg1 lplogfonta))
(defcfun ("ImmGetCompositionFontW" imm-get-composition-font-w :convention :stdcall) winbool  (arg0 himc) (arg1 lplogfontw))
(defcfun ("ImmSetCompositionFontA" imm-set-composition-font-a :convention :stdcall) winbool  (arg0 himc) (arg1 lplogfonta))
(defcfun ("ImmSetCompositionFontW" imm-set-composition-font-w :convention :stdcall) winbool  (arg0 himc) (arg1 lplogfontw))
(defcfun ("ImmConfigureIMEA" imm-configure-imea :convention :stdcall) winbool  (arg0 hkl) (arg1 hwnd) (arg2 dword) (arg3 lpvoid))
(defcfun ("ImmConfigureIMEW" imm-configure-imew :convention :stdcall) winbool  (arg0 hkl) (arg1 hwnd) (arg2 dword) (arg3 lpvoid))
(defcfun ("ImmEscapeA" imm-escape-a :convention :stdcall) lresult  (arg0 hkl) (arg1 himc) (arg2 uint) (arg3 lpvoid))
(defcfun ("ImmEscapeW" imm-escape-w :convention :stdcall) lresult  (arg0 hkl) (arg1 himc) (arg2 uint) (arg3 lpvoid))
(defcfun ("ImmGetConversionListA" imm-get-conversion-list-a :convention :stdcall) dword  (arg0 hkl) (arg1 himc) (arg2 lpcstr) (arg3 lpcandidatelist) (|dwBufLen| dword) (|uFlag| uint))
(defcfun ("ImmGetConversionListW" imm-get-conversion-list-w :convention :stdcall) dword  (arg0 hkl) (arg1 himc) (arg2 lpcwstr) (arg3 lpcandidatelist) (|dwBufLen| dword) (|uFlag| uint))
(defcfun ("ImmNotifyIME" imm-notify-ime :convention :stdcall) winbool  (arg0 himc) (|dwAction| dword) (|dwIndex| dword) (|dwValue| dword))
(defcfun ("ImmGetStatusWindowPos" imm-get-status-window-pos :convention :stdcall) winbool  (arg0 himc) (arg1 lppoint))
(defcfun ("ImmSetStatusWindowPos" imm-set-status-window-pos :convention :stdcall) winbool  (arg0 himc) (arg1 lppoint))
(defcfun ("ImmGetCompositionWindow" imm-get-composition-window :convention :stdcall) winbool  (arg0 himc) (arg1 lpcompositionform))
(defcfun ("ImmSetCompositionWindow" imm-set-composition-window :convention :stdcall) winbool  (arg0 himc) (arg1 lpcompositionform))
(defcfun ("ImmGetCandidateWindow" imm-get-candidate-window :convention :stdcall) winbool  (arg0 himc) (arg1 dword) (arg2 lpcandidateform))
(defcfun ("ImmSetCandidateWindow" imm-set-candidate-window :convention :stdcall) winbool  (arg0 himc) (arg1 lpcandidateform))
(defcfun ("ImmIsUIMessageA" imm-is-ui-message-a :convention :stdcall) winbool  (arg0 hwnd) (arg1 uint) (arg2 wparam) (arg3 lparam))
(defcfun ("ImmIsUIMessageW" imm-is-ui-message-w :convention :stdcall) winbool  (arg0 hwnd) (arg1 uint) (arg2 wparam) (arg3 lparam))
(defcfun ("ImmGetVirtualKey" imm-get-virtual-key :convention :stdcall) uint  (arg0 hwnd))
(defcfun ("ImmRegisterWordA" imm-register-word-a :convention :stdcall) winbool  (arg0 hkl) (|lpszReading| lpcstr) (arg2 dword) (|lpszRegister| lpcstr))
(defcfun ("ImmRegisterWordW" imm-register-word-w :convention :stdcall) winbool  (arg0 hkl) (|lpszReading| lpcwstr) (arg2 dword) (|lpszRegister| lpcwstr))
(defcfun ("ImmUnregisterWordA" imm-unregister-word-a :convention :stdcall) winbool  (arg0 hkl) (|lpszReading| lpcstr) (arg2 dword) (|lpszUnregister| lpcstr))
(defcfun ("ImmUnregisterWordW" imm-unregister-word-w :convention :stdcall) winbool  (arg0 hkl) (|lpszReading| lpcwstr) (arg2 dword) (|lpszUnregister| lpcwstr))
(defcfun ("ImmGetRegisterWordStyleA" imm-get-register-word-style-a :convention :stdcall) uint  (arg0 hkl) (|nItem| uint) (arg2 lpstylebufa))
(defcfun ("ImmGetRegisterWordStyleW" imm-get-register-word-style-w :convention :stdcall) uint  (arg0 hkl) (|nItem| uint) (arg2 lpstylebufw))
(defcfun ("ImmEnumRegisterWordA" imm-enum-register-word-a :convention :stdcall) uint  (arg0 hkl) (arg1 registerwordenumproca) (|lpszReading| lpcstr) (arg3 dword) (|lpszRegister| lpcstr) (arg5 lpvoid))
(defcfun ("ImmEnumRegisterWordW" imm-enum-register-word-w :convention :stdcall) uint  (arg0 hkl) (arg1 registerwordenumprocw) (|lpszReading| lpcwstr) (arg3 dword) (|lpszRegister| lpcwstr) (arg5 lpvoid))
(defcfun ("ImmDisableIME" imm-disable-ime :convention :stdcall) winbool  (arg0 dword))
(defcfun ("ImmEnumInputContext" imm-enum-input-context :convention :stdcall) winbool  (|idThread| dword) (|lpfn| imcenumproc) (|lParam| lparam))
(defcfun ("ImmGetImeMenuItemsA" imm-get-ime-menu-items-a :convention :stdcall) dword  (arg0 himc) (arg1 dword) (arg2 dword) (arg3 lpimemenuiteminfoa) (arg4 lpimemenuiteminfoa) (arg5 dword))
(defcfun ("ImmGetImeMenuItemsW" imm-get-ime-menu-items-w :convention :stdcall) dword  (arg0 himc) (arg1 dword) (arg2 dword) (arg3 lpimemenuiteminfow) (arg4 lpimemenuiteminfow) (arg5 dword))
(defcfun ("ImmDisableTextFrameService" imm-disable-text-frame-service :convention :stdcall) winbool  (|idThread| dword))
